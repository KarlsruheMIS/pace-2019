
extern/KaHIP/app/configuration.h,985
#define CONFIGURATION_3APG5V7ZCONFIGURATION_3APG5V7Z25,1078
class configuration {configuration29,1151
                configuration() {} ;configuration31,1189
                virtual ~configuration() {};~configuration32,1226
inline void configuration::strong( PartitionConfig & partition_config ) {strong45,1749
inline void configuration::eco( PartitionConfig & partition_config ) {eco82,4126
inline void configuration::fast( PartitionConfig & partition_config ) {fast107,5777
inline void configuration::standard( PartitionConfig & partition_config ) {standard135,7374
inline void configuration::standardsnw( PartitionConfig & partition_config ) {standardsnw295,16955
inline void configuration::fastsocial( PartitionConfig & partition_config ) {fastsocial320,18023
inline void configuration::ecosocial( PartitionConfig & partition_config ) {ecosocial328,18357
inline void configuration::strongsocial( PartitionConfig & partition_config ) {strongsocial339,18880

extern/KaHIP/app/balance_configuration.h,399
#define BALANCE_CONFIGURATION_JCQB9ZGVBALANCE_CONFIGURATION_JCQB9ZGV23,1089
class balance_configuration {balance_configuration28,1211
        balance_configuration() {};balance_configuration30,1249
        virtual ~balance_configuration() {};~balance_configuration31,1285
        void configurate_balance( PartitionConfig & partition_config, graph_access & G ) {configurate_balance33,1331

extern/KaHIP/interface/kaHIP_interface.cpp,441
void internal_build_graph( PartitionConfig & partition_config, internal_build_graph41,1684
void internal_kaffpa_call(PartitionConfig & partition_config, internal_kaffpa_call70,2609
void kaffpa(int* n, kaffpa107,3751
void kaffpa_balance_NE(int* n, kaffpa_balance_NE151,5269
void internal_nodeseparator_call(PartitionConfig & partition_config, internal_nodeseparator_call196,6845
void node_separator(int* n, node_separator250,8719

extern/KaHIP/interface/kaHIP_interface.h,346
#define KAFFPA_INTERFACE_RYEEZ6WJKAFFPA_INTERFACE_RYEEZ6WJ25,1084
const int FAST           = 0;FAST33,1160
const int ECO            = 1;ECO34,1190
const int STRONG         = 2;STRONG35,1220
const int FASTSOCIAL     = 3;FASTSOCIAL36,1250
const int ECOSOCIAL      = 4;ECOSOCIAL37,1280
const int STRONGSOCIAL   = 5;STRONGSOCIAL38,1310

extern/KaHIP/lib/io/graph_io.h,274
#define GRAPHIO_H_GRAPHIO_H_24,1083
class graph_io {graph_io37,1317
void graph_io::writeVector(std::vector<vectortype> & vec, std::string filename) {writeVector73,2469
void graph_io::readVector(std::vector<vectortype> & vec, std::string filename) {readVector83,2763

extern/KaHIP/lib/io/graph_io.cpp,745
graph_io::graph_io() {graph_io26,1085
graph_io::~graph_io() {~graph_io30,1128
int graph_io::writeGraphWeighted(graph_access & G, std::string filename) {writeGraphWeighted34,1172
int graph_io::writeGraph(graph_access & G, std::string filename) {writeGraph50,1725
int graph_io::readPartition(graph_access & G, std::string filename) {readPartition67,2269
int graph_io::readGraphWeighted(graph_access & G, std::string filename) {readGraphWeighted99,3196
void graph_io::writePartition(graph_access & G, std::string filename) {writePartition227,7681
void graph_io::writeIndependentSet(graph_access & G, std::string filename) {writeIndependentSet238,8013
int graph_io::checkGraphSorted(std::string filename) {checkGraphSorted249,8356

extern/KaHIP/lib/definitions.h,5130
#define DEFINITIONS_H_CHRDEFINITIONS_H_CHR24,1093
        #define PRINT(PRINT36,1340
        #define PRINT(PRINT38,1375
typedef unsigned long 	NodeID;NodeID46,1598
typedef double 		EdgeRatingType;EdgeRatingType47,1630
typedef unsigned long 	EdgeID;EdgeID48,1664
typedef unsigned long 	PathID;PathID49,1696
typedef unsigned long 	PartitionID;PartitionID50,1728
typedef unsigned long 	NodeWeight;NodeWeight51,1765
typedef long 		EdgeWeight;EdgeWeight52,1801
typedef EdgeWeight 	Gain;Gain53,1829
typedef long 		Color;Color54,1856
typedef unsigned long 	Count;Count55,1879
typedef std::vector<NodeID> boundary_starting_nodes;boundary_starting_nodes56,1910
typedef long FlowType;FlowType57,1964
typedef unsigned int 	NodeID;NodeID59,1995
typedef double 		EdgeRatingType;EdgeRatingType60,2026
typedef unsigned int 	EdgeID;EdgeID61,2060
typedef unsigned int 	PathID;PathID62,2091
typedef unsigned int 	PartitionID;PartitionID63,2122
typedef unsigned int 	NodeWeight;NodeWeight64,2158
typedef int 		EdgeWeight;EdgeWeight65,2193
typedef EdgeWeight 	Gain;Gain66,2220
typedef int 		Color;Color67,2247
typedef unsigned int 	Count;Count68,2269
typedef std::vector<NodeID> boundary_starting_nodes;boundary_starting_nodes69,2299
typedef long FlowType;FlowType70,2353
const EdgeID UNDEFINED_EDGE            = std::numeric_limits<EdgeID>::max();UNDEFINED_EDGE73,2402
const NodeID NOTMAPPED                 = std::numeric_limits<EdgeID>::max();NOTMAPPED74,2480
const NodeID UNDEFINED_NODE            = std::numeric_limits<NodeID>::max();UNDEFINED_NODE75,2558
const PartitionID INVALID_PARTITION    = std::numeric_limits<PartitionID>::max();INVALID_PARTITION76,2636
const PartitionID BOUNDARY_STRIPE_NODE = std::numeric_limits<PartitionID>::max();BOUNDARY_STRIPE_NODE77,2719
const int NOTINQUEUE 		       = std::numeric_limits<int>::max();NOTINQUEUE78,2802
const int ROOT 			       = 0;ROOT79,2868
struct edge_source_pair {edge_source_pair82,2926
        EdgeID e;e83,2953
        NodeID source;       source84,2972
struct source_target_pair {source_target_pair87,3009
        NodeID source;       source88,3038
        NodeID target;       target89,3069
typedef std::vector<NodeID> CoarseMapping;CoarseMapping93,3203
typedef std::vector<NodeID> Matching;Matching94,3247
typedef std::vector<NodeID> NodePermutationMap;NodePermutationMap95,3286
typedef double ImbalanceType;ImbalanceType97,3337
        EXPANSIONSTAR, EXPANSIONSTAR100,3398
        EXPANSIONSTAR2, EXPANSIONSTAR2101,3423
 	WEIGHT, WEIGHT102,3449
	PSEUDOGEOM, PSEUDOGEOM103,3461
	EXPANSIONSTAR2ALGDIST, EXPANSIONSTAR2ALGDIST104,3476
} EdgeRating;EdgeRating105,3502
        PERMUTATION_QUALITY_NONE, PERMUTATION_QUALITY_NONE108,3535
	PERMUTATION_QUALITY_FAST,  PERMUTATION_QUALITY_FAST109,3571
	PERMUTATION_QUALITY_GOODPERMUTATION_QUALITY_GOOD110,3601
} PermutationQuality;PermutationQuality111,3628
        MATCHING_RANDOM, MATCHING_RANDOM114,3669
	MATCHING_GPA, MATCHING_GPA115,3696
	MATCHING_RANDOM_GPA,MATCHING_RANDOM_GPA116,3713
        CLUSTER_COARSENINGCLUSTER_COARSENING117,3736
} MatchingType;MatchingType118,3764
	INITIAL_PARTITIONING_RECPARTITION, INITIAL_PARTITIONING_RECPARTITION121,3799
	INITIAL_PARTITIONING_BIPARTITIONINITIAL_PARTITIONING_BIPARTITION122,3837
} InitialPartitioningType;InitialPartitioningType123,3872
        REFINEMENT_SCHEDULING_FAST, REFINEMENT_SCHEDULING_FAST126,3918
	REFINEMENT_SCHEDULING_ACTIVE_BLOCKS, REFINEMENT_SCHEDULING_ACTIVE_BLOCKS127,3956
	REFINEMENT_SCHEDULING_ACTIVE_BLOCKS_REF_KWAYREFINEMENT_SCHEDULING_ACTIVE_BLOCKS_REF_KWAY128,3996
} RefinementSchedulingAlgorithm;RefinementSchedulingAlgorithm129,4043
        REFINEMENT_TYPE_FM, REFINEMENT_TYPE_FM132,4095
	REFINEMENT_TYPE_FM_FLOW, REFINEMENT_TYPE_FM_FLOW133,4125
	REFINEMENT_TYPE_FLOWREFINEMENT_TYPE_FLOW134,4153
} RefinementType;RefinementType135,4176
        STOP_RULE_SIMPLE, STOP_RULE_SIMPLE138,4213
	STOP_RULE_MULTIPLE_K, STOP_RULE_MULTIPLE_K139,4241
	STOP_RULE_STRONG STOP_RULE_STRONG140,4266
} StopRule;StopRule141,4286
        BIPARTITION_BFS, BIPARTITION_BFS144,4317
	BIPARTITION_FMBIPARTITION_FM145,4344
} BipartitionAlgorithm ;BipartitionAlgorithm146,4361
        KWAY_SIMPLE_STOP_RULE, KWAY_SIMPLE_STOP_RULE149,4405
	KWAY_ADAPTIVE_STOP_RULEKWAY_ADAPTIVE_STOP_RULE150,4438
} KWayStopRule;KWayStopRule151,4464
        COIN_RNDTIE, COIN_RNDTIE154,4499
	COIN_DIFFTIE, COIN_DIFFTIE155,4522
	NOCOIN_RNDTIE, NOCOIN_RNDTIE156,4539
	NOCOIN_DIFFTIE NOCOIN_DIFFTIE157,4557
} MLSRule;MLSRule158,4575
        CYCLE_REFINEMENT_ALGORITHM_PLAYFIELD, CYCLE_REFINEMENT_ALGORITHM_PLAYFIELD161,4605
        CYCLE_REFINEMENT_ALGORITHM_ULTRA_MODEL, CYCLE_REFINEMENT_ALGORITHM_ULTRA_MODEL162,4653
	CYCLE_REFINEMENT_ALGORITHM_ULTRA_MODEL_PLUSCYCLE_REFINEMENT_ALGORITHM_ULTRA_MODEL_PLUS163,4703
} CycleRefinementAlgorithm;CycleRefinementAlgorithm164,4749
        RANDOM_NODEORDERING, RANDOM_NODEORDERING167,4796
        DEGREE_NODEORDERINGDEGREE_NODEORDERING168,4827
} NodeOrderingType;NodeOrderingType169,4856

extern/KaHIP/lib/parallel_mh/parallel_mh_async.cpp,668
parallel_mh_async::parallel_mh_async() : MASTER(0), m_time_limit(0) {parallel_mh_async39,1419
parallel_mh_async::~parallel_mh_async() {~parallel_mh_async48,1842
void parallel_mh_async::perform_partitioning(const PartitionConfig & partition_config, graph_access & G) {perform_partitioning52,1923
void parallel_mh_async::initialize(PartitionConfig & working_config, graph_access & G) {initialize114,4419
EdgeWeight parallel_mh_async::collect_best_partitioning(graph_access & G) {collect_best_partitioning161,6354
EdgeWeight parallel_mh_async::perform_local_partitioning(PartitionConfig & working_config, graph_access & G) {perform_local_partitioning209,8181

extern/KaHIP/lib/parallel_mh/population.cpp,1636
population::population( const PartitionConfig & partition_config ) {population39,1434
population::~population() {~population49,1809
void population::set_pool_size(int size) {set_pool_size56,2055
void population::createIndividuum(const PartitionConfig & config, createIndividuum60,2135
void population::insert(graph_access & G, Individuum & ind) {insert134,4852
void population::replace(Individuum & in, Individuum & out) {replace189,7680
void population::combine(const PartitionConfig & partition_config, combine203,8214
void population::combine_cross(const PartitionConfig & partition_config, combine_cross261,10224
void population::mutate_random( const PartitionConfig & partition_config, graph_access & G, Individuum & first_ind) {mutate_random317,12510
void population::extinction( ) {extinction343,13485
void population::get_two_random_individuals(Individuum & first, Individuum & second) {get_two_random_individuals353,13807
void population::get_one_individual_tournament(Individuum & first) {get_one_individual_tournament365,14318
void population::get_two_individuals_tournament(Individuum & first, Individuum & second) {get_two_individuals_tournament371,14526
void population::get_random_individuum(Individuum & ind) {get_random_individuum384,14993
void population::get_best_individuum(Individuum & ind) {get_best_individuum389,15181
bool population::is_full() {is_full403,15700
void population::apply_fittest( graph_access & G, EdgeWeight & objective ) {apply_fittest407,15798
void population::print() {print433,16854
void population::write_log(std::string & filename) {write_log444,17187

extern/KaHIP/lib/parallel_mh/galinier_combine/gal_combine.cpp,213
gal_combine::gal_combine() {gal_combine36,1461
gal_combine::~gal_combine() {~gal_combine40,1510
void gal_combine::perform_gal_combine( PartitionConfig & config, graph_access & G) {perform_gal_combine49,1715

extern/KaHIP/lib/parallel_mh/galinier_combine/construct_partition.h,130
#define CONSTRUCT_PARTITION_E86DQF5SCONSTRUCT_PARTITION_E86DQF5S24,1089
class construct_partition {construct_partition30,1235

extern/KaHIP/lib/parallel_mh/galinier_combine/gal_combine.h,98
#define GAL_COMBINE_XDMU5YB7GAL_COMBINE_XDMU5YB724,1073
class gal_combine {gal_combine29,1175

extern/KaHIP/lib/parallel_mh/galinier_combine/construct_partition.cpp,444
construct_partition::construct_partition() {construct_partition34,1445
construct_partition::~construct_partition() {~construct_partition38,1510
void construct_partition::construct_starting_from_partition( PartitionConfig & config, graph_access & G) {construct_starting_from_partition42,1576
void construct_partition::createIndividuum( PartitionConfig & config, graph_access & G, Individuum & ind, bool output) {createIndividuum123,4054

extern/KaHIP/lib/parallel_mh/parallel_mh_async.h,699
#define PARALLEL_MH_ASYNC_HF106Y0GPARALLEL_MH_ASYNC_HF106Y0G24,1085
class parallel_mh_async {parallel_mh_async31,1236
        const unsigned MASTER;MASTER44,1829
        timer    m_t;m_t45,1860
        int      m_rank;m_rank46,1882
        int      m_size;m_size47,1907
        double   m_time_limit;m_time_limit48,1932
        bool     m_termination;m_termination49,1963
        unsigned m_rounds;m_rounds50,1995
        PartitionID* m_best_global_map;m_best_global_map53,2059
        int          m_best_global_objective;m_best_global_objective54,2099
        int          m_best_cycle_objective;m_best_cycle_objective55,2145
        population* m_island;m_island58,2208

extern/KaHIP/lib/parallel_mh/population.h,1254
#define POPULATION_AEFH46G6POPULATION_AEFH46G624,1071
struct Individuum {Individuum32,1211
        int* partition_map;partition_map33,1231
        EdgeWeight objective;objective34,1259
        std::vector<EdgeID>* cut_edges; //sortedcut_edges35,1289
struct ENC {ENC38,1342
        std::vector<NodeID> vertices;vertices39,1355
class population {population42,1397
                unsigned size() { return m_internal_population.size(); }size89,3084
                unsigned                m_no_partition_calls;m_no_partition_calls98,3281
                unsigned 		m_population_size;m_population_size99,3343
                std::vector<Individuum> m_internal_population;m_internal_population100,3389
                std::vector< std::vector< unsigned int > > m_vertex_ENCs;m_vertex_ENCs101,3452
                std::vector< ENC > m_ENCs;m_ENCs102,3526
                int m_num_NCs;m_num_NCs104,3570
                int m_num_NCs_computed;m_num_NCs_computed105,3601
                int m_num_ENCs;m_num_ENCs106,3641
                int m_time_stamp;m_time_stamp107,3673
                std::stringstream m_filebuffer_string;m_filebuffer_string109,3708
                timer   	  m_global_timer;m_global_timer110,3763

extern/KaHIP/lib/parallel_mh/exchange/exchanger.h,570
#define EXCHANGER_YPB6QKNLEXCHANGER_YPB6QKNL24,1069
class exchanger {exchanger31,1240
        std::vector< int* >          m_partition_map_buffers;m_partition_map_buffers49,2044
        std::vector< MPI::Request* > m_request_pointers;m_request_pointers50,2106
        std::vector<bool>            m_allready_send_to;m_allready_send_to51,2163
        int m_prev_best_objective;m_prev_best_objective53,2221
        int m_max_num_pushes;m_max_num_pushes54,2256
        int m_cur_num_pushes;m_cur_num_pushes55,2286
        quality_metrics m_qm;m_qm57,2317

extern/KaHIP/lib/parallel_mh/exchange/exchanger.cpp,708
exchanger::exchanger() {exchanger29,1157
exchanger::~exchanger() {~exchanger50,1816
void exchanger::diversify_population( PartitionConfig & config, graph_access & G,  population & island, bool replace ) {diversify_population74,2704
void exchanger::quick_start( PartitionConfig & config, graph_access & G, population & island ) {quick_start113,3873
void exchanger::exchange_individum( const PartitionConfig & config,  graph_access & G, exchange_individum140,4898
void exchanger::push_best( PartitionConfig & config, graph_access & G, population & island ) {push_best168,6081
void exchanger::recv_incoming( PartitionConfig & config, graph_access & G, population & island ) {recv_incoming237,8813

extern/KaHIP/lib/parallel_mh/diversifyer.h,349
#define DIVERSIFYER_AZQIF42RDIVERSIFYER_AZQIF42R24,1073
class diversifyer {diversifyer28,1134
        diversifyer() {} ;diversifyer30,1162
        virtual ~diversifyer() {};~diversifyer31,1189
        void diversify(PartitionConfig & config) {diversify33,1225
        void diversify_kaba(PartitionConfig & config) {diversify_kaba40,1620

extern/KaHIP/lib/tools/graph_partition_assertions.h,489
#define GRAPH_PARTITION_ASSERTIONS_609QZZDMGRAPH_PARTITION_ASSERTIONS_609QZZDM24,1103
class graph_partition_assertions {graph_partition_assertions29,1220
                graph_partition_assertions( ) {};graph_partition_assertions31,1271
                virtual ~graph_partition_assertions() {};~graph_partition_assertions32,1321
                static bool assert_graph_has_kway_partition(const PartitionConfig & config, graph_access & G) {assert_graph_has_kway_partition34,1380

extern/KaHIP/lib/tools/graph_extractor.h,114
#define GRAPH_EXTRACTOR_PDUTVIEFGRAPH_EXTRACTOR_PDUTVIEF24,1081
class graph_extractor {graph_extractor29,1182

extern/KaHIP/lib/tools/partition_snapshooter.cpp,701
partition_snapshooter* partition_snapshooter::m_instance = NULL;m_instance29,1159
partition_snapshooter::partition_snapshooter() {partition_snapshooter31,1225
partition_snapshooter::~partition_snapshooter() {~partition_snapshooter36,1333
partition_snapshooter * partition_snapshooter::getInstance() {getInstance40,1410
void partition_snapshooter::addSnapshot(graph_access & G) {addSnapshot47,1607
void partition_snapshooter::addSnapshot(graph_access & G, std::vector<PartitionID> & ext_partition_map) {addSnapshot61,2108
void partition_snapshooter::flush_buffer() {flush_buffer75,2578
void partition_snapshooter::set_buffer_size( unsigned int new_buffer_size ) {set_buffer_size94,3134

extern/KaHIP/lib/tools/graph_communication.cpp,250
graph_communication::graph_communication() {graph_communication27,1106
graph_communication::~graph_communication() {~graph_communication31,1171
void graph_communication::broadcast_graph( graph_access & G, unsigned root) {broadcast_graph35,1237

extern/KaHIP/lib/tools/random_functions.cpp,233
MersenneTwister random_functions::m_mt;m_mt25,1082
int random_functions::m_seed = 0;m_seed26,1122
random_functions::random_functions()  {random_functions28,1157
random_functions::~random_functions() {~random_functions31,1200

extern/KaHIP/lib/tools/graph_communication.h,130
#define GRAPH_COMMUNICATION_J5Q2P80GGRAPH_COMMUNICATION_J5Q2P80G24,1089
class graph_communication {graph_communication28,1169

extern/KaHIP/lib/tools/misc.cpp,167
misc::misc() {misc26,1087
misc::~misc() {~misc30,1106
void misc::balance_singletons(const PartitionConfig & config, graph_access & G) {balance_singletons34,1126

extern/KaHIP/lib/tools/graph_extractor.cpp,396
graph_extractor::graph_extractor() {graph_extractor27,1106
graph_extractor::~graph_extractor() {~graph_extractor31,1147
void graph_extractor::extract_block(graph_access & G, extract_block35,1189
void graph_extractor::extract_two_blocks(graph_access & G, extract_two_blocks74,2816
void graph_extractor::extract_two_blocks_connected(graph_access & G, extract_two_blocks_connected144,6252

extern/KaHIP/lib/tools/partition_snapshooter.h,556
#define PARTITION_SNAPSHOOTER_LGCUMS2IPARTITION_SNAPSHOOTER_LGCUMS2I24,1093
class partition_snapshooter {partition_snapshooter29,1220
                partition_snapshooter(const partition_snapshooter&) {}          partition_snapshooter41,1687
                static partition_snapshooter* m_instance;m_instance44,1819
                unsigned int m_buffer_size;m_buffer_size46,1878
                unsigned int m_idx;m_idx47,1922
                std::vector< std::vector< PartitionID >* > m_partition_map_buffer;m_partition_map_buffer49,1959

extern/KaHIP/lib/tools/random_functions.h,1225
#define RANDOM_FUNCTIONS_RMEPKWYTRANDOM_FUNCTIONS_RMEPKWYT24,1083
typedef std::mt19937 MersenneTwister;MersenneTwister33,1231
class random_functions {random_functions35,1270
                        static void circular_permutation(std::vector<sometype> & vec) {circular_permutation41,1437
                        static void permutate_vector_fast(std::vector<sometype> & vec, bool init) {permutate_vector_fast67,2713
                        static void permutate_vector_good(std::vector<sometype> & vec, bool init) {permutate_vector_good90,4090
                        static void permutate_vector_good_small(std::vector<sometype> & vec) {permutate_vector_good_small117,5572
                        static void permutate_entries(const PartitionConfig & partition_config, permutate_entries131,6361
                static bool nextBool() {nextBool148,7347
                static unsigned nextInt(unsigned int lb, unsigned int rb) {nextInt155,7570
                static double nextDouble(double lb, double rb) {nextDouble160,7784
                static void setSeed(int seed) {setSeed169,8139
                static int m_seed;m_seed176,8342
                static MersenneTwister m_mt;m_mt177,8377

extern/KaHIP/lib/tools/macros_assertions.h,1000
#define ASSERT_HASSERT_H24,1067
# define ASSERT_TRUE(ASSERT_TRUE37,1404
# define ASSERT_TRUE(ASSERT_TRUE39,1455
# define ASSERT_NEQ(ASSERT_NEQ52,1894
# define ASSERT_NEQ(ASSERT_NEQ54,1954
# define ASSERT_EQ(ASSERT_EQ68,2480
# define ASSERT_EQ(ASSERT_EQ70,2539
# define ASSERT_LT(ASSERT_LT84,3063
# define ASSERT_LT(ASSERT_LT86,3122
# define ASSERT_GT(ASSERT_GT100,3645
# define ASSERT_GT(ASSERT_GT102,3704
# define ASSERT_LEQ(ASSERT_LEQ116,4228
# define ASSERT_LEQ(ASSERT_LEQ118,4288
# define ASSERT_GEQ(ASSERT_GEQ132,4812
# define ASSERT_GEQ(ASSERT_GEQ134,4872
# define ASSERT_BETWEEN(ASSERT_BETWEEN148,5394
# define ASSERT_BETWEEN(ASSERT_BETWEEN150,5454
# define ASSERT_RANGE_GT(ASSERT_RANGE_GT165,6113
# define ASSERT_RANGE_GT(ASSERT_RANGE_GT167,6193
# define ASSERT_RANGE_GEQ(ASSERT_RANGE_GEQ176,6479
# define ASSERT_RANGE_GEQ(ASSERT_RANGE_GEQ178,6560
# define ASSERT_RANGE_EQ(ASSERT_RANGE_EQ186,6793
# define ASSERT_RANGE_EQ(ASSERT_RANGE_EQ188,6870

extern/KaHIP/lib/tools/mpi_tools.cpp,166
mpi_tools::mpi_tools() {mpi_tools28,1106
mpi_tools::~mpi_tools() {~mpi_tools32,1151
void mpi_tools::non_active_wait_for_root() {non_active_wait_for_root37,1198

extern/KaHIP/lib/tools/quality_metrics.h,114
#define QUALITY_METRICS_10HC2I5MQUALITY_METRICS_10HC2I5M25,1082
class quality_metrics {quality_metrics30,1188

extern/KaHIP/lib/tools/misc.h,70
#define MISC_C6QUUWLIMISC_C6QUUWLI24,1059
class misc {misc29,1154

extern/KaHIP/lib/tools/quality_metrics.cpp,1028
quality_metrics::quality_metrics() {quality_metrics31,1184
quality_metrics::~quality_metrics () {~quality_metrics34,1224
EdgeWeight quality_metrics::edge_cut(graph_access & G) {edge_cut37,1266
EdgeWeight quality_metrics::edge_cut(graph_access & G, int * partition_map) {edge_cut53,1886
EdgeWeight quality_metrics::edge_cut(graph_access & G, PartitionID lhs, PartitionID rhs) {edge_cut69,2515
EdgeWeight quality_metrics::edge_cut_connected(graph_access & G, int * partition_map) {edge_cut_connected86,3207
EdgeWeight quality_metrics::max_communication_volume(graph_access & G, int * partition_map) {max_communication_volume127,4706
EdgeWeight quality_metrics::max_communication_volume(graph_access & G) {max_communication_volume151,5610
int quality_metrics::boundary_nodes(graph_access& G) {boundary_nodes175,6505
double quality_metrics::balance(graph_access& G) {balance194,7181
EdgeWeight quality_metrics::objective(const PartitionConfig & config, graph_access & G, int* partition_map) {objective219,7985

extern/KaHIP/lib/tools/macros_common.h,380
#define MACROS_COMMON_HMACROS_COMMON_H24,1085
# define DEBUG DEBUG28,1186
# define VLOG(VLOG32,1221
# define VVLOG(VVLOG33,1240
# define VLOG(VLOG35,1266
# define VVLOG(VVLOG36,1283
#define DISALLOW_COPY_AND_ASSIGN(DISALLOW_COPY_AND_ASSIGN42,1437
#define DISALLOW_ASSIGN(DISALLOW_ASSIGN48,1612
#define ASSERT_H_XSTR(ASSERT_H_XSTR53,1709
#define STR(STR56,1799

extern/KaHIP/lib/tools/mpi_tools.h,90
#define MPI_TOOLS_HMESDXF2MPI_TOOLS_HMESDXF224,1069
class mpi_tools {mpi_tools27,1098

extern/KaHIP/lib/tools/timer.h,322
#define TIMER_9KPDEPTIMER_9KPDEP24,1059
class timer {timer30,1152
                timer() {timer32,1182
                void restart() { restart36,1276
                double elapsed() { elapsed40,1378
                inline double timestamp() {timestamp47,1592
                double m_start;m_start53,1821

extern/KaHIP/lib/algorithms/strongly_connected_components.h,571
#define STRONGLY_CONNECTED_COMPONENTS_7ZJ8233RSTRONGLY_CONNECTED_COMPONENTS_7ZJ8233R24,1109
class strongly_connected_components {strongly_connected_components32,1260
        int m_dfscount; m_dfscount41,1557
        int m_comp_count;m_comp_count42,1582
        std::vector<int> m_dfsnum;m_dfsnum44,1609
        std::vector<int> m_comp_num;m_comp_num45,1644
        std::stack<NodeID> m_unfinished;m_unfinished46,1681
        std::stack<NodeID> m_roots;m_roots47,1722
        std::stack< std::pair<NodeID,EdgeID> > iteration_stack;iteration_stack48,1758

extern/KaHIP/lib/algorithms/cycle_search.cpp,876
double cycle_search::total_time = 0;total_time30,1199
cycle_search::cycle_search() {cycle_search32,1237
cycle_search::~cycle_search() {~cycle_search36,1272
void cycle_search::find_random_cycle(graph_access & G, std::vector<NodeID> & cycle) {find_random_cycle40,1308
bool cycle_search::find_shortest_path(graph_access & G, find_shortest_path166,4665
bool cycle_search::find_negative_cycle(graph_access & G, NodeID & start, std::vector<NodeID> & cycle) {find_negative_cycle190,5701
int cycle_search::bellman_ford_with_subtree_disassembly_and_updates(graph_access & G, bellman_ford_with_subtree_disassembly_and_updates199,6112
bool cycle_search::negative_cycle_detection(graph_access & G, negative_cycle_detection317,11669
bool cycle_search::find_zero_weight_cycle(graph_access & G, NodeID & start, std::vector<NodeID> & cycle) {find_zero_weight_cycle365,13442

extern/KaHIP/lib/algorithms/push_relabel.h,1504
#define MAX_FLOW_MIN_CUT_Q5EJKHNSMAX_FLOW_MIN_CUT_Q5EJKHNS24,1080
const int    WORK_OP_RELABEL    = 9;WORK_OP_RELABEL32,1266
const double GLOBAL_UPDATE_FRQ  = 0.51;GLOBAL_UPDATE_FRQ33,1303
const int    WORK_NODE_TO_EDGES = 4;WORK_NODE_TO_EDGES34,1343
class push_relabel {push_relabel36,1381
        void init( flow_graph & G, NodeID source, NodeID sink ) {init41,1469
        void global_relabeling( NodeID source, NodeID sink ) {global_relabeling64,2407
        void push( NodeID source, EdgeID e) {push98,3953
        void enqueue( NodeID target ) {enqueue120,4864
        void discharge( NodeID node ) {discharge130,5250
        void gap_heuristic( NodeID level ) {gap_heuristic148,5977
        void relabel( NodeID node ) {relabel161,6509
        FlowType solve_max_flow_min_cut( flow_graph & G, solve_max_flow_min_cut180,7234
        std::vector<long long> m_excess;m_excess241,9833
        std::vector<NodeID>    m_distance;m_distance242,9874
	std::vector<bool>      m_active; // store which nodes are in the queue alreadym_active243,9917
	std::vector<int>       m_count;m_count244,9997
        std::queue<NodeID>     m_Q;m_Q245,10030
	std::vector<bool>      m_bfstouched; m_bfstouched246,10066
        int m_num_relabels;m_num_relabels248,10143
        int m_gaps;m_gaps249,10171
        int m_global_updates;m_global_updates250,10191
        int m_pushes;m_pushes251,10221
        int m_work;m_work252,10243
        flow_graph * m_G;m_G253,10263

extern/KaHIP/lib/algorithms/topological_sort.h,118
#define TOPOLOGICAL_SORT_GB9FC2CZTOPOLOGICAL_SORT_GB9FC2CZ24,1083
class topological_sort {topological_sort32,1221

extern/KaHIP/lib/algorithms/push_relabel.cpp,107
push_relabel::push_relabel( ) {push_relabel25,1074
push_relabel::~push_relabel() {~push_relabel29,1126

extern/KaHIP/lib/algorithms/strongly_connected_components.cpp,448
strongly_connected_components::strongly_connected_components() {strongly_connected_components28,1144
strongly_connected_components::~strongly_connected_components() {~strongly_connected_components32,1213
int strongly_connected_components::strong_components( graph_access & G, std::vector<int> & comp_num) {strong_components36,1283
void strongly_connected_components::explicit_scc_dfs(NodeID node, graph_access & G){ explicit_scc_dfs62,2005

extern/KaHIP/lib/algorithms/cycle_search.h,155
#define CYCLE_SEARCH_IO23844CCYCLE_SEARCH_IO23844C24,1075
class cycle_search {cycle_search28,1148
        static double total_time;total_time42,1701

extern/KaHIP/lib/algorithms/topological_sort.cpp,312
topological_sort::topological_sort() {topological_sort28,1134
topological_sort::~topological_sort() {~topological_sort32,1193
void topological_sort::sort( graph_access & G, std::vector<NodeID> & sorted_sequence) {sort36,1253
void topological_sort::sort_dfs(NodeID node, graph_access & G, sort_dfs54,1859

extern/KaHIP/lib/partition/partition_config.h,9247
#define PARTITION_CONFIG_DI1ES4T0PARTITION_CONFIG_DI1ES4T024,1083
struct PartitionConfigPartitionConfig29,1183
        PartitionConfig() {}PartitionConfig31,1208
        bool edge_rating_tiebreaking;edge_rating_tiebreaking37,1452
        EdgeRating edge_rating;edge_rating39,1491
        PermutationQuality permutation_quality;permutation_quality41,1532
        MatchingType matching_type;matching_type43,1581
        bool match_islands;match_islands45,1626
        bool first_level_random_matching;first_level_random_matching47,1655
        bool rate_first_level_inner_outer;rate_first_level_inner_outer49,1706
        NodeWeight max_vertex_weight; max_vertex_weight51,1750
        NodeWeight largest_graph_weight; largest_graph_weight53,1798
	NodeWeight work_load;work_load55,1841
        unsigned aggressive_random_levels;aggressive_random_levels57,1865
        bool disable_max_vertex_weight_constraint;disable_max_vertex_weight_constraint59,1917
        unsigned int initial_partitioning_repetitions;initial_partitioning_repetitions64,2182
        unsigned int minipreps;minipreps66,2238
        bool refined_bubbling; refined_bubbling68,2271
        InitialPartitioningType initial_partitioning_type;initial_partitioning_type70,2304
        bool initial_partition_optimize;initial_partition_optimize72,2364
        BipartitionAlgorithm bipartition_algorithm;bipartition_algorithm74,2406
        bool initial_partitioning;initial_partitioning76,2459
        int bipartition_tries;bipartition_tries78,2495
        int bipartition_post_fm_limits;bipartition_post_fm_limits80,2527
        int bipartition_post_ml_limits;bipartition_post_ml_limits82,2568
        bool corner_refinement_enabled;corner_refinement_enabled87,2822
        bool use_bucket_queues;use_bucket_queues89,2863
        RefinementType refinement_type;refinement_type91,2896
        PermutationQuality permutation_during_refinement;permutation_during_refinement93,2937
        ImbalanceType imbalance;imbalance95,2996
        unsigned bubbling_iterations;bubbling_iterations97,3030
        unsigned kway_rounds; kway_rounds99,3076
        bool quotient_graph_refinement_disabled; quotient_graph_refinement_disabled101,3115
        KWayStopRule kway_stop_rule;kway_stop_rule103,3166
        double kway_adaptive_limits_alpha;kway_adaptive_limits_alpha105,3204
        double kway_adaptive_limits_beta;kway_adaptive_limits_beta107,3248
        unsigned max_flow_iterations;max_flow_iterations109,3291
        unsigned local_multitry_rounds;local_multitry_rounds111,3330
        unsigned local_multitry_fm_alpha;local_multitry_fm_alpha113,3379
        bool graph_allready_partitioned;graph_allready_partitioned115,3422
        unsigned int fm_search_limit;fm_search_limit117,3464
        unsigned int kway_fm_search_limit;kway_fm_search_limit119,3511
        NodeWeight upper_bound_partition;upper_bound_partition121,3555
        double bank_account_factor;bank_account_factor123,3598
        RefinementSchedulingAlgorithm refinement_scheduling_algorithm; refinement_scheduling_algorithm125,3635
        bool most_balanced_minimum_cuts;most_balanced_minimum_cuts127,3708
        unsigned toposort_iterations;toposort_iterations129,3758
        bool softrebalance;softrebalance131,3797
        bool rebalance;rebalance133,3826
        double flow_region_factor;flow_region_factor135,3851
        bool gpa_grow_paths_between_blocks;gpa_grow_paths_between_blocks137,3887
        unsigned global_cycle_iterations;global_cycle_iterations142,4082
        bool use_wcycles;use_wcycles144,4125
        bool use_fullmultigrid;use_fullmultigrid146,4152
        unsigned level_split;level_split148,4185
        bool no_new_initial_partitioning; no_new_initial_partitioning150,4216
        bool omit_given_partitioning; omit_given_partitioning152,4260
        StopRule stop_rule;stop_rule154,4300
        int num_vert_stop_factor;num_vert_stop_factor156,4329
        bool no_change_convergence;no_change_convergence158,4372
	bool remove_negative_cycles;remove_negative_cycles163,4559
        bool kaba_include_removal_of_paths;kaba_include_removal_of_paths165,4590
        bool kaba_enable_zero_weight_cycles;kaba_enable_zero_weight_cycles167,4635
        double kabaE_internal_bal;kabaE_internal_bal169,4681
        CycleRefinementAlgorithm cycle_refinement_algorithm;cycle_refinement_algorithm171,4717
        int kaba_internal_no_aug_steps_aug;kaba_internal_no_aug_steps_aug173,4779
        unsigned kaba_packing_iterations;kaba_packing_iterations175,4824
        bool kaba_flip_packings;kaba_flip_packings177,4867
        MLSRule kaba_lsearch_p; // more localized search pseudo directedkaba_lsearch_p179,4901
        bool kaffpa_perfectly_balanced_refinement;kaffpa_perfectly_balanced_refinement181,4975
        unsigned kaba_unsucc_iterations;kaba_unsucc_iterations183,5027
	double time_limit;time_limit189,5228
        double epsilon;epsilon191,5249
	unsigned no_unsuc_reps;no_unsuc_reps193,5274
	unsigned local_partitioning_repetitions;local_partitioning_repetitions195,5300
        bool mh_plain_repetitions;mh_plain_repetitions197,5343
        bool mh_easy_construction;mh_easy_construction199,5387
        bool mh_enable_gal_combine;mh_enable_gal_combine201,5423
        bool mh_no_mh;mh_no_mh203,5460
        bool mh_print_log;mh_print_log205,5484
        int  mh_flip_coin;mh_flip_coin207,5512
        int  mh_initial_population_fraction;mh_initial_population_fraction209,5540
        bool mh_disable_cross_combine;mh_disable_cross_combine211,5586
        bool mh_cross_combine_original_k;mh_cross_combine_original_k213,5626
        bool mh_disable_nc_combine;mh_disable_nc_combine215,5669
        bool mh_disable_combine;mh_disable_combine217,5706
        bool mh_enable_quickstart;mh_enable_quickstart219,5740
        bool mh_disable_diversify_islands;mh_disable_diversify_islands221,5776
        bool mh_diversify;mh_diversify223,5820
        bool mh_diversify_best;mh_diversify_best225,5848
        bool mh_enable_tournament_selection;mh_enable_tournament_selection227,5881
        bool mh_optimize_communication_volume;mh_optimize_communication_volume229,5927
        unsigned mh_num_ncs_to_compute;mh_num_ncs_to_compute231,5975
        unsigned mh_pool_size;mh_pool_size233,6016
        bool combine; // in this case the second index is filled and edges between both partitions are not contractedcombine235,6048
        unsigned initial_partition_optimize_fm_limits;initial_partition_optimize_fm_limits237,6167
        unsigned initial_partition_optimize_multitry_fm_alpha;initial_partition_optimize_multitry_fm_alpha239,6223
        unsigned initial_partition_optimize_multitry_rounds;initial_partition_optimize_multitry_rounds241,6287
        unsigned walshaw_mh_repetitions;walshaw_mh_repetitions243,6349
        unsigned scaleing_factor;scaleing_factor245,6391
        bool scale_back;scale_back247,6426
	bool suppress_partitioner_output;suppress_partitioner_output249,6452
        unsigned maxT; maxT251,6488
        unsigned maxIter;maxIter253,6521
        bool disable_hard_rebalance;disable_hard_rebalance257,6697
        bool buffoon;buffoon259,6735
        bool kabapE;kabapE261,6758
        bool mh_penalty_for_unconnected;mh_penalty_for_unconnected263,6788
        std::string input_partition;input_partition267,6979
        int seed;seed269,7017
        bool fast;fast271,7036
        bool eco;eco273,7056
        bool strong;strong275,7075
	bool balance_edges;balance_edges277,7097
        PartitionID k;k280,7182
        bool compute_vertex_separator;compute_vertex_separator282,7206
        bool only_first_level;only_first_level284,7246
        bool use_balance_singletons;use_balance_singletons286,7278
        int amg_iterations;amg_iterations288,7316
        std::string graph_filename;graph_filename290,7345
        std::string filename_output;filename_output292,7382
        bool kaffpa_perfectly_balance;kaffpa_perfectly_balance294,7420
        NodeOrderingType node_ordering;node_ordering299,7610
        int cluster_coarsening_factor; cluster_coarsening_factor301,7651
        bool ensemble_clusterings; ensemble_clusterings303,7692
        int label_iterations;label_iterations305,7729
        int label_iterations_refinement;label_iterations_refinement307,7760
        int number_of_clusterings;number_of_clusterings309,7802
        bool label_propagation_refinement;label_propagation_refinement311,7838
        double balance_factor;balance_factor313,7882
        bool cluster_coarsening_during_ip;cluster_coarsening_during_ip315,7914
        bool set_upperbound;set_upperbound317,7958
        int repetitions;repetitions319,7988
        NodeWeight cluster_upperbound;cluster_upperbound325,8173
        std::vector<int> target_weights;target_weights334,8523
        bool initial_bipartitioning;initial_bipartitioning336,8565
        int grow_target;grow_target338,8603
        bool enable_omp;enable_omp343,8779
        void LogDump(FILE *out) const {LogDump345,8805

extern/KaHIP/lib/partition/initial_partitioning/initial_partitioning.cpp,456
initial_partitioning::initial_partitioning() {initial_partitioning35,1377
initial_partitioning::~initial_partitioning() {~initial_partitioning39,1428
void initial_partitioning::perform_initial_partitioning(const PartitionConfig & config, graph_hierarchy & hierarchy) {perform_initial_partitioning43,1480
void initial_partitioning::perform_initial_partitioning(const PartitionConfig & config, graph_access &  G) {perform_initial_partitioning48,1704

extern/KaHIP/lib/partition/initial_partitioning/initial_refinement/initial_refinement.h,126
#define INITIAL_REFINEMENT_LDIIF5CGINITIAL_REFINEMENT_LDIIF5CG24,1087
class initial_refinement {initial_refinement29,1196

extern/KaHIP/lib/partition/initial_partitioning/initial_refinement/initial_refinement.cpp,271
initial_refinement::initial_refinement() {initial_refinement27,1160
initial_refinement::~initial_refinement() {~initial_refinement31,1223
int initial_refinement::optimize( const PartitionConfig & config, graph_access & G, EdgeWeight & initial_cut) {optimize35,1287

extern/KaHIP/lib/partition/initial_partitioning/bipartition.h,253
#define BIPARTITION_7I4IR31YBIPARTITION_7I4IR31Y24,1073
class bipartition : public initial_partitioner {bipartition28,1137
inline Gain bipartition::compute_gain( graph_access & G, NodeID node, PartitionID targeting_partition) {compute_gain56,2428

extern/KaHIP/lib/partition/initial_partitioning/initial_partition_bipartition.h,199
#define INITIAL_PARTITION_BIPARTITION_HMA7329WINITIAL_PARTITION_BIPARTITION_HMA7329W24,1109
class initial_partition_bipartition : public initial_partitioner {initial_partition_bipartition28,1191

extern/KaHIP/lib/partition/initial_partitioning/bipartition.cpp,725
bipartition::bipartition() {bipartition31,1343
bipartition::~bipartition() {~bipartition35,1376
void bipartition::initial_partition( const PartitionConfig & config, initial_partition39,1410
void bipartition::initial_partition( const PartitionConfig & config, initial_partition92,3512
void bipartition::post_fm(const PartitionConfig & config, graph_access & G) {post_fm105,4023
NodeID bipartition::find_start_node( const PartitionConfig & config, graph_access & G) {find_start_node126,5119
void bipartition::grow_regions_bfs(const PartitionConfig & config, graph_access & G) {grow_regions_bfs162,6539
void bipartition::grow_regions_fm(const PartitionConfig & config, graph_access & G) {grow_regions_fm240,9979

extern/KaHIP/lib/partition/initial_partitioning/initial_partitioner.cpp,148
initial_partitioner::initial_partitioner() {initial_partitioner25,1088
initial_partitioner::~initial_partitioner() {~initial_partitioner29,1153

extern/KaHIP/lib/partition/initial_partitioning/initial_partitioner.h,130
#define INITIAL_PARTITIONER_TJKC6RWYINITIAL_PARTITIONER_TJKC6RWY24,1089
class initial_partitioner {initial_partitioner29,1199

extern/KaHIP/lib/partition/initial_partitioning/initial_partitioning.h,134
#define INITIAL_PARTITIONING_D7VA0XO9INITIAL_PARTITIONING_D7VA0XO924,1091
class initial_partitioning {initial_partitioning29,1205

extern/KaHIP/lib/partition/initial_partitioning/initial_partition_bipartition.cpp,436
initial_partition_bipartition::initial_partition_bipartition() {initial_partition_bipartition29,1293
initial_partition_bipartition::~initial_partition_bipartition() {~initial_partition_bipartition33,1362
void initial_partition_bipartition::initial_partition( const PartitionConfig & config, initial_partition37,1432
void initial_partition_bipartition::initial_partition( const PartitionConfig & config, initial_partition77,3113

extern/KaHIP/lib/partition/coarsening/edge_rating/edge_ratings.cpp,813
edge_ratings::edge_ratings(const PartitionConfig & _partition_config) : partition_config(_partition_config){edge_ratings29,1160
edge_ratings::~edge_ratings() {~edge_ratings33,1273
void edge_ratings::rate(graph_access & G, unsigned level) {rate37,1309
void edge_ratings::compute_algdist(graph_access & G, std::vector<float> & dist) {compute_algdist70,2696
void edge_ratings::rate_expansion_star_2_algdist(graph_access & G) {rate_expansion_star_2_algdist120,4565
void edge_ratings::rate_expansion_star_2(graph_access & G) {rate_expansion_star_2139,5284
void edge_ratings::rate_inner_outer(graph_access & G) {rate_inner_outer153,5893
void edge_ratings::rate_expansion_star(graph_access & G) {rate_expansion_star176,6764
void edge_ratings::rate_pseudogeom(graph_access & G) {rate_pseudogeom190,7370

extern/KaHIP/lib/partition/coarsening/edge_rating/edge_ratings.h,195
#define EDGE_RATING_FUNCTIONS_FUCW7H6YEDGE_RATING_FUNCTIONS_FUCW7H6Y24,1084
class edge_ratings {edge_ratings29,1203
        const PartitionConfig & partition_config;partition_config42,1734

extern/KaHIP/lib/partition/coarsening/matching/gpa/gpa_matching.h,119
#define GPA_MATCHING_NXLQ0SITGPA_MATCHING_NXLQ0SIT24,1075
class gpa_matching : public matching{gpa_matching30,1189

extern/KaHIP/lib/partition/coarsening/matching/gpa/path.cpp,217
path::path() : head(UNDEFINED_NODE), tail(UNDEFINED_NODE), length(0), active(false) {path25,1058
path::path(const NodeID & v) : head(v), tail(v), length(0), active(true) {path29,1164
path::~path() {~path33,1259

extern/KaHIP/lib/partition/coarsening/matching/gpa/path_set.h,1332
#define PATH_SET_80E9CQT1PATH_SET_80E9CQT124,1067
class path_set {path_set31,1215
                graph_access * pG;pG63,2482
                const PartitionConfig * config;config65,2518
                PathID m_no_of_paths;m_no_of_paths69,2603
                std::vector<PathID> m_vertex_to_path;m_vertex_to_path72,2721
                std::vector<path> m_paths;m_paths75,2849
                std::vector<NodeID> m_next;m_next79,3048
                std::vector<NodeID> m_prev;m_prev84,3252
                std::vector<EdgeID> m_next_edge;m_next_edge89,3530
                std::vector<EdgeID> m_prev_edge;m_prev_edge94,3817
                inline bool is_endpoint(const NodeID & v) const {is_endpoint96,3867
inline const path& path_set::get_path(const NodeID & v) const {get_path102,4024
inline PathID path_set::path_count() const {path_count108,4226
inline NodeID path_set::next_vertex( const NodeID & v ) const {next_vertex112,4304
inline NodeID path_set::prev_vertex( const NodeID & v ) const {prev_vertex116,4404
inline EdgeID path_set::edge_to_next(const NodeID & v) const {edge_to_next120,4503
inline EdgeID path_set::edge_to_prev(const NodeID & v) const {edge_to_prev124,4600
inline bool path_set::add_if_applicable(const NodeID & source, const EdgeID & e) {add_if_applicable128,4697

extern/KaHIP/lib/partition/coarsening/matching/gpa/compare_rating.h,488
#define COMPARE_RATING_750FUZ7ZCOMPARE_RATING_750FUZ7Z24,1079
class compare_rating : public std::binary_function<EdgeRatingType, EdgeRatingType, bool> {compare_rating29,1179
                compare_rating(graph_access * pG) : G(pG) {};compare_rating31,1286
                virtual ~compare_rating() {};~compare_rating32,1348
                bool operator() (const EdgeRatingType left, const EdgeRatingType right ) {operator ()34,1395
                graph_access * G;G39,1603

extern/KaHIP/lib/partition/coarsening/matching/gpa/path_set.cpp,158
path_set::path_set( graph_access * G_, const PartitionConfig * config_ ): pG(G_), config(config_),path_set25,1066
path_set::~path_set() {~path_set44,1968

extern/KaHIP/lib/partition/coarsening/matching/gpa/path.h,929
#define PATH_X5LQS3DTPATH_X5LQS3DT24,1059
class path {path28,1108
                NodeID head;head56,2000
                NodeID tail;tail59,2099
                EdgeID length; length62,2176
                bool active;active65,2312
inline void path::init(const NodeID & v) {init69,2346
inline NodeID path::get_tail() const {get_tail76,2475
inline void path::set_tail(const NodeID & v) {set_tail80,2546
inline NodeID path::get_head( ) const {get_head84,2622
inline void path::set_head(const NodeID & v) {set_head88,2686
inline EdgeID path::get_length( ) const {get_length92,2762
inline void path::set_length(const EdgeID & len) {set_length96,2838
inline bool path::is_endpoint(const NodeID & v) const {is_endpoint100,2922
inline bool path::is_cycle() const {is_cycle104,3024
inline bool path::is_active() const {is_active108,3119
inline void path::set_active(const bool act) {set_active112,3183

extern/KaHIP/lib/partition/coarsening/matching/gpa/gpa_matching.cpp,679
gpa_matching::gpa_matching() {gpa_matching31,1202
gpa_matching::~gpa_matching() {~gpa_matching35,1237
void gpa_matching::match(const PartitionConfig & partition_config, match40,1274
void gpa_matching::init(graph_access & G, init146,5948
void gpa_matching::extract_paths_apply_matching(graph_access & G, extract_paths_apply_matching171,6822
void gpa_matching::apply_matching(graph_access & G,apply_matching265,11042
void gpa_matching::unpack_path(const path & p, unpack_path282,11673
void gpa_matching::maximum_weight_matching( graph_access & G,maximum_weight_matching311,12749
void gpa_matching::dump_unpacked_path( graph_access & G,dump_unpacked_path362,14476

extern/KaHIP/lib/partition/coarsening/matching/random_matching.cpp,209
random_matching::random_matching() {random_matching27,1141
random_matching::~random_matching() {~random_matching31,1182
void random_matching::match(const PartitionConfig & partition_config, match35,1224

extern/KaHIP/lib/partition/coarsening/matching/random_matching.h,132
#define RANDOM_MATCHING_D5YDSMDWRANDOM_MATCHING_D5YDSMDW24,1081
class random_matching : public matching {random_matching28,1138

extern/KaHIP/lib/partition/coarsening/matching/compare_degrees.h,551
#define COMPARE_DEGREES_750FUZ7ZCOMPARE_DEGREES_750FUZ7Z24,1081
class compare_degrees : public std::binary_function<EdgeWeight, EdgeWeight, bool> {compare_degrees26,1115
                compare_degrees(std::vector<EdgeWeight> * degrees) : m_node_degrees(degrees) {};compare_degrees28,1215
                virtual ~compare_degrees() {};~compare_degrees29,1312
                bool operator() (const EdgeWeight left, const EdgeWeight right ) {operator ()31,1360
                std::vector<EdgeWeight> * m_node_degrees;m_node_degrees36,1562

extern/KaHIP/lib/partition/coarsening/matching/matching.cpp,175
matching::matching() {matching25,1066
matching::~matching() {~matching29,1093
void matching::print_matching(FILE * out, Matching & edge_matching) {print_matching33,1121

extern/KaHIP/lib/partition/coarsening/matching/matching.h,86
#define MATCHING_QL4RUO3DMATCHING_QL4RUO3D24,1067
class matching {matching29,1166

extern/KaHIP/lib/partition/coarsening/coarsening_configurator.h,444
#define COARSENING_CONFIGURATOR_8UJ78WYSCOARSENING_CONFIGURATOR_8UJ78WYS24,1097
class coarsening_configurator {coarsening_configurator35,1442
                coarsening_configurator( ) {};coarsening_configurator37,1490
                virtual ~coarsening_configurator() {};~coarsening_configurator38,1537
inline void coarsening_configurator::configure_coarsening( const PartitionConfig & partition_config, configure_coarsening45,1810

extern/KaHIP/lib/partition/coarsening/coarsening.h,94
#define COARSENING_UU97ZBTRCOARSENING_UU97ZBTR24,1071
class coarsening {coarsening30,1216

extern/KaHIP/lib/partition/coarsening/clustering/size_constraint_label_propagation.h,935
#define SIZE_CONSTRAINT_LABEL_PROPAGATION_7SVLBKKTSIZE_CONSTRAINT_LABEL_PROPAGATION_7SVLBKKT24,1114
struct ensemble_pair {ensemble_pair29,1226
        PartitionID n; // number of nodes in the graphn30,1249
        PartitionID lhs;lhs31,1304
        PartitionID rhs;rhs32,1329
struct compare_ensemble_pair {compare_ensemble_pair35,1358
        bool operator()(const ensemble_pair pair_a, const ensemble_pair pair_b) const {operator ()36,1389
struct hash_ensemble_pair{hash_ensemble_pair42,1600
       size_t operator()(const ensemble_pair pair) const {operator ()43,1627
struct data_ensemble_pair {data_ensemble_pair48,1750
        NodeID mapping;mapping49,1778
        data_ensemble_pair() {data_ensemble_pair51,1803
                                compare_ensemble_pair> hash_ensemble;hash_ensemble59,2032
class size_constraint_label_propagation : public matching {size_constraint_label_propagation62,2104

extern/KaHIP/lib/partition/coarsening/clustering/size_constraint_label_propagation.cpp,1228
size_constraint_label_propagation::size_constraint_label_propagation() {size_constraint_label_propagation39,1600
size_constraint_label_propagation::~size_constraint_label_propagation() {~size_constraint_label_propagation43,1693
void size_constraint_label_propagation::match(const PartitionConfig & partition_config, match47,1787
void size_constraint_label_propagation::match_internal(const PartitionConfig & partition_config, match_internal64,2709
void size_constraint_label_propagation::ensemble_two_clusterings( graph_access & G, ensemble_two_clusterings78,3567
void size_constraint_label_propagation::ensemble_clusterings(const PartitionConfig & partition_config, ensemble_clusterings105,4697
void size_constraint_label_propagation::label_propagation(const PartitionConfig & partition_config, label_propagation140,6398
void size_constraint_label_propagation::label_propagation(const PartitionConfig & partition_config, label_propagation149,6986
void size_constraint_label_propagation::create_coarsemapping(const PartitionConfig & partition_config, create_coarsemapping213,10448
void size_constraint_label_propagation::remap_cluster_ids(const PartitionConfig & partition_config, remap_cluster_ids222,10934

extern/KaHIP/lib/partition/coarsening/clustering/node_ordering.cpp,112
node_ordering::node_ordering() {node_ordering26,1085
node_ordering::~node_ordering() {~node_ordering30,1138

extern/KaHIP/lib/partition/coarsening/clustering/node_ordering.h,544
#define NODE_ORDERING_HM1YMLB1NODE_ORDERING_HM1YMLB125,1078
class node_ordering {node_ordering34,1265
        void order_nodes(const PartitionConfig & config, graph_access & G, std::vector< NodeID > & ordered_nodes) {order_nodes39,1355
        void order_nodes_random(const PartitionConfig & config, graph_access & G, std::vector< NodeID > & ordered_nodes) { order_nodes_random54,1996
        void order_nodes_degree(const PartitionConfig & config, graph_access & G, std::vector< NodeID > & ordered_nodes) { order_nodes_degree58,2210

extern/KaHIP/lib/partition/coarsening/stop_rules/stop_rules.h,1475
#define STOP_RULES_SZ45JQS6STOP_RULES_SZ45JQS624,1071
class stop_rule {stop_rule30,1150
                stop_rule() {};stop_rule32,1184
                virtual ~stop_rule() {};~stop_rule33,1216
class simple_stop_rule : public stop_rule {simple_stop_rule37,1370
                simple_stop_rule(PartitionConfig & config, NodeID number_of_nodes) {simple_stop_rule39,1430
                virtual ~simple_stop_rule() {};~simple_stop_rule48,1987
                NodeID num_stop;num_stop52,2150
inline bool simple_stop_rule::stop(NodeID no_of_finer_vertices, NodeID no_of_coarser_vertices ) {stop55,2187
class strong_stop_rule : public stop_rule {strong_stop_rule59,2460
                strong_stop_rule(PartitionConfig & config, NodeID number_of_nodes) {strong_stop_rule61,2520
                virtual ~strong_stop_rule() {};~strong_stop_rule65,2750
                NodeID num_stop;num_stop69,2913
inline bool strong_stop_rule::stop(NodeID no_of_finer_vertices, NodeID no_of_coarser_vertices ) {stop72,2950
class multiple_k_stop_rule : public stop_rule {multiple_k_stop_rule77,3224
                multiple_k_stop_rule (PartitionConfig & config, NodeID number_of_nodes) {multiple_k_stop_rule79,3288
                virtual ~multiple_k_stop_rule () {};~multiple_k_stop_rule94,4182
                NodeID num_stop;num_stop98,4350
inline bool multiple_k_stop_rule::stop(NodeID no_of_finer_vertices, NodeID no_of_coarser_vertices ) {stop101,4387

extern/KaHIP/lib/partition/coarsening/contraction.h,212
#define CONTRACTION_VIXZ9K0FCONTRACTION_VIXZ9K0F24,1073
typedef NodeID Regions;Regions31,1207
class contraction {contraction33,1232
inline void contraction::visit_edge(graph_access & G, visit_edge75,3309

extern/KaHIP/lib/partition/coarsening/coarsening.cpp,248
coarsening::coarsening() {coarsening37,1411
coarsening::~coarsening() {~coarsening41,1442
void coarsening::perform_coarsening(const PartitionConfig & partition_config, graph_access & G, graph_hierarchy & hierarchy) {perform_coarsening45,1474

extern/KaHIP/lib/partition/coarsening/contraction.cpp,409
contraction::contraction() {contraction27,1187
contraction::~contraction() {~contraction31,1220
void contraction::contract(const PartitionConfig & partition_config, contract36,1319
void contraction::contract_clustering(const PartitionConfig & partition_config, contract_clustering109,4608
void contraction::contract_partitioned(const PartitionConfig & partition_config, contract_partitioned150,6207

extern/KaHIP/lib/partition/w_cycles/wcycle_partitioner.h,592
#define WCYCLE_PARTITIONER_EPNDQMKWCYCLE_PARTITIONER_EPNDQMK24,1086
class wcycle_partitioner {wcycle_partitioner32,1323
                wcycle_partitioner( ) : m_level(0) {};wcycle_partitioner34,1366
                virtual ~wcycle_partitioner() {};~wcycle_partitioner35,1421
                unsigned   m_level;m_level44,1874
                unsigned   m_deepest_level;m_deepest_level45,1910
                stop_rule* m_coarsening_stop_rule;m_coarsening_stop_rule46,1954
                std::unordered_map<unsigned, bool> m_have_been_level_down;m_have_been_level_down48,2006

extern/KaHIP/lib/partition/w_cycles/wcycle_partitioner.cpp,258
int wcycle_partitioner::perform_partitioning(const PartitionConfig & config, graph_access & G) {perform_partitioning40,1773
int wcycle_partitioner::perform_partitioning_recursive( PartitionConfig & partition_config, perform_partitioning_recursive55,2322

extern/KaHIP/lib/partition/graph_partitioner.h,251
#define PARTITION_OL9XTLU4PARTITION_OL9XTLU424,1077
class graph_partitioner {graph_partitioner32,1306
        unsigned m_global_k;m_global_k46,1949
	int m_global_upper_bound;m_global_upper_bound47,1978
        int m_rnd_bal;m_rnd_bal48,2005

extern/KaHIP/lib/partition/graph_partitioner.cpp,639
graph_partitioner::graph_partitioner() {graph_partitioner33,1402
graph_partitioner::~graph_partitioner() {~graph_partitioner37,1447
void graph_partitioner::perform_recursive_partitioning(PartitionConfig & config, graph_access & G) {perform_recursive_partitioning41,1493
void graph_partitioner::perform_recursive_partitioning_internal(PartitionConfig & config, perform_recursive_partitioning_internal48,1819
void graph_partitioner::single_run( PartitionConfig & config, graph_access & G) {single_run178,8191
void graph_partitioner::perform_partitioning( PartitionConfig & config, graph_access & G) {perform_partitioning200,9354

extern/KaHIP/lib/partition/uncoarsening/refinement/kway_graph_refinement/kway_graph_refinement_core.h,326
#define KWAY_GRAPH_REFINEMENT_CORE_PVGY97EWKWAY_GRAPH_REFINEMENT_CORE_PVGY97EW24,1103
class kway_graph_refinement_core  {kway_graph_refinement_core36,1519
                kway_graph_refinement_commons* commons;commons93,5128
inline bool kway_graph_refinement_core::move_node(PartitionConfig & config, move_node96,5188

extern/KaHIP/lib/partition/uncoarsening/refinement/kway_graph_refinement/kway_graph_refinement.cpp,473
kway_graph_refinement::kway_graph_refinement() {kway_graph_refinement32,1266
kway_graph_refinement::~kway_graph_refinement() {~kway_graph_refinement35,1318
EdgeWeight kway_graph_refinement::perform_refinement(PartitionConfig & config, graph_access & G, perform_refinement39,1372
void kway_graph_refinement::setup_start_nodes(PartitionConfig & config, graph_access & G, complete_boundary & boundary,  boundary_starting_nodes & start_nodes) {setup_start_nodes77,3015

extern/KaHIP/lib/partition/uncoarsening/refinement/kway_graph_refinement/kway_stop_rule.h,1515
#define KWAY_STOP_RULE_ULPK0ZTFKWAY_STOP_RULE_ULPK0ZTF24,1079
class kway_stop_rule {kway_stop_rule26,1112
        kway_stop_rule(PartitionConfig & config) {};kway_stop_rule28,1143
        kway_stop_rule() {};kway_stop_rule29,1196
        virtual ~kway_stop_rule() {};~kway_stop_rule30,1225
class kway_simple_stop_rule : public kway_stop_rule {kway_simple_stop_rule39,1568
        kway_simple_stop_rule(PartitionConfig & config) {};kway_simple_stop_rule41,1630
        virtual ~kway_simple_stop_rule() {};~kway_simple_stop_rule42,1690
        void push_statistics(Gain gain) {};push_statistics44,1736
        void reset_statistics() {};reset_statistics45,1780
inline bool kway_simple_stop_rule::search_should_stop(unsigned int min_cut_idx, search_should_stop51,1994
class kway_adaptive_stop_rule : public kway_stop_rule {kway_adaptive_stop_rule58,2292
        kway_adaptive_stop_rule(PartitionConfig & config) : m_steps(0), kway_adaptive_stop_rule60,2356
        virtual ~kway_adaptive_stop_rule() {};~kway_adaptive_stop_rule64,2680
        void push_statistics(Gain gain) {push_statistics66,2728
        void reset_statistics() {reset_statistics85,3532
        unsigned m_steps;m_steps95,3891
        double   m_expected_gain;m_expected_gain96,3917
        double   m_expected_variance2;m_expected_variance297,3951
        PartitionConfig * pconfig;pconfig98,3990
inline bool kway_adaptive_stop_rule::search_should_stop(unsigned int min_cut_idx, search_should_stop101,4029

extern/KaHIP/lib/partition/uncoarsening/refinement/kway_graph_refinement/kway_graph_refinement_core.cpp,827
kway_graph_refinement_core::kway_graph_refinement_core() {kway_graph_refinement_core32,1321
kway_graph_refinement_core::~kway_graph_refinement_core() {~kway_graph_refinement_core35,1383
EdgeWeight kway_graph_refinement_core::single_kway_refinement_round(PartitionConfig & config, single_kway_refinement_round38,1446
EdgeWeight kway_graph_refinement_core::single_kway_refinement_round(PartitionConfig & config, single_kway_refinement_round49,2286
EdgeWeight kway_graph_refinement_core::single_kway_refinement_round_internal(PartitionConfig & config, single_kway_refinement_round_internal62,3189
void kway_graph_refinement_core::init_queue_with_boundary(const PartitionConfig & config,init_queue_with_boundary187,8581
void kway_graph_refinement_core::move_node_back(PartitionConfig & config, move_node_back213,9697

extern/KaHIP/lib/partition/uncoarsening/refinement/kway_graph_refinement/kway_graph_refinement_commons.h,1173
#define KWAY_GRAPH_REFINEMENT_COMMONS_PVGY97EWKWAY_GRAPH_REFINEMENT_COMMONS_PVGY97EW24,1109
class kway_graph_refinement_commons  {kway_graph_refinement_commons34,1454
                struct round_struct {round_struct63,2619
                        unsigned round;round64,2657
                        EdgeWeight local_degree;local_degree65,2697
                std::vector<kway_graph_refinement_commons*>* m_instances;m_instances69,2790
                std::vector<round_struct>                    m_local_degrees;m_local_degrees70,2864
                unsigned                                     m_round;m_round71,2942
inline unsigned kway_graph_refinement_commons::getUnderlyingK() {getUnderlyingK77,3019
inline void kway_graph_refinement_commons::init(PartitionConfig & config) {init81,3127
inline bool kway_graph_refinement_commons::incident_to_more_than_two_partitions(graph_access & G, NodeID & node) {incident_to_more_than_two_partitions91,3500
inline bool kway_graph_refinement_commons::int_ext_degree( graph_access & G, int_ext_degree113,4384
inline Gain kway_graph_refinement_commons::compute_gain(graph_access & G, compute_gain145,5674

extern/KaHIP/lib/partition/uncoarsening/refinement/kway_graph_refinement/multitry_kway_fm.cpp,516
multitry_kway_fm::multitry_kway_fm() {multitry_kway_fm33,1361
multitry_kway_fm::~multitry_kway_fm() {~multitry_kway_fm36,1403
int multitry_kway_fm::perform_refinement(PartitionConfig & config, graph_access & G, perform_refinement40,1447
int multitry_kway_fm::perform_refinement_around_parts(PartitionConfig & config, graph_access & G, perform_refinement_around_parts84,3356
int multitry_kway_fm::start_more_locallized_search(PartitionConfig & config, graph_access & G, start_more_locallized_search123,5394

extern/KaHIP/lib/partition/uncoarsening/refinement/kway_graph_refinement/kway_graph_refinement.h,230
#define KWAY_GRAPH_REFINEMENT_PVGY97EWKWAY_GRAPH_REFINEMENT_PVGY97EW24,1093
class kway_graph_refinement : public refinement {kway_graph_refinement35,1473
                kway_graph_refinement_commons* commons;commons51,2173

extern/KaHIP/lib/partition/uncoarsening/refinement/kway_graph_refinement/kway_graph_refinement_commons.cpp,448
std::vector<kway_graph_refinement_commons*>* kway_graph_refinement_commons::m_instances = NULL;m_instances27,1126
kway_graph_refinement_commons::kway_graph_refinement_commons() {kway_graph_refinement_commons29,1223
kway_graph_refinement_commons::~kway_graph_refinement_commons() {~kway_graph_refinement_commons33,1292
kway_graph_refinement_commons* kway_graph_refinement_commons::getInstance( PartitionConfig & config ) {getInstance37,1362

extern/KaHIP/lib/partition/uncoarsening/refinement/kway_graph_refinement/multitry_kway_fm.h,188
#define MULTITRY_KWAYFM_PVGY97EWMULTITRY_KWAYFM_PVGY97EW24,1082
class multitry_kway_fm {multitry_kway_fm32,1252
                kway_graph_refinement_commons* commons;commons56,2640

extern/KaHIP/lib/partition/uncoarsening/refinement/tabu_search/tabu_moves_queue.h,1044
#define TABU_MOVES_PQ_EM8YJPA9TABU_MOVES_PQ_EM8YJPA924,1080
struct TabuTimePair {TabuTimePair31,1198
        int time;time32,1220
        NodeID node;node33,1238
        PartitionID block;block34,1259
struct comparePair{comparePair36,1289
        bool operator() (TabuTimePair& x, TabuTimePair& y)operator ()37,1309
typedef std::priority_queue< TabuTimePair, std::vector< TabuTimePair >, comparePair > PQ;PQ43,1420
class tabu_moves_queue  {tabu_moves_queue45,1511
                virtual ~tabu_moves_queue() { };~tabu_moves_queue48,1591
                PQ m_priority_queue;m_priority_queue59,1951
inline tabu_moves_queue::tabu_moves_queue() {tabu_moves_queue62,1992
inline NodeID tabu_moves_queue::size() {size65,2041
inline void tabu_moves_queue::insert(NodeID node, PartitionID block, int time) {insert69,2127
inline bool tabu_moves_queue::empty( ) {empty77,2352
inline Gain tabu_moves_queue::minValue( ) {minValue81,2445
inline std::pair<NodeID, PartitionID> tabu_moves_queue::deleteMin() {deleteMin85,2544

extern/KaHIP/lib/partition/uncoarsening/refinement/tabu_search/tabu_search.h,320
#define TABU_SEARCH_RC6W8GXTABU_SEARCH_RC6W8GX24,1072
class tabu_search : public refinement {tabu_search32,1355
		unsigned compute_tenure(unsigned iteration, unsigned max_iteration) {compute_tenure42,1734
                kway_graph_refinement_commons* commons;commons76,2390
                matrix* m;m77,2446

extern/KaHIP/lib/partition/uncoarsening/refinement/tabu_search/tabu_bucket_queue.h,1866
#define TABU_BUCKET_PQ_EM8YJPA9TABU_BUCKET_PQ_EM8YJPA924,1082
class tabu_bucket_queue  {tabu_bucket_queue34,1404
                virtual ~tabu_bucket_queue() { delete m_queue_index; delete m_gains;};~tabu_bucket_queue38,1566
                normal_matrix* m_queue_index;m_queue_index57,2395
                normal_matrix* m_gains;m_gains58,2441
                NodeID         m_elements;m_elements59,2481
                EdgeWeight     m_gain_span;m_gain_span60,2524
                unsigned       m_max_idx; //points to the non-empty bucket with the largest gainm_max_idx61,2568
                std::vector< std::vector< std::pair<NodeID, PartitionID> > > m_buckets;m_buckets63,2682
inline tabu_bucket_queue::tabu_bucket_queue( PartitionConfig & config, tabu_bucket_queue66,2774
inline NodeID tabu_bucket_queue::size() {size77,3307
inline void tabu_bucket_queue::insert(NodeID node, PartitionID block, Gain gain) {insert81,3381
inline bool tabu_bucket_queue::empty( ) {empty98,3904
inline Gain tabu_bucket_queue::maxValue( ) {maxValue102,3989
inline std::pair<NodeID, PartitionID> tabu_bucket_queue::maxElement( ) {maxElement106,4085
inline std::pair<NodeID, PartitionID> tabu_bucket_queue::deleteMax() {deleteMax110,4213
inline void tabu_bucket_queue::decreaseKey(NodeID node, PartitionID block, Gain new_gain) {decreaseKey136,5162
inline void tabu_bucket_queue::increaseKey(NodeID node, PartitionID block, Gain new_gain) {increaseKey140,5301
inline void tabu_bucket_queue::changeKey(NodeID node, PartitionID block, Gain new_gain) {changeKey144,5440
inline Gain tabu_bucket_queue::getKey(NodeID node, PartitionID block) {getKey149,5605
inline void tabu_bucket_queue::deleteNode(NodeID node, PartitionID block) {deleteNode153,5727
inline bool tabu_bucket_queue::contains(NodeID node, PartitionID block) {contains185,7020

extern/KaHIP/lib/partition/uncoarsening/refinement/tabu_search/tabu_search.cpp,246
tabu_search::tabu_search() {tabu_search32,1460
tabu_search::~tabu_search() {~tabu_search36,1509
EdgeWeight tabu_search::perform_refinement(PartitionConfig & config, graph_access & G, complete_boundary & boundary) {perform_refinement40,1559

extern/KaHIP/lib/partition/uncoarsening/refinement/mixed_refinement.h,138
#define MIXED_REFINEMENT_XJC6COP3MIXED_REFINEMENT_XJC6COP324,1083
class mixed_refinement : public refinement {mixed_refinement29,1168

extern/KaHIP/lib/partition/uncoarsening/refinement/quotient_graph_refinement/complete_boundary.h,3769
#define COMPLETE_BOUNDARY_URZZFDEICOMPLETE_BOUNDARY_URZZFDEI24,1085
struct block_informations {block_informations35,1319
        NodeWeight block_weight;block_weight36,1347
        NodeID block_no_nodes;block_no_nodes37,1380
typedef std::vector<boundary_pair> QuotientGraphEdges;QuotientGraphEdges40,1415
class complete_boundary {complete_boundary42,1471
                PartialBoundary*   m_pb_lhs_lazy;m_pb_lhs_lazy88,4173
                PartialBoundary*   m_pb_rhs_lazy;m_pb_rhs_lazy89,4223
                PartitionID        m_lazy_lhs;m_lazy_lhs90,4273
                PartitionID        m_lazy_rhs;m_lazy_rhs91,4320
                boundary_pair*     m_last_pair;m_last_pair92,4367
                size_t             m_last_key; m_last_key93,4415
                hash_boundary_pair m_hbp;m_hbp94,4463
                graph_access * m_graph_ref;m_graph_ref96,4506
                block_pairs m_pairs;m_pairs99,4621
                std::vector<block_informations> m_block_infos;m_block_infos100,4658
                graph_access Q;Q103,4793
                std::vector< NodeID > m_singletons;m_singletons104,4825
inline void complete_boundary::build() {build118,5239
inline void complete_boundary::build_from_coarser(complete_boundary * coarser_boundary, build_from_coarser160,6975
inline void complete_boundary::insert(NodeID node, PartitionID insert_node_into, boundary_pair * pair) {insert230,10018
inline bool complete_boundary::contains(NodeID node, PartitionID partition, boundary_pair * pair){contains244,10628
inline void complete_boundary::deleteNode(NodeID node, PartitionID partition, boundary_pair * pair) {deleteNode255,11093
inline NodeID complete_boundary::size(PartitionID partition, boundary_pair * pair){size264,11399
inline NodeWeight complete_boundary::getBlockWeight(PartitionID partition){getBlockWeight273,11681
inline NodeWeight complete_boundary::getBlockNoNodes(PartitionID partition){getBlockNoNodes277,11814
inline EdgeWeight complete_boundary::getEdgeCut(boundary_pair * pair){getEdgeCut281,11950
inline EdgeWeight complete_boundary::getEdgeCut(PartitionID lhs, PartitionID rhs) {getEdgeCut286,12098
inline void complete_boundary::setBlockWeight(PartitionID partition, NodeWeight weight){setBlockWeight295,12341
inline void complete_boundary::setBlockNoNodes(PartitionID partition, NodeID no_nodes){setBlockNoNodes299,12489
inline void complete_boundary::setEdgeCut(boundary_pair * pair, EdgeWeight edge_cut){setEdgeCut303,12640
inline void complete_boundary::getQuotientGraphEdges(QuotientGraphEdges & qgraph_edges) {getQuotientGraphEdges308,12807
inline PartialBoundary& complete_boundary::getDirectedBoundary(PartitionID partition, PartitionID lhs, PartitionID rhs) {getDirectedBoundary317,13185
inline void complete_boundary::update_lazy_values(boundary_pair * pair) {update_lazy_values331,13614
void complete_boundary::setup_start_nodes(graph_access & G, setup_start_nodes352,14377
inline void complete_boundary::get_max_norm() {get_max_norm370,15014
inline void complete_boundary::getUnderlyingQuotientGraph( graph_access & Q_bar ) {getUnderlyingQuotientGraph385,15507
inline void complete_boundary::getNeighbors(PartitionID & block, std::vector<PartitionID> & neighbors) {getNeighbors426,17170
void complete_boundary::setup_start_nodes_around_blocks(graph_access & G, setup_start_nodes_around_blocks439,17646
void complete_boundary::setup_start_nodes_all(graph_access & G, boundary_starting_nodes & start_nodes) {setup_start_nodes_all494,20620
inline bool complete_boundary::assert_bnodes_in_boundaries() {assert_bnodes_in_boundaries527,22235
inline bool complete_boundary::assert_boundaries_are_bnodes() {assert_boundaries_are_bnodes582,24893

extern/KaHIP/lib/partition/uncoarsening/refinement/quotient_graph_refinement/quotient_graph_scheduling/active_block_quotient_graph_scheduler.cpp,286
active_block_quotient_graph_scheduler::active_block_quotient_graph_scheduler( const PartitionConfig & config, active_block_quotient_graph_scheduler25,1124
active_block_quotient_graph_scheduler::~active_block_quotient_graph_scheduler() {~active_block_quotient_graph_scheduler39,1822

extern/KaHIP/lib/partition/uncoarsening/refinement/quotient_graph_refinement/quotient_graph_scheduling/quotient_graph_scheduling.cpp,184
quotient_graph_scheduling::quotient_graph_scheduling() {quotient_graph_scheduling25,1100
quotient_graph_scheduling::~quotient_graph_scheduling() {~quotient_graph_scheduling28,1160

extern/KaHIP/lib/partition/uncoarsening/refinement/quotient_graph_refinement/quotient_graph_scheduling/quotient_graph_scheduling.h,457
#define QUOTIENT_GRAPH_SCHEDULING_NEFT9H3JQUOTIENT_GRAPH_SCHEDULING_NEFT9H3J24,1101
struct qgraph_edge_statistics {qgraph_edge_statistics29,1252
        EdgeWeight improvement;improvement31,1285
        bool something_changed;something_changed32,1317
        boundary_pair* pair;pair33,1349
        qgraph_edge_statistics(EdgeWeight _improvement, qgraph_edge_statistics35,1379
class quotient_graph_scheduling {quotient_graph_scheduling41,1611

extern/KaHIP/lib/partition/uncoarsening/refinement/quotient_graph_refinement/quotient_graph_scheduling/simple_quotient_graph_scheduler.cpp,243
simple_quotient_graph_scheduler::simple_quotient_graph_scheduler(PartitionConfig & config, simple_quotient_graph_scheduler26,1142
simple_quotient_graph_scheduler::~simple_quotient_graph_scheduler() {~simple_quotient_graph_scheduler40,1909

extern/KaHIP/lib/partition/uncoarsening/refinement/quotient_graph_refinement/quotient_graph_scheduling/active_block_quotient_graph_scheduler.h,1134
#define ACTIVE_BLOCK_QUOTIENT_GRAPH_SCHEDULER_2QATIGSYACTIVE_BLOCK_QUOTIENT_GRAPH_SCHEDULER_2QATIGSY24,1125
class active_block_quotient_graph_scheduler : public quotient_graph_scheduling {active_block_quotient_graph_scheduler32,1307
                QuotientGraphEdges & m_quotient_graph_edges;m_quotient_graph_edges48,2013
                QuotientGraphEdges   m_active_quotient_graph_edges;m_active_quotient_graph_edges49,2074
                PartitionID          m_no_of_active_blocks;m_no_of_active_blocks50,2142
                std::vector<bool>    m_is_block_active;m_is_block_active51,2202
inline void active_block_quotient_graph_scheduler::init() {init54,2262
inline bool active_block_quotient_graph_scheduler::hasFinished( ) {hasFinished77,3180
inline boundary_pair & active_block_quotient_graph_scheduler::getNext( ) {getNext85,3389
inline void active_block_quotient_graph_scheduler::pushStatistics(qgraph_edge_statistics & statistic) {pushStatistics92,3619
inline void active_block_quotient_graph_scheduler::activate_blocks(std::unordered_map<PartitionID, PartitionID> & blocks) {activate_blocks99,3904

extern/KaHIP/lib/partition/uncoarsening/refinement/quotient_graph_refinement/quotient_graph_scheduling/simple_quotient_graph_scheduler.h,573
#define SIMPLE_QUOTIENT_GRAPH_SCHEDULER_YG9BEBH0SIMPLE_QUOTIENT_GRAPH_SCHEDULER_YG9BEBH024,1113
class simple_quotient_graph_scheduler : public quotient_graph_scheduling  { simple_quotient_graph_scheduler29,1233
        virtual void pushStatistics(qgraph_edge_statistics & statistic) {};pushStatistics39,1658
        QuotientGraphEdges m_quotient_graph_edges_pool;m_quotient_graph_edges_pool42,1745
inline bool simple_quotient_graph_scheduler::hasFinished( ) {hasFinished45,1805
inline boundary_pair & simple_quotient_graph_scheduler::getNext( ) {getNext49,1938

extern/KaHIP/lib/partition/uncoarsening/refinement/quotient_graph_refinement/2way_fm_refinement/queue_selection_strategie.h,2099
#define QUEUESELECTIONSTRATEGIE_H_QUEUESELECTIONSTRATEGIE_H_24,1116
class queue_selection_strategy {queue_selection_strategy26,1154
		queue_selection_strategy(PartitionConfig & config) : m_config ( config ) {};queue_selection_strategy28,1205
		virtual ~queue_selection_strategy()  {};~queue_selection_strategy29,1285
		PartitionConfig m_config;m_config36,1746
class queue_selection_diffusion : public queue_selection_strategy {queue_selection_diffusion41,1785
		queue_selection_diffusion(PartitionConfig & config) : queue_selection_strategy(config) {};queue_selection_diffusion43,1871
                inline void selectQueue(int lhs_part_weight, int rhs_part_weight, selectQueue44,1965
class queue_selection_topgain : public queue_selection_strategy {queue_selection_topgain63,2958
		queue_selection_topgain(PartitionConfig & config) : queue_selection_strategy(config) {};queue_selection_topgain65,3042
                inline void selectQueue(int lhs_part_weight, int rhs_part_weight, selectQueue66,3134
class queue_selection_topgain_diffusion : public queue_selection_strategy {queue_selection_topgain_diffusion104,4920
	  queue_selection_topgain_diffusion(PartitionConfig & config) : queue_selection_strategy(config) {  queue_selection_topgain_diffusion106,5014
	  ~queue_selection_topgain_diffusion() {  ~queue_selection_topgain_diffusion110,5201
          inline void selectQueue(int lhs_part_weight, int rhs_part_weight, selectQueue114,5295
                queue_selection_strategy* qdiff;qdiff161,7605
class queue_selection_diffusion_block_targets : public queue_selection_strategy {queue_selection_diffusion_block_targets164,7661
		queue_selection_diffusion_block_targets(PartitionConfig & config) : queue_selection_strategy(config) {queue_selection_diffusion_block_targets166,7761
		virtual ~queue_selection_diffusion_block_targets()  {~queue_selection_diffusion_block_targets170,7969
                inline void selectQueue(int lhs_part_weight, int rhs_part_weight, selectQueue174,8086
                queue_selection_strategy* qdiff;qdiff204,9823

extern/KaHIP/lib/partition/uncoarsening/refinement/quotient_graph_refinement/2way_fm_refinement/two_way_fm.h,203
#define TWOWAY_FM_YLYN82Y1TWOWAY_FM_YLYN82Y124,1070
class two_way_fm : public two_way_refinement {two_way_fm38,1563
inline bool two_way_fm::int_ext_degree( graph_access & G, int_ext_degree122,5880

extern/KaHIP/lib/partition/uncoarsening/refinement/quotient_graph_refinement/2way_fm_refinement/vertex_moved_hashtable.h,677
#define VMOVEDHT_4563r97820954VMOVEDHT_4563r9782095424,1086
struct compare_nodes {compare_nodes33,1218
        bool operator()(const NodeID lhs, const NodeID rhs) const {operator ()34,1241
const NodeID NOT_MOVED = std::numeric_limits<NodeID>::max();NOT_MOVED40,1361
const NodeID MOVED = 0;MOVED41,1422
struct moved_index {moved_index43,1447
       NodeID index;index44,1468
       moved_index() {moved_index45,1489
struct hash_nodes {hash_nodes50,1560
       size_t operator()(const NodeID idx) const {operator ()51,1580
typedef std::unordered_map<const NodeID, moved_index, hash_nodes, compare_nodes> vertex_moved_hashtable;vertex_moved_hashtable56,1672

extern/KaHIP/lib/partition/uncoarsening/refinement/quotient_graph_refinement/2way_fm_refinement/search_stop_rule.h,508
#define SEARCH_STOP_RULE_R20GH6INSEARCH_STOP_RULE_R20GH6IN24,1083
class stop_rule {stop_rule26,1118
                stop_rule( ) {};stop_rule28,1152
                virtual ~stop_rule() {};~stop_rule29,1185
class easy_stop_rule : public stop_rule {easy_stop_rule36,1457
                easy_stop_rule( ) {};easy_stop_rule38,1515
                virtual ~easy_stop_rule() {};~easy_stop_rule39,1553
inline bool easy_stop_rule::search_should_stop(unsigned min_cut_idx, search_should_stop46,1802

extern/KaHIP/lib/partition/uncoarsening/refinement/quotient_graph_refinement/2way_fm_refinement/partition_accept_rule.h,1576
#define PARTITION_ACCEPT_RULE_4RXUS4P9PARTITION_ACCEPT_RULE_4RXUS4P924,1093
class partition_accept_rule {partition_accept_rule29,1194
                partition_accept_rule( ) {};partition_accept_rule31,1240
                virtual ~partition_accept_rule() {};~partition_accept_rule32,1285
class normal_partition_accept_rule : public partition_accept_rule {normal_partition_accept_rule45,1803
                virtual ~normal_partition_accept_rule() {};~normal_partition_accept_rule51,2210
                EdgeWeight best_cut;best_cut62,2702
                NodeWeight cur_lhs_part_weight;cur_lhs_part_weight63,2739
                NodeWeight cur_rhs_part_weight;cur_rhs_part_weight64,2787
                NodeWeight difference;difference65,2835
normal_partition_accept_rule::normal_partition_accept_rule(PartitionConfig & config, normal_partition_accept_rule68,2878
bool normal_partition_accept_rule::accept_partition(PartitionConfig & config, accept_partition79,3375
class ip_partition_accept_rule : public partition_accept_rule {ip_partition_accept_rule117,4868
                virtual ~ip_partition_accept_rule() {};~ip_partition_accept_rule125,5404
                EdgeWeight best_cut;best_cut135,5891
                int cur_lhs_overload;cur_lhs_overload136,5928
                int cur_rhs_overload;cur_rhs_overload137,5966
ip_partition_accept_rule::ip_partition_accept_rule(PartitionConfig & config, ip_partition_accept_rule140,6008
bool ip_partition_accept_rule::accept_partition(PartitionConfig & config, accept_partition152,6576

extern/KaHIP/lib/partition/uncoarsening/refinement/quotient_graph_refinement/2way_fm_refinement/two_way_fm.cpp,878
two_way_fm::two_way_fm() {two_way_fm34,1460
two_way_fm::~two_way_fm() {~two_way_fm38,1491
EdgeWeight two_way_fm::perform_refinement(PartitionConfig & cfg, perform_refinement42,1523
void two_way_fm::move_node(const PartitionConfig & config, move_node240,10397
void two_way_fm::move_node_back(const PartitionConfig & config, move_node_back319,13538
void two_way_fm::init_queue_with_boundary(const PartitionConfig & config,init_queue_with_boundary386,16169
bool two_way_fm::assert_only_boundary_nodes(graph_access & G, PartialBoundary & lhs_boundary, assert_only_boundary_nodes420,17877
bool two_way_fm::assert_every_boundary_nodes(graph_access & G, PartialBoundary & lhs_boundary, assert_every_boundary_nodes435,18439
bool two_way_fm::assert_directed_boundary_condition(graph_access & G, complete_boundary & boundary, assert_directed_boundary_condition454,19068

extern/KaHIP/lib/partition/uncoarsening/refinement/quotient_graph_refinement/flow_refinement/two_way_flow_refinement.cpp,546
two_way_flow_refinement::two_way_flow_refinement() {two_way_flow_refinement34,1300
two_way_flow_refinement::~two_way_flow_refinement() {~two_way_flow_refinement38,1357
EdgeWeight two_way_flow_refinement::perform_refinement(PartitionConfig & config, perform_refinement42,1415
EdgeWeight two_way_flow_refinement::iterativ_flow_iteration(PartitionConfig & config, iterativ_flow_iteration64,2627
void two_way_flow_refinement::apply_partition_and_update_boundary( const PartitionConfig & config, apply_partition_and_update_boundary240,12331

extern/KaHIP/lib/partition/uncoarsening/refinement/quotient_graph_refinement/flow_refinement/boundary_bfs.cpp,192
boundary_bfs::boundary_bfs() {boundary_bfs29,1140
boundary_bfs::~boundary_bfs() {~boundary_bfs33,1191
bool boundary_bfs::boundary_bfs_search(graph_access & G, boundary_bfs_search37,1243

extern/KaHIP/lib/partition/uncoarsening/refinement/quotient_graph_refinement/flow_refinement/two_way_flow_refinement.h,174
#define TWO_WAY_FLOW_REFINEMENT_BVTL6G49TWO_WAY_FLOW_REFINEMENT_BVTL6G4924,1097
class two_way_flow_refinement : public two_way_refinement {two_way_flow_refinement33,1523

extern/KaHIP/lib/partition/uncoarsening/refinement/quotient_graph_refinement/flow_refinement/flow_solving_kernel/cut_flow_problem_solver.h,145
#define CUT_FLOW_PROBLEM_SOLVER_4P49OMMCUT_FLOW_PROBLEM_SOLVER_4P49OMM24,1096
class cut_flow_problem_solver  {cut_flow_problem_solver29,1207

extern/KaHIP/lib/partition/uncoarsening/refinement/quotient_graph_refinement/flow_refinement/flow_solving_kernel/cut_flow_problem_solver.cpp,485
cut_flow_problem_solver::cut_flow_problem_solver() {cut_flow_problem_solver38,1383
cut_flow_problem_solver::~cut_flow_problem_solver() {~cut_flow_problem_solver41,1439
EdgeID cut_flow_problem_solver::regions_no_edges( graph_access & G,regions_no_edges44,1496
EdgeWeight cut_flow_problem_solver::convert_ds( const PartitionConfig & config, convert_ds81,3251
EdgeWeight cut_flow_problem_solver::get_min_flow_max_cut(const PartitionConfig & config, get_min_flow_max_cut158,6963

extern/KaHIP/lib/partition/uncoarsening/refinement/quotient_graph_refinement/flow_refinement/most_balanced_minimum_cuts/most_balanced_minimum_cuts.h,154
#define MOST_BALANCED_MINIMUM_CUTS_SBD5CSMOST_BALANCED_MINIMUM_CUTS_SBD5CS24,1101
class most_balanced_minimum_cuts {most_balanced_minimum_cuts29,1216

extern/KaHIP/lib/partition/uncoarsening/refinement/quotient_graph_refinement/flow_refinement/most_balanced_minimum_cuts/most_balanced_minimum_cuts.cpp,549
most_balanced_minimum_cuts::most_balanced_minimum_cuts() {most_balanced_minimum_cuts29,1223
most_balanced_minimum_cuts::~most_balanced_minimum_cuts() {~most_balanced_minimum_cuts33,1286
void most_balanced_minimum_cuts::compute_good_balanced_min_cut( graph_access & residualGraph, compute_good_balanced_min_cut37,1350
void most_balanced_minimum_cuts::compute_new_rhs( graph_access & scc_graph, compute_new_rhs76,3253
void most_balanced_minimum_cuts::build_internal_scc_graph( graph_access & residualGraph,  build_internal_scc_graph154,7001

extern/KaHIP/lib/partition/uncoarsening/refinement/quotient_graph_refinement/flow_refinement/boundary_bfs.h,102
#define BOUNDARY_BFS_4AJLJJABBOUNDARY_BFS_4AJLJJAB24,1075
class boundary_bfs {boundary_bfs29,1178

extern/KaHIP/lib/partition/uncoarsening/refinement/quotient_graph_refinement/two_way_refinement.h,292
#define TWO_WAY_REFINEMENT_INTERFACE_1ZWCSI0JTWO_WAY_REFINEMENT_INTERFACE_1ZWCSI0J24,1097
class two_way_refinement{two_way_refinement28,1170
                two_way_refinement( ) {};two_way_refinement30,1212
                virtual ~two_way_refinement() {};~two_way_refinement31,1254

extern/KaHIP/lib/partition/uncoarsening/refinement/quotient_graph_refinement/quotient_graph_refinement.h,174
#define QUOTIENT_GRAPH_REFINEMENT_A0Y1Y6LLQUOTIENT_GRAPH_REFINEMENT_A0Y1Y6LL24,1101
class quotient_graph_refinement : public refinement {quotient_graph_refinement29,1219

extern/KaHIP/lib/partition/uncoarsening/refinement/quotient_graph_refinement/boundary_lookup.h,1375
#define BOUNDARY_LOOKUP_2JMSKBSIBOUNDARY_LOOKUP_2JMSKBSI24,1081
struct boundary_pair {boundary_pair34,1245
        PartitionID k;k35,1268
        PartitionID lhs;lhs36,1291
        PartitionID rhs;rhs37,1316
struct compare_boundary_pair {compare_boundary_pair41,1346
        bool operator()(const boundary_pair pair_a, const boundary_pair pair_b) const {operator ()42,1377
struct compare_boundary_pair_directed {compare_boundary_pair_directed49,1677
        bool operator()(const boundary_pair pair_a, const boundary_pair pair_b) const {operator ()50,1717
struct data_boundary_pair {data_boundary_pair56,1928
        PartialBoundary pb_lhs;pb_lhs57,1956
        PartialBoundary pb_rhs;pb_rhs58,1988
        PartitionID lhs;lhs59,2020
        PartitionID rhs;rhs60,2045
        EdgeWeight edge_cut;edge_cut61,2070
        bool initialized;initialized63,2100
        data_boundary_pair() {data_boundary_pair65,2127
struct hash_boundary_pair_directed{hash_boundary_pair_directed73,2365
       size_t operator()(const boundary_pair pair) const {operator ()74,2401
struct hash_boundary_pair{hash_boundary_pair79,2524
       size_t operator()(const boundary_pair pair) const {operator ()80,2551
typedef std::unordered_map<const boundary_pair, data_boundary_pair, hash_boundary_pair, compare_boundary_pair> block_pairs;block_pairs88,2804

extern/KaHIP/lib/partition/uncoarsening/refinement/quotient_graph_refinement/partial_boundary.h,1094
#define PARTIAL_BOUNDARY_963CRO9F_PARTIAL_BOUNDARY_963CRO9F_24,1084
struct compare_nodes_contains {compare_nodes_contains29,1171
        bool operator()(const NodeID lhs, const NodeID rhs) const {operator ()30,1203
struct is_boundary {is_boundary36,1323
       bool contains;contains37,1344
       is_boundary() {is_boundary38,1366
struct hash_boundary_nodes {hash_boundary_nodes44,1437
       size_t operator()(const NodeID idx) const {operator ()45,1466
typedef std::unordered_map<const NodeID, is_boundary, hash_boundary_nodes, compare_nodes_contains> is_boundary_node_hashtable;is_boundary_node_hashtable50,1558
class PartialBoundary {PartialBoundary52,1686
                is_boundary_node_hashtable internal_boundary;internal_boundary62,1971
inline bool PartialBoundary::contains(NodeID node) {contains65,2037
inline void PartialBoundary::insert(NodeID node) {insert69,2166
inline void PartialBoundary::deleteNode(NodeID node) {deleteNode73,2270
inline NodeID PartialBoundary::size() {size77,2367
#define forall_boundary_nodes(forall_boundary_nodes83,2467

extern/KaHIP/lib/partition/uncoarsening/refinement/quotient_graph_refinement/quotient_graph_refinement.cpp,571
quotient_graph_refinement::quotient_graph_refinement() {quotient_graph_refinement35,1587
quotient_graph_refinement::~quotient_graph_refinement() {~quotient_graph_refinement39,1648
void quotient_graph_refinement::setup_start_nodes(graph_access & G, setup_start_nodes43,1710
EdgeWeight quotient_graph_refinement::perform_refinement(PartitionConfig & config, graph_access & G, complete_boundary & boundary) {perform_refinement63,2406
EdgeWeight quotient_graph_refinement::perform_a_two_way_refinement(PartitionConfig & config, perform_a_two_way_refinement155,7063

extern/KaHIP/lib/partition/uncoarsening/refinement/quotient_graph_refinement/complete_boundary.cpp,401
complete_boundary::complete_boundary(graph_access * G) {complete_boundary26,1113
complete_boundary::~complete_boundary() {~complete_boundary37,1422
void complete_boundary::postMovedBoundaryNodeUpdates(NodeID node, boundary_pair * pair, postMovedBoundaryNodeUpdates40,1467
void complete_boundary::balance_singletons(const PartitionConfig & config, graph_access & G) {balance_singletons104,4783

extern/KaHIP/lib/partition/uncoarsening/refinement/quotient_graph_refinement/partial_boundary.cpp,124
PartialBoundary::PartialBoundary() {PartialBoundary25,1082
PartialBoundary::~PartialBoundary() {~PartialBoundary29,1139

extern/KaHIP/lib/partition/uncoarsening/refinement/refinement.h,94
#define REFINEMENT_UJN9IBHMREFINEMENT_UJN9IBHM24,1071
class refinement {refinement30,1229

extern/KaHIP/lib/partition/uncoarsening/refinement/label_propagation_refinement/label_propagation_refinement.h,186
#define LABEL_PROPAGATION_REFINEMENT_R4XW141YLABEL_PROPAGATION_REFINEMENT_R4XW141Y25,1109
class label_propagation_refinement : public refinement {label_propagation_refinement30,1209

extern/KaHIP/lib/partition/uncoarsening/refinement/label_propagation_refinement/label_propagation_refinement.cpp,326
label_propagation_refinement::label_propagation_refinement() {label_propagation_refinement28,1202
label_propagation_refinement::~label_propagation_refinement() {~label_propagation_refinement32,1285
EdgeWeight label_propagation_refinement::perform_refinement(PartitionConfig & partition_config, perform_refinement36,1369

extern/KaHIP/lib/partition/uncoarsening/refinement/mixed_refinement.cpp,281
mixed_refinement::mixed_refinement() {mixed_refinement29,1305
mixed_refinement::~mixed_refinement() {~mixed_refinement33,1348
EdgeWeight mixed_refinement::perform_refinement(PartitionConfig & config, graph_access & G, complete_boundary & boundary) {perform_refinement37,1392

extern/KaHIP/lib/partition/uncoarsening/refinement/refinement.cpp,94
refinement::refinement() {refinement25,1070
refinement::~refinement() {~refinement29,1117

extern/KaHIP/lib/partition/uncoarsening/refinement/cycle_improvements/problem_factory.h,481
#define PROBLEM_FACTORY_KHGQXT9HPROBLEM_FACTORY_KHGQXT9H24,1081
class problem_factory {problem_factory30,1252
void problem_factory::build_cycle_problem( PartitionConfig & partition_config, build_cycle_problem58,2598
void problem_factory::build_cycle_problem_with_reverse( PartitionConfig & partition_config, build_cycle_problem_with_reverse85,3775
void problem_factory::build_shortest_path_problem( PartitionConfig & partition_config, build_shortest_path_problem119,5360

extern/KaHIP/lib/partition/uncoarsening/refinement/cycle_improvements/greedy_neg_cycle.cpp,130
greedy_neg_cycle::greedy_neg_cycle() {greedy_neg_cycle25,1082
greedy_neg_cycle::~greedy_neg_cycle() {~greedy_neg_cycle29,1141

extern/KaHIP/lib/partition/uncoarsening/refinement/cycle_improvements/problem_factory.cpp,124
problem_factory::problem_factory() {problem_factory25,1080
problem_factory::~problem_factory() {~problem_factory29,1137

extern/KaHIP/lib/partition/uncoarsening/refinement/cycle_improvements/advanced_models.cpp,589
unsigned long advanced_models::conflicts = 0;conflicts36,1574
advanced_models::advanced_models() {advanced_models39,1622
advanced_models::~advanced_models() {~advanced_models43,1663
bool advanced_models::compute_vertex_movements_rebalance_ultra( PartitionConfig & config, compute_vertex_movements_rebalance_ultra47,1705
bool advanced_models::compute_vertex_movements_rebalance( PartitionConfig & config, compute_vertex_movements_rebalance89,3817
bool advanced_models::compute_vertex_movements_ultra_model( PartitionConfig & config, compute_vertex_movements_ultra_model175,7579

extern/KaHIP/lib/partition/uncoarsening/refinement/cycle_improvements/augmented_Qgraph_fabric.h,1044
#define AUGMENTED_QGRAPH_FABRIC_MULTITRY_FM_PVGY97EWAUGMENTED_QGRAPH_FABRIC_MULTITRY_FM_PVGY97EW24,1109
class augmented_Qgraph_fabric {augmented_Qgraph_fabric35,1489
                kway_graph_refinement_commons* commons;commons123,6427
                two_way_fm          m_twfm;m_twfm124,6483
                std::vector<bool>   m_eligible;m_eligible125,6527
                std::vector<NodeID> m_tomake_eligible;m_tomake_eligible126,6575
Gain augmented_Qgraph_fabric::find_eligible_start_node( graph_access  & G, find_eligible_start_node131,6643
void augmented_Qgraph_fabric::rebalance_fall_back(PartitionConfig & config, rebalance_fall_back193,9592
void augmented_Qgraph_fabric::perform_simple_move( PartitionConfig & config, perform_simple_move268,13021
void augmented_Qgraph_fabric::move_node(PartitionConfig & config, move_node293,14108
void augmented_Qgraph_fabric::move_node(PartitionConfig & config, move_node359,16840
bool augmented_Qgraph_fabric::local_search(PartitionConfig & config, local_search416,19099

extern/KaHIP/lib/partition/uncoarsening/refinement/cycle_improvements/cycle_definitions.h,523
#define CYCLE_DEFINITIONS_4GQMW8PZCYCLE_DEFINITIONS_4GQMW8PZ24,1085
struct undo_struct {undo_struct30,1229
        NodeID node;node31,1250
        PartitionID to;to32,1271
struct data_qgraph_edge {data_qgraph_edge35,1299
        NodeID to_move;to_move36,1325
        Gain gain;gain37,1349
        data_qgraph_edge() {data_qgraph_edge39,1369
typedef std::unordered_map<const boundary_pair, data_qgraph_edge, hash_boundary_pair_directed, compare_boundary_pair_directed> edge_movements;edge_movements45,1546

extern/KaHIP/lib/partition/uncoarsening/refinement/cycle_improvements/advanced_models.h,733
#define ADVANCED_MODELS_PR6SXN3GADVANCED_MODELS_PR6SXN3G24,1081
class advanced_models {advanced_models35,1456
                static unsigned long conflicts;conflicts65,2880
bool advanced_models::cycleorpath_has_conflicts( PartitionConfig & config, cycleorpath_has_conflicts110,5194
bool advanced_models::handle_ultra_model_conflicts( PartitionConfig & config, handle_ultra_model_conflicts270,12814
void advanced_models::perform_augmented_move( PartitionConfig & config, graph_access & G, perform_augmented_move317,15228
bool advanced_models::build_rebalance_model( PartitionConfig & config, build_rebalance_model369,17839
bool advanced_models::build_ultra_model( PartitionConfig & config, build_ultra_model502,24524

extern/KaHIP/lib/partition/uncoarsening/refinement/cycle_improvements/augmented_Qgraph_fabric.cpp,822
augmented_Qgraph_fabric::augmented_Qgraph_fabric() {augmented_Qgraph_fabric35,1568
augmented_Qgraph_fabric::~augmented_Qgraph_fabric() {~augmented_Qgraph_fabric38,1624
void augmented_Qgraph_fabric::cleanup_eligible() {cleanup_eligible42,1682
bool augmented_Qgraph_fabric::build_augmented_quotient_graph( PartitionConfig & config, build_augmented_quotient_graph49,1905
bool augmented_Qgraph_fabric::construct_local_searches_on_qgraph_edge( PartitionConfig & config, graph_access & G, construct_local_searches_on_qgraph_edge251,12464
void augmented_Qgraph_fabric::directed_more_locallized_search(PartitionConfig & config, graph_access & G, directed_more_locallized_search305,14824
void augmented_Qgraph_fabric::more_locallized_search(PartitionConfig & config, graph_access & G, more_locallized_search383,17877

extern/KaHIP/lib/partition/uncoarsening/refinement/cycle_improvements/greedy_neg_cycle.h,605
#define GREEDY_NEG_CYCLE_IVBKH6WDGREEDY_NEG_CYCLE_IVBKH6WD24,1083
class greedy_neg_cycle {greedy_neg_cycle35,1482
        problem_factory m_pf;m_pf62,2622
EdgeWeight greedy_neg_cycle::shortest_path_rebalance(PartitionConfig & partition_config, shortest_path_rebalance67,2664
EdgeWeight greedy_neg_cycle::negative_cycle_test(PartitionConfig & partition_config, negative_cycle_test120,4649
inline void greedy_neg_cycle::init_gains_new( PartitionConfig & partition_config, init_gains_new182,7294
inline void greedy_neg_cycle::init_gains( PartitionConfig & partition_config, init_gains247,10539

extern/KaHIP/lib/partition/uncoarsening/refinement/cycle_improvements/cycle_refinement.h,220
#define CYCLE_REFINEMENT_JEPIS3F0CYCLE_REFINEMENT_JEPIS3F024,1083
class cycle_refinement : public refinement{cycle_refinement34,1401
                advanced_models m_advanced_modelling;m_advanced_modelling56,2472

extern/KaHIP/lib/partition/uncoarsening/refinement/cycle_improvements/augmented_Qgraph.cpp,166
augmented_Qgraph::augmented_Qgraph() : m_max_vertex_weight_difference(0) {augmented_Qgraph25,1082
augmented_Qgraph::~augmented_Qgraph() {~augmented_Qgraph29,1177

extern/KaHIP/lib/partition/uncoarsening/refinement/cycle_improvements/cycle_refinement.cpp,591
cycle_refinement::cycle_refinement() {cycle_refinement30,1207
cycle_refinement::~cycle_refinement() {~cycle_refinement34,1250
EdgeWeight cycle_refinement::perform_refinement(PartitionConfig & partition_config, perform_refinement38,1294
EdgeWeight cycle_refinement::playfield_algorithm(PartitionConfig & partition_config, playfield_algorithm61,2221
EdgeWeight cycle_refinement::greedy_ultra_model(PartitionConfig & partition_config, greedy_ultra_model69,2566
EdgeWeight cycle_refinement::greedy_ultra_model_plus(PartitionConfig & partition_config, greedy_ultra_model_plus136,6831

extern/KaHIP/lib/partition/uncoarsening/refinement/cycle_improvements/augmented_Qgraph.h,2880
#define AUGMENTED_QUOTIENT_GRAPH_E5ZEJUBVAUGMENTED_QUOTIENT_GRAPH_E5ZEJUBV24,1091
struct pairwise_local_search { // a single two way local searchpairwise_local_search34,1407
        std::vector<Gain>        gains;gains35,1471
        std::vector<NodeID>      vertex_movements;vertex_movements36,1511
        std::vector<PartitionID> block_movements;block_movements37,1562
        std::vector<int>         load_difference;load_difference38,1612
        pairwise_local_search() {pairwise_local_search40,1663
struct set_pairwise_local_searches { // this is the structure which is associated with a directed qgraph edgeset_pairwise_local_searches46,1750
        std::vector<pairwise_local_search> local_searches;local_searches47,1860
        std::vector<int>                   search_to_use;search_to_use48,1919
        std::vector<Gain>                  search_gain;search_gain49,1977
        std::vector<int>                   search_num_moves; // number of moves to perform in the associated local searchsearch_num_moves50,2033
        set_pairwise_local_searches() {set_pairwise_local_searches52,2156
struct simple_move {simple_move56,2210
        PartitionID from;from57,2231
        PartitionID to;to58,2257
        NodeID      node;node59,2281
struct block_pair_difference {block_pair_difference62,2311
        PartitionID lhs;lhs63,2342
        PartitionID rhs;rhs64,2367
        int weight_difference;weight_difference65,2392
        block_pair_difference() {block_pair_difference67,2425
typedef std::unordered_map<const boundary_pair, set_pairwise_local_searches, hash_boundary_pair_directed, compare_boundary_pair_directed> augmented_Qgraph_internal;augmented_Qgraph_internal71,2473
class augmented_Qgraph {augmented_Qgraph73,2639
        int get_max_vertex_weight_difference() { return m_max_vertex_weight_difference; };get_max_vertex_weight_difference97,3836
        augmented_Qgraph_internal m_aqg;m_aqg100,3937
        int m_max_vertex_weight_difference;m_max_vertex_weight_difference101,3978
void augmented_Qgraph::get_associated_vertices(boundary_pair & pair, get_associated_vertices107,4035
void augmented_Qgraph::get_associated_blocks(boundary_pair & pair, get_associated_blocks119,4660
bool augmented_Qgraph::exists_vmovements_of_diff( boundary_pair & bp, unsigned & diff) {exists_vmovements_of_diff131,5278
Gain augmented_Qgraph::get_gain_of_vmovements( boundary_pair & bp, unsigned & diff) {get_gain_of_vmovements145,5716
void augmented_Qgraph::prepare( PartitionConfig & config, graph_access & G, graph_access & G_bar, unsigned & steps) {prepare151,5907
void augmented_Qgraph::commit_pairwise_local_search( boundary_pair & pair, pairwise_local_search & pls) {commit_pairwise_local_search224,10088
bool augmented_Qgraph::check_conflict( const  PartitionConfig & config, check_conflict229,10255

extern/KaHIP/lib/partition/uncoarsening/uncoarsening.h,102
#define UNCOARSENING_XSN847F2UNCOARSENING_XSN847F224,1075
class uncoarsening {uncoarsening29,1181

extern/KaHIP/lib/partition/uncoarsening/uncoarsening.cpp,237
uncoarsening::uncoarsening() {uncoarsening33,1370
uncoarsening::~uncoarsening() {~uncoarsening37,1405
int uncoarsening::perform_uncoarsening(const PartitionConfig & config, graph_hierarchy & hierarchy) {perform_uncoarsening41,1441

extern/KaHIP/lib/partition/uncoarsening/separator/vertex_separator_flow_solver.h,167
#define VERTEX_SEPARATOR_FLOW_SOLVER_FLA4518QVERTEX_SEPARATOR_FLOW_SOLVER_FLA4518Q24,1107
class vertex_separator_flow_solver  {vertex_separator_flow_solver30,1249

extern/KaHIP/lib/partition/uncoarsening/separator/vertex_separator_algorithm.cpp,725
vertex_separator_algorithm::vertex_separator_algorithm() {vertex_separator_algorithm30,1307
vertex_separator_algorithm::~vertex_separator_algorithm() {~vertex_separator_algorithm34,1370
void vertex_separator_algorithm::compute_vertex_separator(const PartitionConfig & config, compute_vertex_separator38,1434
void vertex_separator_algorithm::compute_vertex_separator(const PartitionConfig & config, compute_vertex_separator99,4128
void vertex_separator_algorithm::compute_vertex_separator_simple(const PartitionConfig & config, compute_vertex_separator_simple112,4707
bool vertex_separator_algorithm::is_vertex_separator(graph_access & G, std::unordered_map<NodeID, bool> & separator) {is_vertex_separator163,7086

extern/KaHIP/lib/partition/uncoarsening/separator/vertex_separator_flow_solver.cpp,413
vertex_separator_flow_solver::vertex_separator_flow_solver() {vertex_separator_flow_solver32,1262
vertex_separator_flow_solver::~vertex_separator_flow_solver() {~vertex_separator_flow_solver36,1329
void vertex_separator_flow_solver::find_separator(const PartitionConfig & config, find_separator40,1397
bool vertex_separator_flow_solver::build_flow_pb( const PartitionConfig & config, build_flow_pb83,3436

extern/KaHIP/lib/partition/uncoarsening/separator/vertex_separator_algorithm.h,160
#define VERTEX_SEPARTATOR_ALGORITHM_XUDNZZM8VERTEX_SEPARTATOR_ALGORITHM_XUDNZZM824,1104
class vertex_separator_algorithm {vertex_separator_algorithm32,1329

extern/KaHIP/lib/data_structure/graph_hierarchy.h,685
#define GRAPH_HIERACHY_UMHG74COGRAPH_HIERACHY_UMHG74CO24,1083
class graph_hierarchy {graph_hierarchy30,1161
        std::stack<graph_access*>   m_the_graph_hierarchy;m_the_graph_hierarchy47,1632
        std::stack<CoarseMapping*>  m_the_mappings;m_the_mappings48,1691
        std::vector<CoarseMapping*> m_to_delete_mappings;m_to_delete_mappings49,1743
        std::vector<graph_access*>  m_to_delete_hierachies;m_to_delete_hierachies50,1801
        graph_access  * m_current_coarser_graph;m_current_coarser_graph51,1861
        graph_access  * m_coarsest_graph;m_coarsest_graph52,1910
        CoarseMapping * m_current_coarse_mapping;m_current_coarse_mapping53,1952

extern/KaHIP/lib/data_structure/flow_graph.h,1774
#define FLOW_GRAPH_636S5L2SFLOW_GRAPH_636S5L2S24,1072
struct rEdge {rEdge28,1127
    NodeID     source;source29,1142
    NodeID     target;target30,1165
    FlowType   capacity;capacity31,1188
    FlowType   flow;flow32,1213
    EdgeID     reverse_edge_index;reverse_edge_index33,1234
    rEdge( NodeID source, NodeID target, FlowType capacity, FlowType flow, EdgeID reverse_edge_index) {rEdge35,1270
class flow_graph {flow_graph48,1779
        flow_graph() {flow_graph50,1806
        virtual ~flow_graph() {};~flow_graph55,1907
        void start_construction(NodeID nodes, EdgeID edges = 0) {start_construction57,1942
        void finish_construction() {};finish_construction63,2143
        NodeID number_of_nodes() {return m_num_nodes;};number_of_nodes65,2183
        EdgeID number_of_edges() {return m_num_edges;};number_of_edges66,2239
        void new_edge(NodeID source, NodeID target, FlowType capacity) {new_edge76,2596
        EdgeID get_first_edge(NodeID node) {return 0;};get_first_edge83,3009
        EdgeID get_first_invalid_edge(NodeID node) {return m_adjacency_lists[node].size();};get_first_invalid_edge84,3065
        std::vector< std::vector<rEdge> > m_adjacency_lists;m_adjacency_lists88,3169
        NodeID m_num_nodes;m_num_nodes89,3230
        NodeID m_num_edges;m_num_edges90,3258
NodeID flow_graph::getEdgeCapacity(NodeID source, EdgeID e) {getEdgeCapacity94,3297
void flow_graph::setEdgeFlow(NodeID source, EdgeID e, FlowType flow) {setEdgeFlow103,3527
FlowType flow_graph::getEdgeFlow(NodeID source, EdgeID e) {getEdgeFlow112,3758
NodeID flow_graph::getEdgeTarget(NodeID source, EdgeID e) {getEdgeTarget121,3978
EdgeID flow_graph::getReverseEdge(NodeID source, EdgeID e) {getReverseEdge130,4202

extern/KaHIP/lib/data_structure/priority_queues/bucket_pq.h,1482
#define BUCKET_PQ_EM8YJPA9BUCKET_PQ_EM8YJPA924,1069
class bucket_pq : public priority_queue_interface {bucket_pq31,1180
                virtual ~bucket_pq() {};~bucket_pq35,1309
                NodeID     m_elements;m_elements54,1911
                EdgeWeight m_gain_span;m_gain_span55,1950
                unsigned   m_max_idx; //points to the non-empty bucket with the largest gainm_max_idx56,1990
                std::unordered_map<NodeID, std::pair<Count, Gain> > m_queue_index;m_queue_index58,2100
                std::vector< std::vector<NodeID> >             m_buckets;m_buckets59,2183
inline bucket_pq::bucket_pq( const EdgeWeight & gain_span_input ) {bucket_pq62,2261
inline NodeID bucket_pq::size() {size70,2465
inline void bucket_pq::insert(NodeID node, Gain gain) {insert74,2531
inline bool bucket_pq::empty( ) {empty87,2925
inline Gain bucket_pq::maxValue( ) {maxValue91,3002
inline NodeID bucket_pq::maxElement( ) {maxElement95,3090
inline NodeID bucket_pq::deleteMax() {deleteMax99,3186
inline void bucket_pq::decreaseKey(NodeID node, Gain new_gain) {decreaseKey118,3692
inline void bucket_pq::increaseKey(NodeID node, Gain new_gain) {increaseKey122,3797
inline Gain bucket_pq::getKey(NodeID node) {getKey126,3902
inline void bucket_pq::changeKey(NodeID node, Gain new_gain) {changeKey130,4001
inline void bucket_pq::deleteNode(NodeID node) {deleteNode135,4125
inline bool bucket_pq::contains(NodeID node) {contains165,5314

extern/KaHIP/lib/data_structure/priority_queues/priority_queue_interface.h,391
#define PRIORITY_QUEUE_INTERFACE_20ZSYG7RPRIORITY_QUEUE_INTERFACE_20ZSYG7R24,1099
class priority_queue_interface {priority_queue_interface28,1168
                priority_queue_interface( ) {};priority_queue_interface30,1217
                virtual ~priority_queue_interface() {};~priority_queue_interface31,1265
typedef priority_queue_interface refinement_pq;refinement_pq52,2113

extern/KaHIP/lib/data_structure/priority_queues/maxNodeHeap.h,2568
#define MAX_NODE_HEAP_39CK1B8IMAX_NODE_HEAP_39CK1B8I24,1075
typedef int Key;Key33,1274
class QElement {QElement36,1319
                QElement( Data data, Key key, int index ) : m_data(data), m_key (key), m_index(index) {}; QElement38,1352
                virtual ~QElement() {};~QElement39,1459
                Data & get_data() { get_data41,1500
                void set_data(Data & data) { set_data45,1596
                Key get_key() {get_key49,1700
                void set_key(Key key) {set_key53,1789
                int get_index() {get_index57,1885
                void set_index(int index) {set_index61,1978
                Data m_data;m_data66,2099
                Key  m_key;m_key67,2128
                int  m_index; // the index of the element in the heapm_index68,2156
class maxNodeHeap : public priority_queue_interface {maxNodeHeap72,2231
                struct Data {Data75,2332
                        NodeID node;node76,2362
                        Data( NodeID node ) : node(node) {};Data77,2399
                typedef QElement<Data> PQElement;PQElement80,2480
                maxNodeHeap() {};maxNodeHeap82,2547
                virtual ~maxNodeHeap() {};~maxNodeHeap83,2581
                std::vector< PQElement >               m_elements;      // elements that contain the datam_elements102,3173
                std::unordered_map<NodeID, int>   m_element_index; // stores index of the node in the m_elements arraym_element_index103,3279
                std::vector< std::pair<Key, int> >     m_heap;          // key and index in elements (pointer)m_heap104,3398
inline Gain maxNodeHeap::maxValue() {maxValue113,3600
inline NodeID maxNodeHeap::maxElement() {maxElement117,3674
inline void maxNodeHeap::siftDown( int pos ) {siftDown121,3781
inline void maxNodeHeap::siftUp( int pos ) {siftUp166,5413
inline NodeID maxNodeHeap::size() {size186,6176
inline bool maxNodeHeap::empty( ) {empty190,6247
inline void maxNodeHeap::insert(NodeID node, Gain gain) {insert194,6325
inline void maxNodeHeap::deleteNode(NodeID node) {deleteNode206,6826
inline NodeID maxNodeHeap::deleteMax() {deleteMax235,7985
inline void maxNodeHeap::changeKey(NodeID node, Gain gain) {changeKey267,9232
inline void maxNodeHeap::decreaseKey(NodeID node, Gain gain) {decreaseKey276,9547
inline void maxNodeHeap::increaseKey(NodeID node, Gain gain) {increaseKey285,9906
inline Gain maxNodeHeap::getKey(NodeID node) {getKey294,10263
inline bool maxNodeHeap::contains(NodeID node) {contains299,10392

extern/KaHIP/lib/data_structure/matrix/normal_matrix.h,719
#define NORMAL_MATRIX_DAUJ4JMMNORMAL_MATRIX_DAUJ4JMM24,1077
class normal_matrix : public matrix {normal_matrix28,1130
        normal_matrix(unsigned int dim_x, unsigned int dim_y, int lazy_init_val = 0) : m_dim_x (dim_x), normal_matrix30,1176
        virtual ~normal_matrix() {};~normal_matrix35,1596
        inline int get_xy(unsigned int x, unsigned int y) {get_xy37,1634
        inline void set_xy(unsigned int x, unsigned int y, int value) {set_xy44,1878
        std::vector< std::vector<int> > m_internal_matrix;m_internal_matrix56,2373
        unsigned int m_dim_x, m_dim_y;m_dim_x57,2432
        unsigned int m_dim_x, m_dim_y;m_dim_y57,2432
        int m_lazy_init_val;m_lazy_init_val58,2471

extern/KaHIP/lib/data_structure/matrix/matrix.h,234
#define MATRIX_BHHZ9T7PMATRIX_BHHZ9T7P24,1063
class matrix {matrix26,1088
        matrix(unsigned int dim_x, unsigned int dim_y) {};matrix28,1111
        matrix() {};matrix29,1170
        virtual ~matrix() {};~matrix30,1191

extern/KaHIP/lib/data_structure/graph_hierarchy.cpp,692
graph_hierarchy::graph_hierarchy() : m_current_coarser_graph(NULL), graph_hierarchy25,1080
graph_hierarchy::~graph_hierarchy() {~graph_hierarchy30,1222
void graph_hierarchy::push_back(graph_access * G, CoarseMapping * coarse_mapping) {push_back42,1638
graph_access* graph_hierarchy::pop_finer_and_project() {pop_finer_and_project49,1888
CoarseMapping * graph_hierarchy::get_mapping_of_current_finer() {get_mapping_of_current_finer82,3157
graph_access* graph_hierarchy::get_coarsest( ) {get_coarsest86,3268
graph_access* graph_hierarchy::pop_coarsest( ) {pop_coarsest90,3369
bool graph_hierarchy::isEmpty( ) {isEmpty96,3578
unsigned int graph_hierarchy::size() {size101,3742

extern/KaHIP/lib/data_structure/union_find.h,540
#define UNION_FIND_HUNION_FIND_H24,1064
class union_find union_find30,1220
                union_find(unsigned n) : m_parent(n), m_rank(n), m_n(n) {union_find33,1256
                inline void Union(unsigned lhs, unsigned rhs)Union39,1546
                inline unsigned Find(unsigned element)Find54,2246
                inline unsigned n() constn66,2753
                std::vector< unsigned > m_parent;m_parent70,2846
                std::vector< unsigned > m_rank;m_rank71,2896
                unsigned m_n;m_n74,3005

extern/KaHIP/lib/data_structure/graph_access.h,5513
#define GRAPH_ACCESS_EFRXO4X2GRAPH_ACCESS_EFRXO4X224,1075
struct Node {Node33,1208
    EdgeID firstEdge;firstEdge34,1222
    NodeWeight weight;weight35,1244
struct Edge {Edge38,1271
    NodeID target;target39,1285
    EdgeWeight weight;weight40,1304
struct refinementNode {refinementNode43,1331
    PartitionID partitionIndex; partitionIndex44,1355
struct coarseningEdge {coarseningEdge48,1416
    EdgeRatingType rating;rating49,1440
class basicGraph {basicGraph55,1602
    basicGraph() : m_building_graph(false) {basicGraph59,1661
    EdgeID number_of_edges() {number_of_edges64,1768
    NodeID number_of_nodes() {number_of_nodes68,1837
    inline EdgeID get_first_edge(const NodeID & node) {get_first_edge72,1908
    inline EdgeID get_first_invalid_edge(const NodeID & node) {get_first_invalid_edge76,2011
    void start_construction(NodeID n, EdgeID m) {start_construction81,2157
    EdgeID new_edge(NodeID source, NodeID target) {new_edge96,2555
    NodeID new_node() {new_node117,3186
    void finish_construction() {finish_construction122,3279
    std::vector<Node> m_nodes;m_nodes143,4022
    std::vector<Edge> m_edges;m_edges144,4053
    std::vector<refinementNode> m_refinement_node_props;m_refinement_node_props146,4089
    std::vector<coarseningEdge> m_coarsening_edge_props;m_coarsening_edge_props147,4146
    bool m_building_graph;m_building_graph150,4243
    int m_last_source;m_last_source151,4270
    NodeID node; //current node that is constructednode152,4293
    EdgeID e;    //current edge that is constructede153,4345
#define forall_edges(forall_edges157,4425
#define forall_nodes(forall_nodes158,4514
#define forall_out_edges(forall_out_edges159,4603
#define forall_out_edges_starting_at(forall_out_edges_starting_at160,4724
#define forall_blocks(forall_blocks161,4849
#define endfor endfor162,4949
class graph_access {graph_access167,4995
                graph_access() { m_max_degree_computed = false; m_max_degree = 0; graphref = new basicGraph();}graph_access170,5072
                virtual ~graph_access(){ delete graphref; };~graph_access171,5184
                basicGraph * graphref;     graphref231,7788
                bool         m_max_degree_computed;m_max_degree_computed232,7832
                unsigned int m_partition_count;m_partition_count233,7884
                EdgeWeight   m_max_degree;m_max_degree234,7932
                std::vector<PartitionID> m_second_partition_index;m_second_partition_index235,7975
inline void graph_access::start_construction(NodeID nodes, EdgeID edges) {start_construction239,8072
inline NodeID graph_access::new_node() {new_node243,8202
inline EdgeID graph_access::new_edge(NodeID source, NodeID target) {new_edge247,8283
inline void graph_access::finish_construction() {finish_construction251,8406
inline NodeID graph_access::number_of_nodes() {number_of_nodes256,8527
inline EdgeID graph_access::number_of_edges() {number_of_edges260,8622
inline void graph_access::resizeSecondPartitionIndex(unsigned no_nodes) {resizeSecondPartitionIndex264,8717
inline EdgeID graph_access::get_first_edge(NodeID node) {get_first_edge268,8845
inline EdgeID graph_access::get_first_invalid_edge(NodeID node) {get_first_invalid_edge276,9036
inline PartitionID graph_access::get_partition_count() {get_partition_count280,9157
inline PartitionID graph_access::getSecondPartitionIndex(NodeID node) {getSecondPartitionIndex284,9251
inline void graph_access::setSecondPartitionIndex(NodeID node, PartitionID id) {setSecondPartitionIndex292,9450
inline PartitionID graph_access::getPartitionIndex(NodeID node) {getPartitionIndex301,9655
inline void graph_access::setPartitionIndex(NodeID node, PartitionID id) {setPartitionIndex309,9896
inline NodeWeight graph_access::getNodeWeight(NodeID node){getNodeWeight317,10142
inline void graph_access::setNodeWeight(NodeID node, NodeWeight weight){setNodeWeight325,10345
inline EdgeWeight graph_access::getEdgeWeight(EdgeID edge){getEdgeWeight333,10565
inline void graph_access::setEdgeWeight(EdgeID edge, EdgeWeight weight){setEdgeWeight341,10768
inline NodeID graph_access::getEdgeTarget(EdgeID edge){getEdgeTarget349,10988
inline EdgeRatingType graph_access::getEdgeRating(EdgeID edge) {getEdgeRating357,11187
inline void graph_access::setEdgeRating(EdgeID edge, EdgeRatingType rating){setEdgeRating365,11427
inline EdgeWeight graph_access::getNodeDegree(NodeID node) {getNodeDegree373,11667
inline EdgeWeight graph_access::getWeightedNodeDegree(NodeID node) {getWeightedNodeDegree377,11817
inline EdgeWeight graph_access::getMaxDegree() {getMaxDegree385,12071
inline int* graph_access::UNSAFE_metis_style_xadj_array() {UNSAFE_metis_style_xadj_array404,12733
inline int* graph_access::UNSAFE_metis_style_adjncy_array() {UNSAFE_metis_style_adjncy_array416,13130
inline int* graph_access::UNSAFE_metis_style_vwgt_array() {UNSAFE_metis_style_vwgt_array427,13427
inline int* graph_access::UNSAFE_metis_style_adjwgt_array() {UNSAFE_metis_style_adjwgt_array437,13721
inline void graph_access::set_partition_count(PartitionID count) {set_partition_count448,14023
inline int graph_access::build_from_metis(int n, int* xadj, int* adjncy) {build_from_metis452,14128
inline int graph_access::build_from_metis_weighted(int n, int* xadj, int* adjncy, int * vwgt, int* adjwgt) {build_from_metis_weighted472,14741
inline void graph_access::copy(graph_access & G_bar) {copy491,15401

src/parallel_reductions_fine_grained.h,959
#define PARALLEL_REDUCTIONS_FINE_GRAINED_HPARALLEL_REDUCTIONS_FINE_GRAINED_H2,43
#define TIMERSTIMERS21,394
class parallel_reductions_fine_grainedparallel_reductions_fine_grained23,410
    std::vector<int> independent_set;independent_set35,824
    size_t size() const { return inGraph.Size(); }size37,863
    std::vector<int> graph_to_kernel_map;graph_to_kernel_map50,1628
    std::vector<int> kernel_solution;kernel_solution51,1670
    std::vector<std::vector<std::vector<Reduction>>> AllReductions;AllReductions52,1708
    std::vector<std::vector<int>> const &m_AdjacencyArray;m_AdjacencyArray53,1776
    std::vector<SparseArraySet>     neighbors;neighbors54,1835
    SimpleSet inGraph;inGraph55,1882
    MaximumMatching maximumMatching;maximumMatching56,1905
    std::vector<std::atomic_int> vertexDegree;vertexDegree57,1942
    clock_t replaceTimer;replaceTimer59,2003
    bool m_bAllowVertexFolds;m_bAllowVertexFolds61,2050

src/ProfilingHelper.h,5881
#define PROFILING_HELPER_HPROFILING_HELPER_H2,27
struct ProfilingHelper_t {ProfilingHelper_t10,149
	std::vector<struct timeval> startTimersPerPartition;startTimersPerPartition11,176
	std::vector<int> currentVertexPartition;currentVertexPartition12,230
	std::vector<struct timeval> startTimersUpdateNeighborhoodPerPartition;startTimersUpdateNeighborhoodPerPartition13,272
	std::vector<int> currentVertexUpdateNeighborhoodPartition;currentVertexUpdateNeighborhoodPartition14,344
	std::vector<SparseArraySet> *neighborsPtr;neighborsPtr16,405
	std::vector<std::unordered_map<int, std::vector<unsigned int>>> timesUpdateNeighborhoodsPerDegree; // partition, degreetimesUpdateNeighborhoodsPerDegree18,450
    std::vector<std::vector<unsigned int>> timesUnsuccessfulFoldDegree; //partitiontimesUnsuccessfulFoldDegree20,572
    std::vector<std::unordered_map<int, std::vector<unsigned int>>> timesUnsuccessfulFoldAdjacentPerNeighborDegree; // partition, first neighbor degreetimesUnsuccessfulFoldAdjacentPerNeighborDegree21,656
    std::vector<std::vector<unsigned int>> timesUnsuccessfulFoldWrongPartition; // partition,timesUnsuccessfulFoldWrongPartition22,808
    std::vector<std::unordered_map<int, std::vector<unsigned int>>> timesSuccessfulFoldPerTwoNeighborhoodSize; // partition, size of 2-neighborhoodtimesSuccessfulFoldPerTwoNeighborhoodSize23,902
    std::vector<std::vector<unsigned int>> timesUnsuccessfulIsolatedCliquePartition;timesUnsuccessfulIsolatedCliquePartition25,1051
    std::vector<std::unordered_map<int, std::vector<unsigned int>>> timesUnsuccessfulIsolatedCliqueDegreePerDegree; // partition, degreetimesUnsuccessfulIsolatedCliqueDegreePerDegree26,1136
    std::vector<std::unordered_map<int, std::vector<unsigned int>>> timesUnsuccessfulIsolatedCliqueNoCliquePerDegree; // partition, degreetimesUnsuccessfulIsolatedCliqueNoCliquePerDegree27,1273
    std::vector<std::unordered_map<int, std::vector<unsigned int>>> timesSuccessfulIsolatedCliquePerDegree; // partition, degreetimesSuccessfulIsolatedCliquePerDegree28,1412
	int twoNeighbordhoodSize(ProfilingHelper_t *profilingHelper, int const vertex) {twoNeighbordhoodSize33,1558
	void addNewTime(std::unordered_map<int, std::vector<unsigned int>> &map, int const index, unsigned int const time) {addNewTime41,1864
	void printVectorMapVector(std::vector<std::unordered_map<int, std::vector<unsigned int>>> &vec, const char name[]) {printVectorMapVector45,2016
	void printTimeVector(std::vector<std::vector<unsigned int>> &vec, const char name[]) {printTimeVector61,2725
	unsigned int getTime(struct timeval *tBefore) {getTime72,3130
void profilingInit(ProfilingHelper_t *profilingHelper, std::vector<SparseArraySet> *neighbors, int const numPartitions)  {profilingInit79,3334
void profilingStartClock(ProfilingHelper_t *profilingHelper, int const partition, int const vertex) {profilingStartClock96,5056
void profilingStartClockUpdateNeighborhood(ProfilingHelper_t *profilingHelper, int const partition, int const vertex) {profilingStartClockUpdateNeighborhood101,5300
void profilingAddTimeUpdateNeighborhood(ProfilingHelper_t *profilingHelper, int const partition) {profilingAddTimeUpdateNeighborhood106,5598
void profilingAddTimeUnsuccessfulFoldDegree(ProfilingHelper_t *profilingHelper, int const partition) {profilingAddTimeUnsuccessfulFoldDegree113,6041
void profilingAddTimeUnsuccessfulFoldAdjacent(ProfilingHelper_t *profilingHelper, int const partition) {profilingAddTimeUnsuccessfulFoldAdjacent118,6307
void profilingAddTimeUnsuccessfulFoldWrongPartition(ProfilingHelper_t *profilingHelper, int const partition) {profilingAddTimeUnsuccessfulFoldWrongPartition126,6812
void profilingAddTimeSuccessfulFold(ProfilingHelper_t *profilingHelper, int const partition) {profilingAddTimeSuccessfulFold132,7160
void profilingAddTimeUnsuccessfulIsolatedCliqueDegree(ProfilingHelper_t *profilingHelper, int const partition) {profilingAddTimeUnsuccessfulIsolatedCliqueDegree139,7591
void profilingAddTimeUnsuccessfulIsolatedCliquePartition(ProfilingHelper_t *profilingHelper, int const partition) {profilingAddTimeUnsuccessfulIsolatedCliquePartition146,8025
void profilingAddTimeUnsuccessfulIsolatedCliqueNoClique(ProfilingHelper_t *profilingHelper, int const partition) {profilingAddTimeUnsuccessfulIsolatedCliqueNoClique151,8317
void profilingAddTimeSuccessfulIsolatedClique(ProfilingHelper_t *profilingHelper, int const partition) {profilingAddTimeSuccessfulIsolatedClique158,8755
void profilingPrint(ProfilingHelper_t *profilingHelper) {profilingPrint165,9173
struct ProfilingHelper_t {ProfilingHelper_t184,10535
	char nothing[0];nothing185,10562
#define profilingInit profilingInit187,10583
#define profilingStartClock profilingStartClock188,10618
#define profilingStartClockUpdateNeighborhood profilingStartClockUpdateNeighborhood189,10659
#define profilingAddTimeUpdateNeighborhood profilingAddTimeUpdateNeighborhood190,10718
#define profilingAddTimeUnsuccessfulFoldDegree profilingAddTimeUnsuccessfulFoldDegree191,10774
#define profilingAddTimeUnsuccessfulFoldAdjacent profilingAddTimeUnsuccessfulFoldAdjacent192,10834
#define profilingAddTimeUnsuccessfulFoldWrongPartition profilingAddTimeUnsuccessfulFoldWrongPartition193,10896
#define profilingAddTimeSuccessfulFold profilingAddTimeSuccessfulFold194,10964
#define profilingAddTimeUnsuccessfulIsolatedCliqueDegree profilingAddTimeUnsuccessfulIsolatedCliqueDegree195,11016
#define profilingAddTimeUnsuccessfulIsolatedCliquePartition profilingAddTimeUnsuccessfulIsolatedCliquePartition196,11086
#define profilingAddTimeUnsuccessfulIsolatedCliqueNoClique profilingAddTimeUnsuccessfulIsolatedCliqueNoClique197,11159
#define profilingAddTimeSuccessfulIsolatedClique profilingAddTimeSuccessfulIsolatedClique198,11231
#define profilingPrint profilingPrint199,11293

src/sequential_benchmark.cpp,140
inline bool ends_with(std::string const & value, std::string const & ending)ends_with23,544
int main(int argn, char **argv) {main29,749

src/full_reductions.cpp,622
full_reductions::full_reductions(std::vector<std::vector<int>> &_adj, std::vector<int> _partitions)full_reductions9,192
void full_reductions::reduce_graph() {reduce_graph16,410
size_t full_reductions::get_current_is_size_with_folds() {get_current_is_size_with_folds30,1239
size_t full_reductions::number_of_nodes_remaining() {number_of_nodes_remaining35,1378
std::vector<std::vector<int>> full_reductions::getKernel() {getKernel39,1477
void full_reductions::applyKernelSolution(std::vector<int> kernel_solution) {applyKernelSolution43,1588
std::vector<int> full_reductions::getSolution() {getSolution47,1734

src/data_structures/array_set.h,1793
#define _ARRAY_SET_H_ARRAY_SET_H26,1136
class array_set {array_set34,1250
        array_set(unsigned int size) : lookup(size, -1), elements(size, -1), first(0), last(-1) { }array_set42,1435
        array_set() : lookup(), elements(), first(0), last(-1) { }array_set47,1592
        ~array_set() { }~array_set52,1715
        void resize(unsigned int size) {resize59,1866
        void init(unsigned int size) {init69,2123
        void init_from_adj(std::vector<std::vector<int>> & adj, int node) {init_from_adj83,2573
        bool contains(int const x) const {contains98,3059
        void insert(int const x) {insert110,3467
        void remove(int x) {remove125,3925
        void move_to(int x, array_set &other) {move_to141,4400
        unsigned int size() const { return last - first + 1; }size151,4622
        bool empty() const { return last < first; }empty159,4842
        std::vector<int>::iterator begin() { return elements.begin() + first; }begin166,5047
        std::vector<int>::iterator end()   { return elements.begin() + last + 1; }end173,5268
        std::vector<int>::const_iterator begin() const { return elements.begin() + first; }begin180,5511
        std::vector<int>::const_iterator end() const { return elements.begin() + last + 1; }end187,5751
        int at(unsigned int index) {at195,6016
        int operator[](unsigned int index) { return at(index); }operator []205,6271
        void clear() {clear211,6451
        bool operator==(array_set const &that) const {operator ==223,6763
        bool operator!=(array_set const &that) const {operator !=238,7264
        std::vector<int> lookup;lookup244,7405
        std::vector<int> elements;elements246,7487
        int first;first248,7561
        int last;last250,7618

src/full_reductions.h,285
#define FULL_REDUCTIONS_HFULL_REDUCTIONS_H2,26
class full_reductionsfull_reductions11,200
	std::vector<std::vector<int>> &adj;adj22,565
	std::vector<int> partitions;partitions23,602
	std::vector<std::unique_ptr<parallel_reductions>> parallel_reducers;parallel_reducers24,632

src/mis_log.h,2919
#define _MIS_LOG_H__MIS_LOG_H_21,907
class mis_log {mis_log29,1033
        static mis_log *instance() {instance36,1186
        timer total_timer;total_timer225,5997
        timer evo_timer;evo_timer226,6024
        timer operator_timer;operator_timer227,6049
        timer pool_timer;pool_timer228,6079
        timer non_pool_timer;non_pool_timer229,6105
        std::stringstream filebuffer_string;filebuffer_string230,6135
        MISConfig log_config;log_config231,6180
        std::string graph_name;graph_name234,6241
        unsigned int number_of_nodes;number_of_nodes235,6273
        unsigned int number_of_edges;number_of_edges236,6311
        unsigned int arc_scans;arc_scans237,6349
        double avg_degree;avg_degree238,6381
        double density;density239,6408
        unsigned int number_of_rounds;number_of_rounds242,6478
        unsigned int number_of_repetitions;number_of_repetitions243,6517
        unsigned int best_solution_size;best_solution_size244,6561
        double avg_solution_size;avg_solution_size245,6602
        std::string evo_operator;evo_operator248,6671
        unsigned int result_operator;result_operator249,6705
        unsigned int current_is_size;current_is_size252,6777
        unsigned int optimum_size;optimum_size253,6815
        double total_time_taken;total_time_taken256,6882
        unsigned int separator_selected;separator_selected258,6916
        unsigned int cover_selected;cover_selected259,6957
        unsigned int multiway_selected;multiway_selected260,6994
        unsigned int separator_improv;separator_improv262,7035
        unsigned int cover_improv;cover_improv263,7074
        unsigned int multiway_improv;multiway_improv264,7109
        double total_separator_time;total_separator_time266,7148
        double total_cover_time;total_cover_time267,7185
        double total_multiway_time;total_multiway_time268,7218
        double avg_separator_time;avg_separator_time270,7255
        double avg_cover_time;avg_cover_time271,7290
        double avg_multiway_time;avg_multiway_time272,7321
        unsigned int total_separator_improv;total_separator_improv274,7356
        unsigned int total_cover_improv;total_cover_improv275,7401
        unsigned int total_multiway_improv;total_multiway_improv276,7442
        double avg_separator_improv;avg_separator_improv278,7487
        double avg_cover_improv;avg_cover_improv279,7524
        double avg_multiway_improv;avg_multiway_improv280,7557
        double time_taken_best;time_taken_best282,7594
        std::string operator_best;operator_best283,7626
        unsigned int repetition_best;repetition_best284,7661
        unsigned int round_best;round_best285,7699
        double time_for_building_pool;time_for_building_pool287,7733
        double time_since_building_pool;time_since_building_pool288,7772

src/parallel_reductions.cpp,4293
#define ISOLATED_CLIQUE_MAX_NEIGHBORS ISOLATED_CLIQUE_MAX_NEIGHBORS20,360
#define INSERT_REMAINING(INSERT_REMAINING22,401
#define REMOVE_NEIGHBOR(REMOVE_NEIGHBOR24,540
#define REMOVE_VERTEX(REMOVE_VERTEX25,800
parallel_reductions::parallel_reductions(vector<vector<int>> const &adjacencyArray, vector<int> const &vertexPartitions)parallel_reductions31,973
parallel_reductions::~parallel_reductions()~parallel_reductions74,2610
std::vector<std::vector<int>> parallel_reductions::getKernel() {getKernel82,2796
void parallel_reductions::applyKernelSolution(std::vector<int> kernel_solution){applyKernelSolution109,3836
int parallel_reductions::degree(int const vertex) {degree122,4295
bool parallel_reductions::isBoundaryVertex(const int vertex) {isBoundaryVertex126,4383
bool parallel_reductions::RemoveIsolatedClique(int const partition, int const vertex, vector<Reduction> &vReductions, ArraySet &remaining, vector<bool> &vMarkedVertices, int &isolatedCliqueCount)RemoveIsolatedClique130,4485
bool parallel_reductions::isTwoNeighborhoodInSamePartition(int const vertex, int const partition, ArraySet &remaining) {isTwoNeighborhoodInSamePartition207,7358
bool parallel_reductions::removeUnconfined(int const partition, int const vertex, ArraySet &remaining, fast_set &closedNeighborhood, vector<int> &neighborhood, vector<int> &numNeighborsInS, vector<int> &neighborsInS, int &removedUnconfinedVerticesCount, int &numDiamondReductions) {removeUnconfined222,7870
bool parallel_reductions::removeTwin(int const partition, int const vertex, vector<Reduction> &vReductions, ArraySet &remaining, vector<bool> &vMarkedVertices, int &removedTwinCount, int &foldedTwinCount)removeTwin341,13221
bool parallel_reductions::FoldVertex(int const partition, int const vertex, vector<Reduction> &vReductions, ArraySet &remaining, int &foldedVertexCount)FoldVertex518,20051
void parallel_reductions::UpdateRemaining(vector<ArraySet> &remainingPerPartition, vector<vector<int>> &bufferPerPartition) {UpdateRemaining644,24565
bool parallel_reductions::LPReduction(vector<ArraySet> &remainingPerPartition, vector<vector<int>> &bufferPerPartition, int &numLPReductions) {LPReduction670,25661
void parallel_reductions::reduce_graph_parallel() {reduce_graph_parallel787,32851
bool parallel_reductions::checkDegrees() {checkDegrees946,40560
void parallel_reductions::reduce_graph_sequential() {reduce_graph_sequential967,41509
void parallel_reductions::ApplyReductions(int const partition, vector<Reduction> &vReductions, std::vector<bool> &vMarkedVertices, ArraySet &remaining, vector<int> &tempInt1, vector<int> &tempInt2, fast_set &fastSet, vector<int> &tempIntDoubleSize, double &time, int &isolatedCliqueCount, int &foldedVertexCount, int &removedTwinCount, int &foldedTwinCount, int &removedUnconfinedVerticesCount, int &numDiamondReductions)ApplyReductions1049,44902
void parallel_reductions::reduce_graph_sequential_reduction_wise() {reduce_graph_sequential_reduction_wise1099,48367
bool parallel_reductions::removeAllUnconfined(int const partition, ArraySet *remainingInsert, fast_set &closedNeighborhood, std::vector<int> &neighborhood, std::vector<int> &numNeighborsInS, std::vector<int> &neighborsInS, int &removedUnconfinedVerticesCount, int &numDiamondReductions) {removeAllUnconfined1224,53489
bool parallel_reductions::removeAllTwin(int const partition, std::vector<Reduction> &vReductions, ArraySet *remainingUse, ArraySet *remainingInsert, std::vector<bool> &vMarkedVertices, int &removedTwinCount, int &foldedTwinCount) {removeAllTwin1242,54462
bool parallel_reductions::RemoveAllIsolatedClique(int const partition, std::vector<Reduction> &vReductions, ArraySet *remainingUse, ArraySet *remainingInsert, std::vector<bool> &vMarkedVertices, int &isolatedCliqueCount){RemoveAllIsolatedClique1260,55287
bool parallel_reductions::FoldAllVertices(int const partition, std::vector<Reduction> &vReductions, ArraySet *remainingUse, ArraySet *remainingInsert, int &foldedVertexCount) {FoldAllVertices1278,56098
void parallel_reductions::UndoReductions(vector<Reduction> const &vReductions)UndoReductions1296,56835
void parallel_reductions::ApplyKernelSolutionToReductions(vector<Reduction> const &vReductions)ApplyKernelSolutionToReductions1351,59116

src/parallel_reductions.h,1447
#define PARALLEL_REDUCTIONS_HPARALLEL_REDUCTIONS_H2,30
#define TIMERSTIMERS20,350
class parallel_reductionsparallel_reductions22,366
    std::vector<int> independent_set;independent_set38,1364
    size_t size() const { return inGraph.Size(); }size40,1403
    std::vector<SparseArraySet> const& Neighbors()  const { return neighbors;  }Neighbors42,1455
    void SetAllowVertexFolds(bool const allow) { m_bAllowVertexFolds = allow; }SetAllowVertexFolds44,1537
    std::vector<int> graph_to_kernel_map;graph_to_kernel_map68,3876
    std::vector<int> kernel_solution;kernel_solution69,3918
    std::vector<std::vector<std::vector<Reduction>>> AllReductions;AllReductions70,3956
    std::vector<std::vector<int>> const &m_AdjacencyArray;m_AdjacencyArray71,4024
    std::vector<SparseArraySet>     neighbors;neighbors72,4083
    SimpleSet inGraph;inGraph73,4130
    SimpleSet neighborhoodChanged;neighborhoodChanged74,4153
    std::vector<int> partitions;partitions75,4188
    std::vector<std::vector<int>> partition_nodes;partition_nodes76,4221
    std::vector<ArraySet> inGraphPerPartition;inGraphPerPartition77,4272
    MaximumMatching maximumMatching;maximumMatching78,4319
    std::vector<std::atomic_int> vertexDegree;vertexDegree79,4356
    std::vector<std::atomic_int> numCutEdges;numCutEdges80,4403
    clock_t replaceTimer;replaceTimer82,4463
    bool m_bAllowVertexFolds;m_bAllowVertexFolds84,4510

src/test_correctness.cpp,46
int main(int argn, char **argv) {main22,525

src/Reduction.h,2188
#define REDUCTION_HREDUCTION_H2,20
enum ReductionType {ISOLATED_VERTEX, FOLDED_VERTEX, DOMINATED_VERTEX, REMOVED_VERTEX, REMOVED_VERTEX_AND_NEIGHBORS, FOLDED_TWINS};ReductionType7,79
enum ReductionType {ISOLATED_VERTEX, FOLDED_VERTEX, DOMINATED_VERTEX, REMOVED_VERTEX, REMOVED_VERTEX_AND_NEIGHBORS, FOLDED_TWINS};ISOLATED_VERTEX7,79
enum ReductionType {ISOLATED_VERTEX, FOLDED_VERTEX, DOMINATED_VERTEX, REMOVED_VERTEX, REMOVED_VERTEX_AND_NEIGHBORS, FOLDED_TWINS};FOLDED_VERTEX7,79
enum ReductionType {ISOLATED_VERTEX, FOLDED_VERTEX, DOMINATED_VERTEX, REMOVED_VERTEX, REMOVED_VERTEX_AND_NEIGHBORS, FOLDED_TWINS};DOMINATED_VERTEX7,79
enum ReductionType {ISOLATED_VERTEX, FOLDED_VERTEX, DOMINATED_VERTEX, REMOVED_VERTEX, REMOVED_VERTEX_AND_NEIGHBORS, FOLDED_TWINS};REMOVED_VERTEX7,79
enum ReductionType {ISOLATED_VERTEX, FOLDED_VERTEX, DOMINATED_VERTEX, REMOVED_VERTEX, REMOVED_VERTEX_AND_NEIGHBORS, FOLDED_TWINS};REMOVED_VERTEX_AND_NEIGHBORS7,79
enum ReductionType {ISOLATED_VERTEX, FOLDED_VERTEX, DOMINATED_VERTEX, REMOVED_VERTEX, REMOVED_VERTEX_AND_NEIGHBORS, FOLDED_TWINS};FOLDED_TWINS7,79
class ReductionReduction9,211
    Reduction(ReductionType const type)Reduction13,238
    void SetVertex(int const vertex)SetVertex20,378
    void SetKeptVertex(int const vertex) {SetKeptVertex25,456
    void SetTwin(int const twin)SetTwin29,535
    int GetVertex() const { return m_iVertex; }GetVertex34,605
    int GetTwin() const { return m_iTwin; }GetTwin36,654
    void AddNeighbor(int const neighbor) {AddNeighbor38,699
    std::vector<int> const &GetNeighbors() constGetNeighbors42,791
    void AddRemovedEdge(int const v1, int const v2)AddRemovedEdge47,882
    std::vector<std::pair<int,int>> const &GetRemovedEdges() constGetRemovedEdges52,1006
    ReductionType GetType() const { return reductionType; }GetType57,1118
    int m_iVertex;m_iVertex60,1188
    int m_iTwin;m_iTwin61,1207
    std::vector<int>                m_vNeighbors;m_vNeighbors62,1224
    std::vector<std::pair<int,int>> m_vRemovedEdges;m_vRemovedEdges63,1274
    ReductionType                   reductionType;reductionType64,1327
    int keptVertex;keptVertex65,1378

src/sequential/branch_and_reduce_algorithm.cpp,4772
int  branch_and_reduce_algorithm::REDUCTION   = 3;REDUCTION42,1375
int  branch_and_reduce_algorithm::LOWER_BOUND = 4;LOWER_BOUND43,1426
int  branch_and_reduce_algorithm::BRANCHING   = 2;BRANCHING44,1477
bool branch_and_reduce_algorithm::outputLP    = false;outputLP45,1528
long branch_and_reduce_algorithm::nBranchings = 0;nBranchings46,1583
int  branch_and_reduce_algorithm::debug       = 0;debug47,1634
branch_and_reduce_algorithm::branch_and_reduce_algorithm(vector<vector<int>> &_adj, int const _N)branch_and_reduce_algorithm49,1686
int branch_and_reduce_algorithm::deg(int v) {deg91,2614
void branch_and_reduce_algorithm::set(int v, int a)set98,2764
void branch_and_reduce_algorithm::compute_fold(vector<int> const &S, vector<int> const &NS) {compute_fold115,3081
void branch_and_reduce_algorithm::compute_alternative(vector<int> const &A, vector<int> const &B) {compute_alternative165,4763
void branch_and_reduce_algorithm::restore(int n) {restore217,7068
void branch_and_reduce_algorithm::reverse() {reverse234,7618
void branch_and_reduce_algorithm::undoReductions() {undoReductions241,7867
int branch_and_reduce_algorithm::lpLowerBound() {lpLowerBound251,8141
int branch_and_reduce_algorithm::cycleLowerBound() {cycleLowerBound257,8289
int branch_and_reduce_algorithm::cliqueLowerBound() {cliqueLowerBound340,11108
int branch_and_reduce_algorithm::lowerBound() {lowerBound376,12133
bool branch_and_reduce_algorithm::dinicDFS(int v) {dinicDFS408,12922
void branch_and_reduce_algorithm::updateLP() {updateLP422,13292
bool branch_and_reduce_algorithm::lpReduction() {lpReduction464,14476
bool branch_and_reduce_algorithm::deg1Reduction() {deg1Reduction572,19841
bool branch_and_reduce_algorithm::dominateReduction() {dominateReduction605,20996
bool branch_and_reduce_algorithm::fold2Reduction() {fold2Reduction629,21777
bool branch_and_reduce_algorithm::isolatedCliqueReduction() {isolatedCliqueReduction656,22641
bool branch_and_reduce_algorithm::isolatedCliqueReduction(NodeID vertex) {isolatedCliqueReduction667,22930
bool branch_and_reduce_algorithm::twinReduction() {twinReduction696,23673
bool branch_and_reduce_algorithm::funnelReduction() {funnelReduction736,25152
bool branch_and_reduce_algorithm::deskReduction() {deskReduction800,27305
bool branch_and_reduce_algorithm::unconfinedReduction() {unconfinedReduction860,29555
int branch_and_reduce_algorithm::packingReduction() {packingReduction996,35072
void branch_and_reduce_algorithm::branching(timer & t, double time_limit) {branching1101,39706
bool branch_and_reduce_algorithm::decompose(timer & t, double time_limit) {decompose1241,44801
bool branch_and_reduce_algorithm::reduce() {reduce1532,56644
void branch_and_reduce_algorithm::rec(timer & t, double time_limit) {rec1556,57724
int branch_and_reduce_algorithm::solve(timer & t, double time_limit) {solve1573,58242
std::string branch_and_reduce_algorithm::debugString() const {debugString1597,59019
void branch_and_reduce_algorithm::PrintState() constPrintState1622,59689
void branch_and_reduce_algorithm::reduce_graph_few_reductions()reduce_graph_few_reductions1646,60283
void branch_and_reduce_algorithm::reduce_graph()reduce_graph1669,61130
void branch_and_reduce_algorithm::initial_reduce_graph()initial_reduce_graph1705,62609
size_t branch_and_reduce_algorithm::get_current_is_size() const {get_current_is_size1712,62756
size_t branch_and_reduce_algorithm::get_current_is_size_with_folds() const {get_current_is_size_with_folds1731,63237
bool branch_and_reduce_algorithm::folded_vertices_exist() const {folded_vertices_exist1743,63553
vector<int> branch_and_reduce_algorithm::compute_maximal_is() {compute_maximal_is1759,63936
size_t branch_and_reduce_algorithm::compute_alternative_maximal_is_size() {compute_alternative_maximal_is_size1796,64931
void branch_and_reduce_algorithm::restore_to_snapshot() {restore_to_snapshot1826,65772
size_t branch_and_reduce_algorithm::number_of_nodes_remaining() const {number_of_nodes_remaining1836,66006
void branch_and_reduce_algorithm::force_into_independent_set(vector<NodeID> const &nodes) {force_into_independent_set1844,66179
void branch_and_reduce_algorithm::extend_finer_is(vector<bool> & independent_set)extend_finer_is1860,66826
void branch_and_reduce_algorithm::get_solved_is(vector<bool> & independent_set) {get_solved_is1898,68281
void branch_and_reduce_algorithm::convert_adj_lists(graph_access & G, std::vector<NodeID> & reverse_mapping) const {convert_adj_lists1904,68472
std::vector<std::vector<int>> branch_and_reduce_algorithm::getKernel() {getKernel1969,70758
void branch_and_reduce_algorithm::applyKernelSolution(std::vector<int> kernel_solution) {applyKernelSolution1995,71533

src/sequential/branch_and_reduce_algorithm.h,1446
#define BRANCH_AND_REDUCE_SOLVER_HBRANCH_AND_REDUCE_SOLVER_H21,940
class branch_and_reduce_algorithmbranch_and_reduce_algorithm37,1229
	static int REDUCTION;REDUCTION44,1342
	static int LOWER_BOUND;LOWER_BOUND45,1365
	static int BRANCHING;BRANCHING46,1390
	static bool outputLP;outputLP47,1413
	std::vector<std::vector<int>> adj;adj49,1438
	static long nBranchings;nBranchings50,1474
	static int debug;debug51,1500
	double SHRINK;SHRINK52,1519
	int    depth;depth53,1535
    int    maxDepth;maxDepth54,1550
    int    rootDepth;rootDepth55,1571
	int    n;n56,1593
    int    N;N57,1604
	int opt;opt62,1655
    std::vector<int> y;y63,1665
	int crt;crt68,1798
    std::vector<int> x;x69,1808
	int rn;rn74,1867
	std::vector<int> in;in79,1901
    std::vector<int> out;out80,1923
	int lb;lb85,1977
	std::vector<int> que, level, iter;que87,1987
	std::vector<int> que, level, iter;level87,1987
	std::vector<int> que, level, iter;iter87,1987
	std::vector<int> modTmp;modTmp89,2024
	std::vector<std::shared_ptr<modified>> modifieds;modifieds91,2051
	int modifiedN;modifiedN92,2102
	std::vector<std::vector<int>> packing;packing98,2196
	std::vector<int> vRestore;vRestore100,2238
    int reductionSnapshotSize;reductionSnapshotSize102,2267
    std::vector<int> snapshotX;snapshotX103,2298
	fast_set used;used110,2457
    std::vector<int> graph_to_kernel_map;graph_to_kernel_map170,4145

src/sequential/modified.cpp,343
modified::modified(int const _add, std::vector<int> &_removed, std::vector<int> &_vs, std::vector<std::vector<int>> &newAdj, branch_and_reduce_algorithm *_pAlg)modified25,989
modified::modified(std::vector<int> &_removed, std::vector<int> &_vs, branch_and_reduce_algorithm *_pAlg)modified44,1618
void modified::restore() {restore52,1798

src/sequential/modified.h,1239
#define MODIFIED_HMODIFIED_H21,905
class modified {modified28,999
    int add;add31,1025
    std::vector<int> removed;removed32,1038
    std::vector<int> vs;vs33,1068
    std::vector<std::vector<int>> oldAdj;oldAdj34,1093
    branch_and_reduce_algorithm *pAlg;pAlg35,1135
    virtual ~modified() {};~modified42,1437
class fold : public modifiedfold49,1542
    fold(int const add, std::vector<int> &removed, std::vector<int> &vs, std::vector<std::vector<int>> &newAdj, branch_and_reduce_algorithm *_pAlg)fold53,1582
    fold(std::vector<int> &removed, std::vector<int> &vs, branch_and_reduce_algorithm *_pAlg)fold57,1787
    virtual ~fold() {}~fold61,1925
    virtual void reverse(std::vector<int> &x) {reverse63,1949
class alternative : public modified {alternative75,2362
    int k;k78,2409
    alternative(int const add, std::vector<int> &removed, std::vector<int> &vs, std::vector<std::vector<int>> &newAdj, branch_and_reduce_algorithm *_pAlg, int k)alternative80,2421
    alternative(std::vector<int> &removed, std::vector<int> &vs, branch_and_reduce_algorithm *_pAlg, int k)alternative86,2665
    virtual ~alternative() {}~alternative92,2842
    void reverse(std::vector<int> &x) {reverse94,2873

src/parse_parameters.h,126
#define _PARSE_PARAMETERS_H__PARSE_PARAMETERS_H_23,971
int parse_parameters(int argn, char **argv,parse_parameters39,1373

src/fast_set.h,317
#define FAST_SET_HFAST_SET_H21,904
class fast_set {fast_set25,943
	std::vector<int> used;used27,962
	int uid;uid28,986
	fast_set(int const n) : used(n, 0), uid(1)fast_set31,1005
	void clear() {clear34,1059
	bool add(int i) {add42,1185
	void remove(int i) {remove48,1274
	bool get(int i) {get52,1322

src/MaximumMatchingOld.cpp,1024
MaximumMatchingOld::MaximumMatchingOld(std::vector<SparseArraySet> &_neighbors) : neighbors(&_neighbors), N(_neighbors.size()) {MaximumMatchingOld6,94
MaximumMatchingOld::MaximumMatchingOld() {}MaximumMatchingOld29,876
void MaximumMatchingOld::PPF() {    PPF31,921
int MaximumMatchingOld::DFS_LA_TS(int startVertex, std::vector<int> &path)DFS_LA_TS108,2988
int MaximumMatchingOld::DFS_LA_TS_Reverse(int startVertex, std::vector<int> &path)DFS_LA_TS_Reverse169,4254
void MaximumMatchingOld::MarkReachableVertices() {MarkReachableVertices225,5437
bool MaximumMatchingOld::IsValidVertexCover() {IsValidVertexCover276,6865
bool MaximumMatchingOld::CheckVertexCoverAndMatchingSize() {CheckVertexCoverAndMatchingSize291,7194
void MaximumMatchingOld::MatchAndUpdate(int u)MatchAndUpdate315,7687
void MaximumMatchingOld::InitialMatching()InitialMatching337,8127
bool MaximumMatchingOld::CheckUnmatchedLeft() {CheckUnmatchedLeft393,9282
bool MaximumMatchingOld::IsMaximalMatching() {IsMaximalMatching410,9846

src/configuration_mis.h,591
#define _CONFIGURATION_MIS_H__CONFIGURATION_MIS_H_23,1002
class configuration_mis {configuration_mis29,1122
        configuration_mis() {} ;configuration_mis34,1216
        virtual ~configuration_mis() {};~configuration_mis39,1305
inline void configuration_mis::standard( MISConfig & mis_config ) {standard79,2545
inline void configuration_mis::social( MISConfig & mis_config ) {social85,2755
inline void configuration_mis::full_standard( MISConfig & mis_config ) {full_standard89,2850
inline void configuration_mis::full_social( MISConfig & mis_config ) {full_social93,2952

src/MaximumMatching.h,1130
#define MAXIMUM_MATCHING_HMAXIMUM_MATCHING_H2,27
	long n; // numver of vertices in both sidesn11,201
	long nrows; // number of vertices in the left sidenrows12,246
	long m; // number of edgesm13,298
	long* vtx_pointer; // an array of size n+1 storing the pointer in endV arrayvtx_pointer14,326
    long* endV; //an array of size m that stores the second vertex of an edge.endV15,404
	double* weight; // not used in unweighted graphweight16,483
} graph;graph17,532
class MaximumMatching{MaximumMatching21,576
	std::vector<int> reachableVertices;reachableVertices31,918
	graph* G;G43,1339
	long* QF;QF45,1351
    long* QFnext;QFnext46,1362
	long* __restrict__ flag;flag47,1380
	long* __restrict__ parent;parent48,1406
	long* __restrict__ leaf;leaf49,1434
    long* __restrict__ root;root50,1460
	long* __restrict__ mate;mate51,1489
    long* unmatchedU;unmatchedU52,1515
    long* nextUnmatchedU;nextUnmatchedU53,1537
    long * degree;degree55,1564
	long* degree1Vtx;degree1Vtx56,1583
	std::vector<std::vector<long>> stacks;stacks58,1603
	bool firstKarpSipser;firstKarpSipser60,1644

src/SparseArraySet.h,2066
#define SPARSE_ARRAY_SET_HSPARSE_ARRAY_SET_H2,27
class SparseArraySetSparseArraySet10,147
    SparseArraySet(size_t const size) : m_Elements(size, -1), m_iBegin(0), m_iEnd(-1), m_States(0), m_bInserted(false), m_bRemoved(false)SparseArraySet13,178
    SparseArraySet() : m_Elements(), m_iBegin(0), m_iEnd(-1), m_States(0), m_bInserted(false), m_bRemoved(false)SparseArraySet17,329
    ~SparseArraySet() {}~SparseArraySet21,455
    void Resize(size_t const size)Resize23,481
    void InitializeFromAdjacencyArray(std::vector<std::vector<int>> const &adjacencyArray, int const vertex)InitializeFromAdjacencyArray28,566
    void PrintSummary() constPrintSummary39,1013
    bool Contains(int const x) const {Contains48,1278
    void Insert(int const x) {Insert56,1522
    void Remove(int const x) {Remove65,1823
    void MoveTo(int const x, SparseArraySet &other) {MoveTo79,2303
    size_t Size()  const { return m_iEnd - m_iBegin + 1; }Size84,2408
    bool   Empty() const { return m_iEnd < m_iBegin; }Empty85,2467
    std::vector<int>::iterator begin() { return m_Elements.begin() + m_iBegin;   }begin87,2523
    std::vector<int>::iterator end()   { return m_Elements.begin() + m_iEnd + 1; }end88,2606
    std::vector<int>::const_iterator begin() const { return m_Elements.begin() + m_iBegin;   }begin90,2690
    std::vector<int>::const_iterator end()   const { return m_Elements.begin() + m_iEnd + 1; }end91,2785
    int At(size_t const index) constAt93,2881
    int operator[](size_t const index) const { return At(index); }operator []98,2965
    void SaveState()SaveState101,3034
    void RestoreState()RestoreState107,3198
    void Clear()Clear121,3651
    bool Equals(SparseArraySet &other) {Equals127,3724
    static bool Test() {Test139,4025
    std::vector<int> m_Elements;m_Elements216,6898
    int m_iBegin;m_iBegin217,6931
    int m_iEnd;m_iEnd218,6949
    std::vector<std::pair<int,int>> m_States;m_States219,6965
    bool m_bInserted;m_bInserted220,7011
    bool m_bRemoved;m_bRemoved221,7033

src/benchmark_fine_grained.cpp,279
inline bool ends_with(std::string const & value, std::string const & ending)ends_with23,561
bool testCorrectness(std::unique_ptr<parallel_reductions_fine_grained> &full_reducer_parallel, graph_access &G) {testCorrectness29,766
int main(int argn, char **argv) {main128,4851

src/MaximumMatching.cpp,1266
MaximumMatching::MaximumMatching(std::vector<std::vector<int>> const &adjacencyArray) {MaximumMatching4,58
int MaximumMatching::VertexDegree(const int vertex, std::vector<SparseArraySet> &neighbors, SimpleSet &inGraph, std::vector<std::atomic_int> &vertexDegree) {VertexDegree68,2089
void MaximumMatching::LoadGraph(std::vector<SparseArraySet> &neighbors, SimpleSet &inGraph, std::vector<std::atomic_int> &vertexDegree) {LoadGraph74,2335
MaximumMatching::~MaximumMatching() {~MaximumMatching102,3469
void free_graph( graph* bGraph)free_graph120,3719
long* MaximumMatching::MS_BFS_Graft ()MS_BFS_Graft127,3862
    #define THREAD_BUF_LEN THREAD_BUF_LEN137,4252
void MaximumMatching::findMate(long u, graph* G, long* flag,long* mate, long* degree)findMate646,24650
long MaximumMatching::KarpSipserInit(SimpleSet &inGraph) {KarpSipserInit679,25470
long MaximumMatching::KarpSipserInit1()KarpSipserInit1692,25769
long MaximumMatching::KarpSipserInit2(SimpleSet &inGraph)KarpSipserInit2758,27200
void MaximumMatching::MarkReachableVertices() {MarkReachableVertices833,29167
bool MaximumMatching::IsValidVertexCover() {IsValidVertexCover885,30566
bool MaximumMatching::CheckVertexCoverAndMatchingSize() {CheckVertexCoverAndMatchingSize900,30955

src/parallel_reductions_fine_grained.cpp,1659
#define ISOLATED_CLIQUE_MAX_NEIGHBORS ISOLATED_CLIQUE_MAX_NEIGHBORS21,382
#define maxTempSize maxTempSize22,422
parallel_reductions_fine_grained::parallel_reductions_fine_grained(vector<vector<int>> const &adjacencyArray)parallel_reductions_fine_grained27,471
parallel_reductions_fine_grained::~parallel_reductions_fine_grained()~parallel_reductions_fine_grained50,1252
std::vector<std::vector<int>> parallel_reductions_fine_grained::getKernel() {getKernel58,1464
void parallel_reductions_fine_grained::applyKernelSolution(std::vector<int> kernel_solution){applyKernelSolution85,2517
int parallel_reductions_fine_grained::degree(int const vertex) {degree98,2989
bool parallel_reductions_fine_grained::RemoveIsolatedClique(vector<vector<bool>> &vMarkedVerticesPerThread, vector<int> &toRemove, vector<unique_ptr<vector<int>>> &temp)RemoveIsolatedClique103,3091
bool parallel_reductions_fine_grained::LPReduction() {LPReduction194,6544
bool parallel_reductions_fine_grained::RemoveUnconfined(vector<fast_set> &closedNeighborhoodPerThread, vector<vector<int>> &neighborhoodPerThread, vector<vector<int>> &numNeighborsInSPerThread, vector<vector<int>> &neighborsInSPerThread, vector<char> &isCandidate, vector<int> &candidates, vector<int> &toRemove, vector<unique_ptr<vector<int>>> &temp) {RemoveUnconfined245,9157
void parallel_reductions_fine_grained::reduce_graph_parallel() {reduce_graph_parallel435,17825
bool parallel_reductions_fine_grained::checkDegrees() {checkDegrees514,20956
void parallel_reductions_fine_grained::ApplyKernelSolutionToReductions(vector<Reduction> const &vReductions)ApplyKernelSolutionToReductions528,21568

src/benchmark.cpp,237
inline bool ends_with(std::string const & value, std::string const & ending)ends_with24,565
inline bool starts_with(std::string const & value, std::string const & start)starts_with30,770
int main(int argn, char **argv) {main36,966

src/ArraySet.h,2158
#define ARRAY_SET_HARRAY_SET_H2,20
class ArraySetArraySet10,133
    ArraySet(size_t const size) : m_Lookup(size, -1), m_Elements(size, -1), m_iBegin(0), m_iEnd(-1), m_States(0), m_bInserted(false), m_bRemoved(false)ArraySet13,158
    ArraySet() : m_Lookup(), m_Elements(), m_iBegin(0), m_iEnd(-1), m_States(0), m_bInserted(false), m_bRemoved(false)ArraySet17,323
    ~ArraySet() {}~ArraySet21,455
    void Resize(size_t const size)Resize23,475
    void InitializeFromAdjacencyArray(std::vector<std::vector<int>> const &adjacencyArray, int const vertex)InitializeFromAdjacencyArray29,595
    void PrintSummary() constPrintSummary37,856
    bool Contains(int const x) const {Contains46,1121
    void Insert(int const x) {Insert53,1412
    void Remove(int const x) {Remove65,1972
    void MoveTo(int const x, ArraySet &other) {MoveTo78,2500
    size_t Size()  const { return m_iEnd - m_iBegin + 1; }Size83,2599
    bool   Empty() const { return m_iEnd < m_iBegin; }Empty84,2658
    std::vector<int>::iterator begin() { return m_Elements.begin() + m_iBegin;   }begin86,2714
    std::vector<int>::iterator end()   { return m_Elements.begin() + m_iEnd + 1; }end87,2797
    std::vector<int>::const_iterator begin() const { return m_Elements.begin() + m_iBegin;   }begin89,2881
    std::vector<int>::const_iterator end()   const { return m_Elements.begin() + m_iEnd + 1; }end90,2976
    int At(size_t const index) constAt92,3072
    int operator[](size_t const index) const { return At(index); }operator []97,3156
    void SaveState()SaveState99,3224
    void RestoreState()RestoreState105,3388
    void Clear()Clear119,3841
    bool operator==(ArraySet const &that) constoperator ==125,3914
    bool operator!=(ArraySet const &that) constoperator !=134,4148
    static bool Test() {Test139,4242
    std::vector<int> m_Lookup;m_Lookup216,7043
    std::vector<int> m_Elements;m_Elements217,7074
    int m_iBegin;m_iBegin218,7107
    int m_iEnd;m_iEnd219,7125
    std::vector<std::pair<int,int>> m_States;m_States220,7141
    bool m_bInserted;m_bInserted221,7187
    bool m_bRemoved;m_bRemoved222,7209

src/SimpleSet.h,523
#define SIMPLE_SET_HSIMPLE_SET_H2,21
class SimpleSetSimpleSet6,62
    SimpleSet(size_t const size, bool const init) : elements(size, init)SimpleSet9,88
    SimpleSet() : elements()SimpleSet13,174
    ~SimpleSet() {}~SimpleSet17,216
    void Resize(size_t const size)Resize19,237
    bool Contains(int const x) const {Contains24,323
    void Insert(int const x) {Insert29,434
    void Remove(int const x) {Remove34,537
    size_t Size()  const {Size39,641
    std::vector<char> elements;elements50,844

src/MaximumMatchingOld.h,847
#define MAXIMUM_MATCHING_OLD_HMAXIMUM_MATCHING_OLD_H2,31
class MaximumMatchingOld{MaximumMatchingOld7,110
	std::vector<int> reachableVertices;reachableVertices15,299
	std::vector<SparseArraySet> *neighbors;neighbors28,646
	std::vector<int> MatchingMates;MatchingMates29,687
	std::vector<int> degree;degree30,720
	std::vector<int> unmatchedLeft;unmatchedLeft31,746
	std::vector<int> visited;visited32,779
	std::vector<int> deg1Vertices;deg1Vertices33,806
	std::vector<int> tempUnmatchedVertices;tempUnmatchedVertices34,838
	std::vector<int> lookAhead;lookAhead35,879
	std::vector<int> nextNeighbor;nextNeighbor36,908
	std::vector<int> nextNeighborLookAhead;nextNeighborLookAhead37,940
	std::vector<std::vector<int>> augmentingPaths;augmentingPaths38,981
	int N;N39,1029
	int numUnmatchedLeft;numUnmatchedLeft40,1037

src/mis_config.h,509
#define _MIS_CONFIG_H__MIS_CONFIG_H_23,1004
struct MISConfig {MISConfig30,1121
    std::string graph_filename;graph_filename32,1171
    std::string partition_directory;partition_directory34,1242
    std::string output_filename;output_filename36,1311
    int num_reps;num_reps38,1387
    bool print_log;print_log40,1438
    bool write_graph;write_graph42,1501
    bool console_log;console_log44,1561
    bool all_reductions;all_reductions46,1636
    bool check_sorted;check_sorted48,1691

src/mis_log.cpp,547
mis_log::mis_log() {mis_log26,970
mis_log::~mis_log() {~mis_log64,1941
void mis_log::set_config(MISConfig & config) {set_config68,1971
void mis_log::set_graph(graph_access & G) {set_graph72,2047
void mis_log::print_newline() {print_newline79,2331
void mis_log::print_title() {print_title87,2477
void mis_log::print_graph() {print_graph97,3147
void mis_log::print_config() {print_config115,4413
void mis_log::print_reduction(MISConfig & mis_config, unsigned int extracted_nodes, unsigned int kernel_size) {print_reduction131,5409

src/sequential_benchmark_reduction_wise.cpp,140
inline bool ends_with(std::string const & value, std::string const & ending)ends_with23,544
int main(int argn, char **argv) {main29,749

scripts/plotScalingReductionsPerSecond.py,570
def get_cmap(N):get_cmap12,268
    def map_index_to_rgb_color(index):map_index_to_rgb_color17,501
def safe_div(x,y):safe_div21,616
def readGraphFile(inputFile, color):readGraphFile26,685
directory = sys.argv[1]directory203,7946
filename = os.path.join(directory, "reductionsPerSecond")filename204,7970
cmap = get_cmap(8)cmap206,8029
index = np.arange(7)index208,8073
width = 0.75width209,8094
cmapIndex = 1cmapIndex210,8107
	resultsFilePath = os.path.join(directory, resultsFile)resultsFilePath213,8164
pp = PdfPages(filename + '.pdf')pp227,8616

scripts/benchmark_script.sh,0

scripts/boxplots_different_partitioner_configurations.py,527
inputDir = sys.argv[1]inputDir8,131
latexFileName = os.path.join(inputDir, "tables.tex")latexFileName10,155
latexFile = open(latexFileName, 'w')latexFile12,209
def getPartitionTime(graph, config):getPartitionTime14,247
def readGraphResults(graphResultFile):readGraphResults23,603
fig = plt.figure(figsize=(10,8))fig79,2549
current_graph = 1current_graph80,2582
def drawBoxplots(graphResults, graphname, inputdir):drawBoxplots81,2600
results = dict()results104,3447
numGraphs = len(results)numGraphs112,3663

scripts/metisDirectedToUndirected.py,650
inputFilePath = sys.argv[1]inputFilePath3,12
outputFilePath = sys.argv[2]outputFilePath4,40
inputFile = open(inputFilePath, "r")inputFile6,70
outputFile = open(outputFilePath, "w")outputFile7,107
header = inputFile.readline()header9,147
headerWords = header.split()headerWords10,177
numVertices = int(headerWords[0])numVertices11,206
numEdges = int(headerWords[1])numEdges12,240
graph = [set() for i in range(numVertices + 1)]graph14,272
vertex = 1vertex16,321
numNonZeros = 0numNonZeros17,332
    neighbors = line.split()neighbors19,371
    neighbors = list(map(int, neighbors))neighbors20,400
numEdges = 0numEdges28,634

scripts/run_benchmarks.sh,0

scripts/plotScalingRunTime.py,605
def get_cmap(N):get_cmap12,268
    def map_index_to_rgb_color(index):map_index_to_rgb_color17,501
def safe_div(x,y):safe_div21,616
def readGraphFile(inputFile, color):readGraphFile26,685
directory = sys.argv[1]directory193,7240
filename = os.path.join(directory, "runtime")filename194,7264
filenamepdf = filename + '.pdf'filenamepdf195,7310
cmap = get_cmap(8)cmap197,7343
index = np.arange(7)index199,7387
width = 0.75width200,7408
cmapIndex = 1cmapIndex201,7421
	resultsFilePath = os.path.join(directory, resultsFile)resultsFilePath204,7478
pp = PdfPages(filenamepdf)pp217,7857

scripts/getTables.py,307
directory = sys.argv[1]directory4,22
filename = sys.argv[2]filename5,46
file = open(filename, "w")file7,70
	graphDirPath = os.path.join(directory, graphDirs)graphDirPath13,265
			resultsFilePath = os.path.join(graphDirPath, resultsFile)resultsFilePath16,396
file = open(filename, "a")file21,637

scripts/plot_lp.py,3048
def get_cmap(N):get_cmap10,187
    def map_index_to_rgb_color(index):map_index_to_rgb_color15,420
def makedir(path):makedir19,535
inputFile = sys.argv[1]inputFile26,665
plotsDir = inputFile + "-plots"plotsDir27,689
latexFileName = os.path.join(plotsDir, "table.tex")latexFileName30,740
file = open(inputFile, "r")file33,794
thread_counts = []thread_counts34,822
update_remaining_before_time = dict()update_remaining_before_time35,841
update_neighborhood_before_time = dict()update_neighborhood_before_time36,879
loading_time = dict()loading_time37,920
init_time = dict()init_time38,942
maximum_matching_time = dict()maximum_matching_time39,961
vertex_marking_time = dict()vertex_marking_time40,992
apply_results_time = dict()apply_results_time41,1021
update_remaining_after_time = dict()update_remaining_after_time42,1049
update_neighborhood_after_time = dict()update_neighborhood_after_time43,1086
total_time = dict()total_time44,1126
graphName = ""graphName45,1146
numEdgesString = ""numEdgesString46,1161
numVerticesString = ""numVerticesString47,1181
current_rep = 0current_rep48,1204
num_threads = 0num_threads49,1220
num_reps = 0num_reps50,1236
update_remaining_before_time_sorted = [0.0] * len(thread_counts)update_remaining_before_time_sorted114,4327
update_neighborhood_before_time_sorted = [0.0] * len(thread_counts)update_neighborhood_before_time_sorted115,4392
loading_time_sorted = [0.0] * len(thread_counts)loading_time_sorted116,4460
init_time_sorted = [0.0] * len(thread_counts)init_time_sorted117,4509
maximum_matching_time_sorted = [0.0] * len(thread_counts)maximum_matching_time_sorted118,4555
vertex_marking_time_sorted = [0.0] * len(thread_counts)vertex_marking_time_sorted119,4613
apply_results_time_sorted = [0.0] * len(thread_counts)apply_results_time_sorted120,4669
update_remaining_after_time_sorted = [0.0] * len(thread_counts)update_remaining_after_time_sorted121,4724
update_neighborhood_after_time_sorted = [0.0] * len(thread_counts)update_neighborhood_after_time_sorted122,4788
total_time_sorted = [0.0] * len(thread_counts)total_time_sorted123,4855
index = np.arange(len(thread_counts))index135,5678
width = 0.75width136,5716
cmap = get_cmap(9)cmap139,5773
sum_times_1 = list(map(operator.add, update_neighborhood_before_time_sorted, update_remaining_before_time_sorted))sum_times_1142,6081
sum_times_2 = list(map(operator.add, sum_times_1, loading_time_sorted))sum_times_2144,6297
sum_times_3 = list(map(operator.add, sum_times_2, init_time_sorted))sum_times_3146,6470
sum_times_4 = list(map(operator.add, sum_times_3, maximum_matching_time_sorted))sum_times_4148,6652
sum_times_5 = list(map(operator.add, sum_times_4, vertex_marking_time_sorted))sum_times_5150,6851
sum_times_6 = list(map(operator.add, sum_times_5, apply_results_time_sorted))sum_times_6152,7037
sum_times_7 = list(map(operator.add, sum_times_6, update_remaining_after_time_sorted))sum_times_7154,7252
	latexFile = open(latexFileName, "w")latexFile168,7738

scripts/benchmark_different_partitions.sh,0

scripts/removed_reductions_tables.py,808
inputDir = sys.argv[1]inputDir5,38
latexFileName = os.path.join(inputDir, "tables.tex")latexFileName7,62
latexFile = open(latexFileName, 'w')latexFile9,116
def readGraphResults(graphResultFile):readGraphResults13,199
def addTable(graphResults):addTable62,1499
def addSummaryTable(avg_results):addSummaryTable73,1986
results = dict()results85,2517
base_case = "all_reductions"base_case100,2916
rel_results = dict()rel_results101,2945
		rel_per_graph = (graphResults[0] / results[base_case][graphName][0], graphResults[1] / results[base_case][graphName][1], graphResults[2] / results[base_case][graphName][2])rel_per_graph106,3130
avg_results = dict()avg_results109,3356
		oldvalue = avg_results.get(reduction, (0,0,0))oldvalue112,3479
num_graphs = len(rel_results)num_graphs115,3609

scripts/partition_script.sh,0

scripts/different_partitions_tables.py,708
inputDir = sys.argv[1]inputDir5,41
lpaResultsDir = sys.argv[2]lpaResultsDir6,64
latexFileName = os.path.join(inputDir, "tables.tex")latexFileName8,93
latexFile = open(latexFileName, 'w')latexFile10,147
def getPartitionTime(graph, config):getPartitionTime12,185
def readGraphResults(graphResultFile):readGraphResults21,600
def addTotalSummaryTable(results):addTotalSummaryTable71,2294
def addRelativeSummaryTable(results):addRelativeSummaryTable100,3464
def addTable(graphDict):addTable144,5591
results = dict()results161,6326
lpaResults = os.listdir(lpaResultsDir)lpaResults162,6343
            tempResults = readGraphResults(os.path.join(lpaResultsDir, filename))tempResults167,6571

scripts/getParallelExactKernelComparisonTable.py,1343
def getPartitionTime(graph, numBlocks):getPartitionTime4,22
def getAkibaRuntimeForSizeFromFile(filename, targetSize):getAkibaRuntimeForSizeFromFile13,470
def getAkibaRuntimeForSize(akibaResultsDir, graphname, targetSize):getAkibaRuntimeForSize24,797
def getAkibaFinalTimeAndSizeFromFile(filename):getAkibaFinalTimeAndSizeFromFile33,1136
def getAkibaFinalTimeAndSize(akibaResultsDir, graphname):getAkibaFinalTimeAndSize44,1452
def getOurTimeAndSize(inputFile):getOurTimeAndSize57,1875
ourResultsDir = sys.argv[1]ourResultsDir179,7870
akibaResultsDir = sys.argv[2]akibaResultsDir180,7898
latexFileName = os.path.join(akibaResultsDir, "parallelExactKernelComparison.tex")latexFileName182,7929
latexFile = open(latexFileName, "w")latexFile184,8013
        totalTime = ourtime + partitioning_timetotalTime198,8739
        akibaTimeToOurSize = getAkibaRuntimeForSize(akibaResultsDir, filename, oursize)akibaTimeToOurSize200,8881
        filenameToPrint = filename.replace("-sorted", "").replace(".graph", "")filenameToPrint202,8970
        totalTime = ourtime + partitioning_timetotalTime219,10082
        akibaTimeToOurSize = getAkibaRuntimeForSize(akibaResultsDir, filename, oursize)akibaTimeToOurSize221,10224
        filenameToPrint = filename.replace("-sorted", "").replace(".graph", "")filenameToPrint223,10313

scripts/metisToMtx.py,496
inputFilePath = sys.argv[1]inputFilePath3,12
outputFilePath = sys.argv[2]outputFilePath4,40
inputFile = open(inputFilePath, "r")inputFile6,70
outputFile = open(outputFilePath, "w")outputFile7,107
header = inputFile.readline()header9,147
headerWords = header.split()headerWords10,177
numVertices = headerWords[0]numVertices11,206
numEdges = int(headerWords[1])numEdges12,235
vertex = 1vertex15,420
numNonZeros = 0numNonZeros16,431
    neighbors = line.split()neighbors18,470

scripts/partition_graphs.py,1746
graphDir = sys.argv[1]graphDir5,40
numPartitionSet = [64, 128, 256]numPartitionSet7,108
preconfigurations = ["ultrafast"]preconfigurations8,141
def makedir(path):makedir10,176
def writeDegreeFile(inputFilePath, outputFilePath):writeDegreeFile19,328
def writeTwoNeighborhoodFile(inputFilePath, outputFilePath):writeTwoNeighborhoodFile36,908
def writeCustomWeightFile(graphFilePath, weightsFilePath, outputFilePath):writeCustomWeightFile75,2284
def partitionGraph(graphPath, targetDir, preconfiguration):partitionGraph93,2950
def partitionGraphLPA(graphPath, targetDir):partitionGraphLPA112,4104
customWeightsDir = os.path.join(graphDir, "custom_weights")customWeightsDir129,5006
customWeightFiles = []customWeightFiles130,5066
        graphPath = os.path.join(graphDir, file)graphPath161,6531
        partitionsDir = os.path.join(graphDir, "partitions", file)partitionsDir162,6580
            targetDirWeighOne = os.path.join(partitionsDir, "weight_one_" + preconfiguration)targetDirWeighOne168,6760
        weightedGraphsDir = os.path.join(graphDir, "weighted")weightedGraphsDir173,7009
        weightedGraphDegreeFilePath = os.path.join(weightedGraphsDir, file) + "-weighted-degree.graph"weightedGraphDegreeFilePath175,7107
            targetDirWeighDegree = os.path.join(partitionsDir, "weight_degree_" + preconfiguration)targetDirWeighDegree180,7327
            targetDirWeighCustom = os.path.join(partitionsDir, "weight_custom")targetDirWeighCustom193,8126
            weightedGraphCustomFilePath = os.path.join(weightedGraphsDir, file) + "-weighted-custom.graph"weightedGraphCustomFilePath195,8248
            weightsFilePath = os.path.join(customWeightsDir, file + ".weights")weightsFilePath196,8355

scripts/benchmark_directory.py,104
graphDir = sys.argv[1]graphDir5,40
numreps = sys.argv[2]numreps6,63
def makedir(path):makedir8,86

scripts/draw_graphs.py,5094
def get_cmap(N):get_cmap10,187
    def map_index_to_rgb_color(index):map_index_to_rgb_color15,420
def makedir(path):makedir19,535
def safe_div(x,y):safe_div25,664
inputFile = sys.argv[1]inputFile30,733
plotsDir = inputFile + "-plots"plotsDir31,757
latexFileName = NonelatexFileName34,808
file = open(inputFile, "r")file38,882
sizes = []sizes39,910
parallel = Trueparallel40,921
block_sizes = {}block_sizes41,937
time_per_block = {}time_per_block42,954
parallel_time = {}parallel_time43,974
parallel_size = {}parallel_size44,993
num_isolated_clique_reductions = {}num_isolated_clique_reductions45,1012
num_vertex_fold_reductions = {}num_vertex_fold_reductions46,1048
num_twins_removed = {}num_twins_removed47,1080
num_twins_folded = {}num_twins_folded48,1103
num_unconfined_reductions = {}num_unconfined_reductions49,1125
num_lp_removed = {}num_lp_removed50,1156
num_diamond_reductions = {}num_diamond_reductions51,1176
sequential_time = {}sequential_time52,1204
num_blocks = 0num_blocks53,1225
num_reps = 0num_reps54,1240
current_rep = 0current_rep55,1253
graphName = ""graphName56,1269
numEdgesString = ""numEdgesString57,1284
numVerticesString = ""numVerticesString58,1304
	words = line.split()words60,1345
		graphName = words[-1]graphName76,2102
		numVerticesString = words[-1]numVerticesString78,2150
		numEdgesString = words[-1]numEdgesString80,2206
		num_reps = int(words[-1])num_reps82,2272
		num_blocks = int(words[-1])num_blocks84,2333
		parallel = Trueparallel99,2987
		current_rep = int(words[-1])current_rep100,3005
		parallel = Falseparallel102,3090
			block_num = int(words[0][:-1])block_num105,3155
			block_num = int(words[0][:-1])block_num112,3484
			current_block_num_isolated_cliques = int(words[-1])current_block_num_isolated_cliques113,3518
			block_num = int(words[0][:-1])block_num116,3718
			current_block_num_vertex_folds = int(words[-1])current_block_num_vertex_folds117,3752
			block_num = int(words[0][:-1])block_num120,3942
			current_block_num_twins_removed = int(words[-1])current_block_num_twins_removed121,3976
			block_num = int(words[0][:-1])block_num124,4158
			current_block_num_twins_folded = int(words[-1])current_block_num_twins_folded125,4192
			block_num = int(words[0][:-1])block_num128,4374
			current_block_num_unconfined_reductions = int(words[-1])current_block_num_unconfined_reductions129,4408
			block_num = int(words[0][:-1])block_num132,4609
			current_block_num_diamond_reductions = int(words[-1])current_block_num_diamond_reductions133,4643
			block_num = int(words[0][:-1])block_num138,4944
			parallel = Falseparallel141,5094
numVertices = int(numVerticesString)numVertices154,5324
sum_vertex_folds = [0] * len(sizes)sum_vertex_folds157,5363
sum_isolated_clique = [0] * len(sizes)sum_isolated_clique158,5399
sum_twins_removed = [0] * len(sizes)sum_twins_removed159,5438
sum_twins_folded = [0] * len(sizes)sum_twins_folded160,5475
sum_unconfined = [0] * len(sizes)sum_unconfined161,5511
sum_diamond = [0] * len(sizes)sum_diamond162,5545
num_lp_sorted = [0] * len(sizes)num_lp_sorted163,5576
vertex_folds_relative = [0] * len(sizes)vertex_folds_relative173,6050
isolated_clique_relative = [0] * len(sizes)isolated_clique_relative174,6091
twins_removed_relative = [0] * len(sizes)twins_removed_relative175,6135
twins_folded_relative= [0] * len(sizes)twins_folded_relative176,6177
unconfined_relative = [0] * len(sizes)unconfined_relative177,6217
diamond_relative = [0] * len(sizes)diamond_relative178,6256
lp_relative = [0] * len(sizes)lp_relative179,6292
index = np.arange(len(sizes))index189,6922
width = 0.75width190,6952
cmap = get_cmap(7)cmap243,8691
index = np.arange(len(sizes))index245,8723
width = 0.75width246,8753
sum_reductions_1 = list(map(operator.add, sum_vertex_folds, sum_isolated_clique))sum_reductions_1249,8950
sum_reductions_2 = list(map(operator.add, sum_reductions_1, sum_twins_removed))sum_reductions_2251,9137
sum_reductions_3 = list(map(operator.add, sum_reductions_2, sum_twins_folded))sum_reductions_3253,9320
sum_reductions_4 = list(map(operator.add, sum_reductions_3, sum_unconfined))sum_reductions_4255,9497
sum_reductions_5 = list(map(operator.add, sum_reductions_4, sum_diamond))sum_reductions_5257,9666
sum_reductions_6 = list(map(operator.add, sum_reductions_5, num_lp_sorted))sum_reductions_6259,9829
parallel_times = [0] * len(sizes)parallel_times268,10181
sequential_times = [0] * len(sizes)sequential_times269,10215
index = np.arange(len(sizes))index273,10373
width = 0.75width274,10403
parallel_sizes = [0] * len(sizes)parallel_sizes286,10776
index = np.arange(len(sizes))index289,10883
width = 0.75width290,10913
reductions_per_second = [0] * len(sizes)reductions_per_second300,11178
index = np.arange(len(sizes))index303,11329
width = 0.75width304,11359
data =  [None] * len(sizes)data315,11654
	latexFile = open(latexFileName, "a")latexFile327,12001
	weight_string = os.path.basename(inputFile)weight_string328,12039

scripts/plotScalingKernelSize.py,561
def get_cmap(N):get_cmap11,267
    def map_index_to_rgb_color(index):map_index_to_rgb_color16,500
def safe_div(x,y):safe_div20,615
def readGraphFile(inputFile, color):readGraphFile25,684
directory = sys.argv[1]directory202,7805
filename = os.path.join(directory, "kernelSize")filename203,7829
cmap = get_cmap(8)cmap205,7879
index = np.arange(7)index207,7923
width = 0.75width208,7944
cmapIndex = 1cmapIndex209,7957
	resultsFilePath = os.path.join(directory, resultsFile)resultsFilePath212,8014
pp = PdfPages(filename + '.pdf')pp225,8448

scripts/getParallelComparisonTable.py,1330
def getPartitionTime(graph, numBlocks):getPartitionTime4,22
def getAkibaRuntimeForSizeFromFile(filename, targetSize):getAkibaRuntimeForSizeFromFile13,470
def getAkibaRuntimeForSize(akibaResultsDir, graphname, targetSize):getAkibaRuntimeForSize24,797
def getAkibaFinalTimeAndSizeFromFile(filename):getAkibaFinalTimeAndSizeFromFile33,1136
def getAkibaFinalTimeAndSize(akibaResultsDir, graphname):getAkibaFinalTimeAndSize44,1452
def getOurTimeAndSize(inputFile):getOurTimeAndSize57,1875
ourResultsDir = sys.argv[1]ourResultsDir173,7591
akibaResultsDir = sys.argv[2]akibaResultsDir174,7619
latexFileName = os.path.join(akibaResultsDir, "parallelComparison.tex")latexFileName176,7650
latexFile = open(latexFileName, "w")latexFile178,7723
        totalTime = ourtime + partitioning_timetotalTime192,8449
        akibaTimeToOurSize = getAkibaRuntimeForSize(akibaResultsDir, filename, oursize)akibaTimeToOurSize194,8591
        filenameToPrint = filename.replace("-sorted", "").replace(".graph", "")filenameToPrint196,8680
        totalTime = ourtime + partitioning_timetotalTime213,9792
        akibaTimeToOurSize = getAkibaRuntimeForSize(akibaResultsDir, filename, oursize)akibaTimeToOurSize215,9934
        filenameToPrint = filename.replace("-sorted", "").replace(".graph", "")filenameToPrint217,10023

scripts/getSequentialComparisonTable.py,806
def getAkibaRuntimeForSizeFromFile(filename, targetSize):getAkibaRuntimeForSizeFromFile4,22
def getAkibaRuntimeForSize(akibaResultsDir, graphname, targetSize):getAkibaRuntimeForSize15,349
def getAkibaFinalTimeAndSizeFromFile(filename):getAkibaFinalTimeAndSizeFromFile24,688
def getAkibaFinalTimeAndSize(akibaResultsDir, graphname):getAkibaFinalTimeAndSize35,1004
def getOurTimeAndSize(inputFile):getOurTimeAndSize48,1427
ourResultsDir = sys.argv[1]ourResultsDir159,6957
akibaResultsDir = sys.argv[2]akibaResultsDir160,6985
latexFileName = os.path.join(akibaResultsDir, "sequentialComparison.tex")latexFileName162,7016
latexFile = open(latexFileName, "w")latexFile164,7091
        akibaTimeToOurSize = getAkibaRuntimeForSize(akibaResultsDir, filename, oursize)akibaTimeToOurSize179,7922

scripts/plot_weight_distribution.py,200
inputFile = sys.argv[1]inputFile8,130
plotsDir = inputFile + "-distribution.png"plotsDir9,154
weights = []weights11,198
file = open(inputFile, "r")file12,211
	weight = int(line)weight14,257

build/CMakeFiles/feature_tests.cxx,130
  const char features[] = {"\n"features2,1
int main(int argc, char** argv) { (void)argv; return features[argc]; }main405,9940

build/CMakeFiles/feature_tests.c,128
  const char features[] = {"\n"features2,1
int main(int argc, char** argv) { (void)argv; return features[argc]; }main34,617

build/CMakeFiles/3.5.1/CompilerIdC/CMakeCCompilerId.c,10138
# define ID_VOID_MAINID_VOID_MAIN6,98
# define COMPILER_ID COMPILER_ID14,303
#  define SIMULATE_ID SIMULATE_ID16,355
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR19,423
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR20,481
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH22,581
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH24,650
#  define COMPILER_VERSION_TWEAK COMPILER_VERSION_TWEAK28,809
#  define SIMULATE_VERSION_MAJOR SIMULATE_VERSION_MAJOR32,931
#  define SIMULATE_VERSION_MINOR SIMULATE_VERSION_MINOR33,984
# define COMPILER_ID COMPILER_ID37,1072
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR38,1105
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR39,1153
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH41,1243
# define COMPILER_ID COMPILER_ID45,1374
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR46,1409
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR47,1481
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH48,1553
# define COMPILER_ID COMPILER_ID51,1654
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR53,1714
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR54,1767
# define COMPILER_ID COMPILER_ID57,1874
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR59,1932
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR60,1987
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH62,2076
# define COMPILER_ID COMPILER_ID66,2167
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR68,2236
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR69,2300
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH71,2389
# define COMPILER_ID COMPILER_ID75,2479
#  define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR78,2564
#  define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR79,2617
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH80,2676
#  define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR83,2770
#  define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR84,2822
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH85,2880
# define COMPILER_ID COMPILER_ID89,2970
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR91,3021
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR92,3072
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH93,3127
# define COMPILER_ID COMPILER_ID96,3205
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR98,3266
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR99,3323
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH100,3385
# define COMPILER_ID COMPILER_ID103,3503
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR105,3553
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR106,3603
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH107,3657
# define COMPILER_ID COMPILER_ID110,3785
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR112,3834
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR113,3884
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH114,3938
# define COMPILER_ID COMPILER_ID117,4065
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR119,4121
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR120,4171
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH121,4225
# define COMPILER_ID COMPILER_ID124,4301
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR125,4328
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR126,4374
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH128,4460
# define COMPILER_ID COMPILER_ID132,4549
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR133,4577
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR134,4629
# define COMPILER_ID COMPILER_ID137,4721
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR139,4791
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR140,4860
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH141,4935
# define COMPILER_ID COMPILER_ID144,5088
# define COMPILER_ID COMPILER_ID147,5145
# define COMPILER_ID COMPILER_ID150,5207
# define COMPILER_ID COMPILER_ID153,5296
#  define SIMULATE_ID SIMULATE_ID155,5353
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR157,5390
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR158,5443
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH159,5496
#  define SIMULATE_VERSION_MAJOR SIMULATE_VERSION_MAJOR162,5602
#  define SIMULATE_VERSION_MINOR SIMULATE_VERSION_MINOR163,5655
# define COMPILER_VERSION_TWEAK COMPILER_VERSION_TWEAK165,5716
# define COMPILER_ID COMPILER_ID168,5803
#  define SIMULATE_ID SIMULATE_ID170,5855
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR172,5892
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR173,5945
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH174,5998
#  define SIMULATE_VERSION_MAJOR SIMULATE_VERSION_MAJOR177,6104
#  define SIMULATE_VERSION_MINOR SIMULATE_VERSION_MINOR178,6157
# define COMPILER_ID COMPILER_ID182,6243
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR183,6270
#  define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR185,6345
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH188,6440
# define COMPILER_ID COMPILER_ID192,6531
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR194,6583
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR195,6635
#   define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH199,6774
#   define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH202,6879
#  define COMPILER_VERSION_TWEAK COMPILER_VERSION_TWEAK206,6982
# define COMPILER_ID COMPILER_ID210,7154
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR213,7258
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR214,7320
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH215,7389
# define COMPILER_ID COMPILER_ID219,7532
# define COMPILER_ID COMPILER_ID222,7591
  # define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR225,7685
  # define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR226,7748
  # define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH227,7815
  # define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR230,7921
  # define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR231,7983
  # define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH232,8049
# define COMPILER_ID COMPILER_ID237,8144
#  define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR239,8191
#  define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR240,8238
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH241,8289
# define COMPILER_ID COMPILER_ID244,8408
#  define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR247,8511
#  define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR248,8575
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH249,8643
#  define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR252,8750
#  define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR253,8810
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH254,8874
# define COMPILER_ID COMPILER_ID262,9135
# define COMPILER_ID COMPILER_ID265,9208
# define COMPILER_ID COMPILER_ID268,9264
char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";info_compiler275,9562
char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";info_simulate277,9649
char const* qnxnto = "INFO" ":" "qnxnto[]";qnxnto281,9743
char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";info_cray285,9838
#define STRINGIFY_HELPER(STRINGIFY_HELPER288,9913
#define STRINGIFY(STRINGIFY289,9944
# define PLATFORM_ID PLATFORM_ID293,10088
# define PLATFORM_ID PLATFORM_ID296,10144
# define PLATFORM_ID PLATFORM_ID299,10202
# define PLATFORM_ID PLATFORM_ID302,10257
# define PLATFORM_ID PLATFORM_ID305,10350
# define PLATFORM_ID PLATFORM_ID308,10431
# define PLATFORM_ID PLATFORM_ID311,10510
# define PLATFORM_ID PLATFORM_ID314,10590
# define PLATFORM_ID PLATFORM_ID317,10659
# define PLATFORM_ID PLATFORM_ID320,10785
# define PLATFORM_ID PLATFORM_ID323,10871
# define PLATFORM_ID PLATFORM_ID326,10943
# define PLATFORM_ID PLATFORM_ID329,10998
# define PLATFORM_ID PLATFORM_ID332,11089
# define PLATFORM_ID PLATFORM_ID335,11164
# define PLATFORM_ID PLATFORM_ID338,11256
# define PLATFORM_ID PLATFORM_ID341,11333
# define PLATFORM_ID PLATFORM_ID344,11431
# define PLATFORM_ID PLATFORM_ID347,11488
# define PLATFORM_ID PLATFORM_ID350,11545
# define PLATFORM_ID PLATFORM_ID353,11615
# define PLATFORM_ID PLATFORM_ID356,11687
# define PLATFORM_ID PLATFORM_ID359,11777
# define PLATFORM_ID PLATFORM_ID362,11875
# define PLATFORM_ID PLATFORM_ID365,11968
#  define PLATFORM_ID PLATFORM_ID369,12049
#  define PLATFORM_ID PLATFORM_ID372,12104
#  define PLATFORM_ID PLATFORM_ID375,12157
#  define PLATFORM_ID PLATFORM_ID378,12214
#  define PLATFORM_ID PLATFORM_ID381,12279
# define PLATFORM_ID PLATFORM_ID385,12342
#  define ARCHITECTURE_ID ARCHITECTURE_ID396,12685
#  define ARCHITECTURE_ID ARCHITECTURE_ID399,12763
#  define ARCHITECTURE_ID ARCHITECTURE_ID402,12820
#   define ARCHITECTURE_ID ARCHITECTURE_ID406,12894
#   define ARCHITECTURE_ID ARCHITECTURE_ID408,12950
#   define ARCHITECTURE_ID ARCHITECTURE_ID410,12994
#  define ARCHITECTURE_ID ARCHITECTURE_ID414,13080
#  define ARCHITECTURE_ID ARCHITECTURE_ID417,13136
#  define ARCHITECTURE_ID ARCHITECTURE_ID420,13203
#  define ARCHITECTURE_ID ARCHITECTURE_ID425,13289
#  define ARCHITECTURE_ID ARCHITECTURE_ID428,13346
#  define ARCHITECTURE_ID ARCHITECTURE_ID431,13413
#  define ARCHITECTURE_ID ARCHITECTURE_ID435,13457
#define DEC(DEC439,13544
#define HEX(HEX450,13893
char const info_version[] = {info_version462,14255
char const info_simulate_version[] = {info_simulate_version480,14752
char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";info_platform500,15421
char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";info_arch501,15489
const char* info_language_dialect_default = "INFO" ":" "dialect_default["info_language_dialect_default506,15557
void main() {}main520,15870
int main(int argc, char* argv[])main522,15891

build/CMakeFiles/3.5.1/CompilerIdCXX/CMakeCXXCompilerId.cpp,9959
# define COMPILER_ID COMPILER_ID13,390
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR15,451
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR16,511
# define COMPILER_ID COMPILER_ID19,622
#  define SIMULATE_ID SIMULATE_ID21,674
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR24,742
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR25,800
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH27,900
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH29,969
#  define COMPILER_VERSION_TWEAK COMPILER_VERSION_TWEAK33,1128
#  define SIMULATE_VERSION_MAJOR SIMULATE_VERSION_MAJOR37,1250
#  define SIMULATE_VERSION_MINOR SIMULATE_VERSION_MINOR38,1303
# define COMPILER_ID COMPILER_ID42,1391
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR43,1424
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR44,1472
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH46,1562
# define COMPILER_ID COMPILER_ID50,1693
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR51,1728
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR52,1800
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH53,1872
# define COMPILER_ID COMPILER_ID56,1973
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR58,2033
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR59,2086
# define COMPILER_ID COMPILER_ID62,2193
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR64,2251
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR65,2306
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH67,2395
# define COMPILER_ID COMPILER_ID71,2486
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR73,2555
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR74,2619
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH76,2708
# define COMPILER_ID COMPILER_ID80,2799
#  define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR83,2886
#  define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR84,2940
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH85,3000
#  define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR88,3095
#  define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR89,3148
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH90,3207
# define COMPILER_ID COMPILER_ID94,3299
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR96,3351
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR97,3403
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH98,3459
# define COMPILER_ID COMPILER_ID101,3540
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR103,3603
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR104,3662
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH105,3726
# define COMPILER_ID COMPILER_ID108,3848
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR110,3900
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR111,3952
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH112,4008
# define COMPILER_ID COMPILER_ID115,4142
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR117,4193
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR118,4245
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH119,4301
# define COMPILER_ID COMPILER_ID122,4434
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR124,4492
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR125,4544
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH126,4600
# define COMPILER_ID COMPILER_ID129,4678
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR130,4705
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR131,4751
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH133,4837
# define COMPILER_ID COMPILER_ID137,4926
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR138,4954
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR139,5006
# define COMPILER_ID COMPILER_ID142,5098
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR144,5168
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR145,5237
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH146,5312
# define COMPILER_ID COMPILER_ID149,5465
# define COMPILER_ID COMPILER_ID152,5528
# define COMPILER_ID COMPILER_ID155,5617
#  define SIMULATE_ID SIMULATE_ID157,5674
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR159,5711
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR160,5764
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH161,5817
#  define SIMULATE_VERSION_MAJOR SIMULATE_VERSION_MAJOR164,5923
#  define SIMULATE_VERSION_MINOR SIMULATE_VERSION_MINOR165,5976
# define COMPILER_VERSION_TWEAK COMPILER_VERSION_TWEAK167,6037
# define COMPILER_ID COMPILER_ID170,6124
#  define SIMULATE_ID SIMULATE_ID172,6176
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR174,6213
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR175,6266
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH176,6319
#  define SIMULATE_VERSION_MAJOR SIMULATE_VERSION_MAJOR179,6425
#  define SIMULATE_VERSION_MINOR SIMULATE_VERSION_MINOR180,6478
# define COMPILER_ID COMPILER_ID184,6564
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR185,6591
#  define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR187,6666
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH190,6761
# define COMPILER_ID COMPILER_ID194,6852
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR196,6904
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR197,6956
#   define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH201,7095
#   define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH204,7200
#  define COMPILER_VERSION_TWEAK COMPILER_VERSION_TWEAK208,7303
# define COMPILER_ID COMPILER_ID212,7475
# define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR215,7579
# define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR216,7641
# define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH217,7710
# define COMPILER_ID COMPILER_ID221,7853
# define COMPILER_ID COMPILER_ID224,7912
  # define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR227,8006
  # define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR228,8069
  # define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH229,8136
  # define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR232,8242
  # define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR233,8304
  # define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH234,8370
# define COMPILER_ID COMPILER_ID239,8512
#  define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR242,8615
#  define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR243,8679
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH244,8747
#  define COMPILER_VERSION_MAJOR COMPILER_VERSION_MAJOR247,8854
#  define COMPILER_VERSION_MINOR COMPILER_VERSION_MINOR248,8914
#  define COMPILER_VERSION_PATCH COMPILER_VERSION_PATCH249,8978
# define COMPILER_ID COMPILER_ID257,9239
# define COMPILER_ID COMPILER_ID260,9312
# define COMPILER_ID COMPILER_ID263,9368
char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";info_compiler270,9666
char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";info_simulate272,9753
char const* qnxnto = "INFO" ":" "qnxnto[]";qnxnto276,9847
char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";info_cray280,9942
#define STRINGIFY_HELPER(STRINGIFY_HELPER283,10017
#define STRINGIFY(STRINGIFY284,10048
# define PLATFORM_ID PLATFORM_ID288,10192
# define PLATFORM_ID PLATFORM_ID291,10248
# define PLATFORM_ID PLATFORM_ID294,10306
# define PLATFORM_ID PLATFORM_ID297,10361
# define PLATFORM_ID PLATFORM_ID300,10454
# define PLATFORM_ID PLATFORM_ID303,10535
# define PLATFORM_ID PLATFORM_ID306,10614
# define PLATFORM_ID PLATFORM_ID309,10694
# define PLATFORM_ID PLATFORM_ID312,10763
# define PLATFORM_ID PLATFORM_ID315,10889
# define PLATFORM_ID PLATFORM_ID318,10975
# define PLATFORM_ID PLATFORM_ID321,11047
# define PLATFORM_ID PLATFORM_ID324,11102
# define PLATFORM_ID PLATFORM_ID327,11193
# define PLATFORM_ID PLATFORM_ID330,11268
# define PLATFORM_ID PLATFORM_ID333,11360
# define PLATFORM_ID PLATFORM_ID336,11437
# define PLATFORM_ID PLATFORM_ID339,11535
# define PLATFORM_ID PLATFORM_ID342,11592
# define PLATFORM_ID PLATFORM_ID345,11649
# define PLATFORM_ID PLATFORM_ID348,11719
# define PLATFORM_ID PLATFORM_ID351,11791
# define PLATFORM_ID PLATFORM_ID354,11881
# define PLATFORM_ID PLATFORM_ID357,11979
# define PLATFORM_ID PLATFORM_ID360,12072
#  define PLATFORM_ID PLATFORM_ID364,12153
#  define PLATFORM_ID PLATFORM_ID367,12208
#  define PLATFORM_ID PLATFORM_ID370,12261
#  define PLATFORM_ID PLATFORM_ID373,12318
#  define PLATFORM_ID PLATFORM_ID376,12383
# define PLATFORM_ID PLATFORM_ID380,12446
#  define ARCHITECTURE_ID ARCHITECTURE_ID391,12789
#  define ARCHITECTURE_ID ARCHITECTURE_ID394,12867
#  define ARCHITECTURE_ID ARCHITECTURE_ID397,12924
#   define ARCHITECTURE_ID ARCHITECTURE_ID401,12998
#   define ARCHITECTURE_ID ARCHITECTURE_ID403,13054
#   define ARCHITECTURE_ID ARCHITECTURE_ID405,13098
#  define ARCHITECTURE_ID ARCHITECTURE_ID409,13184
#  define ARCHITECTURE_ID ARCHITECTURE_ID412,13240
#  define ARCHITECTURE_ID ARCHITECTURE_ID415,13307
#  define ARCHITECTURE_ID ARCHITECTURE_ID420,13393
#  define ARCHITECTURE_ID ARCHITECTURE_ID423,13450
#  define ARCHITECTURE_ID ARCHITECTURE_ID426,13517
#  define ARCHITECTURE_ID ARCHITECTURE_ID430,13561
#define DEC(DEC434,13648
#define HEX(HEX445,13997
char const info_version[] = {info_version457,14359
char const info_simulate_version[] = {info_simulate_version475,14856
char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";info_platform495,15525
char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";info_arch496,15593
const char* info_language_dialect_default = "INFO" ":" "dialect_default["info_language_dialect_default501,15661
int main(int argc, char* argv[])main513,15911

build/Makefile,390
SUFFIXES =SUFFIXES21,544
SHELL = /bin/shSHELL39,902
CMAKE_COMMAND = /usr/bin/cmakeCMAKE_COMMAND42,943
RM = /usr/bin/cmake -E remove -fRM45,1007
EQUALS = =EQUALS48,1076
CMAKE_SOURCE_DIR = /home/dhespe/Documents/parallel_reductions/fast_reductionsCMAKE_SOURCE_DIR51,1145
CMAKE_BINARY_DIR = /home/dhespe/Documents/parallel_reductions/fast_reductions/buildCMAKE_BINARY_DIR54,1280
